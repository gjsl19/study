import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SecurityPolicies } from "../operationsInterfaces";
import { CdnManagementClient } from "../cdnManagementClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { SecurityPolicy, SecurityPoliciesListByProfileOptionalParams, SecurityPoliciesGetOptionalParams, SecurityPoliciesGetResponse, SecurityPoliciesCreateOptionalParams, SecurityPoliciesCreateResponse, SecurityPolicyUpdateParameters, SecurityPoliciesPatchOptionalParams, SecurityPoliciesPatchResponse, SecurityPoliciesDeleteOptionalParams } from "../models";
/** Class containing SecurityPolicies operations. */
export declare class SecurityPoliciesImpl implements SecurityPolicies {
    private readonly client;
    /**
     * Initialize a new instance of the class SecurityPolicies class.
     * @param client Reference to the service client
     */
    constructor(client: CdnManagementClient);
    /**
     * Lists security policies associated with the profile
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param options The options parameters.
     */
    listByProfile(resourceGroupName: string, profileName: string, options?: SecurityPoliciesListByProfileOptionalParams): PagedAsyncIterableIterator<SecurityPolicy>;
    private listByProfilePagingPage;
    private listByProfilePagingAll;
    /**
     * Lists security policies associated with the profile
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param options The options parameters.
     */
    private _listByProfile;
    /**
     * Gets an existing security policy within a profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param securityPolicyName Name of the security policy under the profile.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, profileName: string, securityPolicyName: string, options?: SecurityPoliciesGetOptionalParams): Promise<SecurityPoliciesGetResponse>;
    /**
     * Creates a new security policy within the specified profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param securityPolicyName Name of the security policy under the profile.
     * @param securityPolicy The security policy properties.
     * @param options The options parameters.
     */
    beginCreate(resourceGroupName: string, profileName: string, securityPolicyName: string, securityPolicy: SecurityPolicy, options?: SecurityPoliciesCreateOptionalParams): Promise<PollerLike<PollOperationState<SecurityPoliciesCreateResponse>, SecurityPoliciesCreateResponse>>;
    /**
     * Creates a new security policy within the specified profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param securityPolicyName Name of the security policy under the profile.
     * @param securityPolicy The security policy properties.
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceGroupName: string, profileName: string, securityPolicyName: string, securityPolicy: SecurityPolicy, options?: SecurityPoliciesCreateOptionalParams): Promise<SecurityPoliciesCreateResponse>;
    /**
     * Updates an existing security policy within a profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param securityPolicyName Name of the security policy under the profile.
     * @param securityPolicyUpdateProperties Security policy update properties
     * @param options The options parameters.
     */
    beginPatch(resourceGroupName: string, profileName: string, securityPolicyName: string, securityPolicyUpdateProperties: SecurityPolicyUpdateParameters, options?: SecurityPoliciesPatchOptionalParams): Promise<PollerLike<PollOperationState<SecurityPoliciesPatchResponse>, SecurityPoliciesPatchResponse>>;
    /**
     * Updates an existing security policy within a profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param securityPolicyName Name of the security policy under the profile.
     * @param securityPolicyUpdateProperties Security policy update properties
     * @param options The options parameters.
     */
    beginPatchAndWait(resourceGroupName: string, profileName: string, securityPolicyName: string, securityPolicyUpdateProperties: SecurityPolicyUpdateParameters, options?: SecurityPoliciesPatchOptionalParams): Promise<SecurityPoliciesPatchResponse>;
    /**
     * Deletes an existing security policy within profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param securityPolicyName Name of the security policy under the profile.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, profileName: string, securityPolicyName: string, options?: SecurityPoliciesDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes an existing security policy within profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param securityPolicyName Name of the security policy under the profile.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, profileName: string, securityPolicyName: string, options?: SecurityPoliciesDeleteOptionalParams): Promise<void>;
    /**
     * ListByProfileNext
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param nextLink The nextLink from the previous successful call to the ListByProfile method.
     * @param options The options parameters.
     */
    private _listByProfileNext;
}
//# sourceMappingURL=securityPolicies.d.ts.map