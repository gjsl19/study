import * as coreAuth from '@azure/core-auth';
import * as coreClient from '@azure/core-client';
import { PagedAsyncIterableIterator } from '@azure/core-paging';
import { PollerLike } from '@azure/core-lro';
import { PollOperationState } from '@azure/core-lro';

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Allow** \
 * **Block** \
 * **Log** \
 * **Redirect**
 */
export declare type ActionType = string;

/** Reference to another resource along with its state. */
export declare interface ActivatedResourceReference {
    /** Resource ID. */
    id?: string;
    /**
     * Whether the resource is active or inactive
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly isActive?: boolean;
}

/**
 * Defines values for AfdCertificateType. \
 * {@link KnownAfdCertificateType} can be used interchangeably with AfdCertificateType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **CustomerCertificate** \
 * **ManagedCertificate** \
 * **AzureFirstPartyManagedCertificate**
 */
export declare type AfdCertificateType = string;

/** Interface representing a AfdCustomDomains. */
export declare interface AfdCustomDomains {
    /**
     * Lists existing AzureFrontDoor domains.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile or CDN
     *                    profile which is unique within the resource group.
     * @param options The options parameters.
     */
    listByProfile(resourceGroupName: string, profileName: string, options?: AfdCustomDomainsListByProfileOptionalParams): PagedAsyncIterableIterator<AFDDomain>;
    /**
     * Gets an existing AzureFrontDoor domain with the specified domain name under the specified
     * subscription, resource group and profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param customDomainName Name of the domain under the profile which is unique globally.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, profileName: string, customDomainName: string, options?: AfdCustomDomainsGetOptionalParams): Promise<AfdCustomDomainsGetResponse>;
    /**
     * Creates a new domain within the specified profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param customDomainName Name of the domain under the profile which is unique globally
     * @param customDomain Domain properties
     * @param options The options parameters.
     */
    beginCreate(resourceGroupName: string, profileName: string, customDomainName: string, customDomain: AFDDomain, options?: AfdCustomDomainsCreateOptionalParams): Promise<PollerLike<PollOperationState<AfdCustomDomainsCreateResponse>, AfdCustomDomainsCreateResponse>>;
    /**
     * Creates a new domain within the specified profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param customDomainName Name of the domain under the profile which is unique globally
     * @param customDomain Domain properties
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceGroupName: string, profileName: string, customDomainName: string, customDomain: AFDDomain, options?: AfdCustomDomainsCreateOptionalParams): Promise<AfdCustomDomainsCreateResponse>;
    /**
     * Updates an existing domain within a profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param customDomainName Name of the domain under the profile which is unique globally
     * @param customDomainUpdateProperties Domain properties
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, profileName: string, customDomainName: string, customDomainUpdateProperties: AFDDomainUpdateParameters, options?: AfdCustomDomainsUpdateOptionalParams): Promise<PollerLike<PollOperationState<AfdCustomDomainsUpdateResponse>, AfdCustomDomainsUpdateResponse>>;
    /**
     * Updates an existing domain within a profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param customDomainName Name of the domain under the profile which is unique globally
     * @param customDomainUpdateProperties Domain properties
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, profileName: string, customDomainName: string, customDomainUpdateProperties: AFDDomainUpdateParameters, options?: AfdCustomDomainsUpdateOptionalParams): Promise<AfdCustomDomainsUpdateResponse>;
    /**
     * Deletes an existing AzureFrontDoor domain with the specified domain name under the specified
     * subscription, resource group and profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param customDomainName Name of the domain under the profile which is unique globally.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, profileName: string, customDomainName: string, options?: AfdCustomDomainsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes an existing AzureFrontDoor domain with the specified domain name under the specified
     * subscription, resource group and profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param customDomainName Name of the domain under the profile which is unique globally.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, profileName: string, customDomainName: string, options?: AfdCustomDomainsDeleteOptionalParams): Promise<void>;
    /**
     * Updates the domain validation token.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param customDomainName Name of the domain under the profile which is unique globally.
     * @param options The options parameters.
     */
    beginRefreshValidationToken(resourceGroupName: string, profileName: string, customDomainName: string, options?: AfdCustomDomainsRefreshValidationTokenOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Updates the domain validation token.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param customDomainName Name of the domain under the profile which is unique globally.
     * @param options The options parameters.
     */
    beginRefreshValidationTokenAndWait(resourceGroupName: string, profileName: string, customDomainName: string, options?: AfdCustomDomainsRefreshValidationTokenOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface AfdCustomDomainsCreateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the create operation. */
export declare type AfdCustomDomainsCreateResponse = AFDDomain;

/** Optional parameters. */
export declare interface AfdCustomDomainsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface AfdCustomDomainsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type AfdCustomDomainsGetResponse = AFDDomain;

/** Optional parameters. */
export declare interface AfdCustomDomainsListByProfileNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByProfileNext operation. */
export declare type AfdCustomDomainsListByProfileNextResponse = AFDDomainListResult;

/** Optional parameters. */
export declare interface AfdCustomDomainsListByProfileOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByProfile operation. */
export declare type AfdCustomDomainsListByProfileResponse = AFDDomainListResult;

/** Optional parameters. */
export declare interface AfdCustomDomainsRefreshValidationTokenOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface AfdCustomDomainsUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the update operation. */
export declare type AfdCustomDomainsUpdateResponse = AFDDomain;

/** Friendly domain name mapping to the endpoint hostname that the customer provides for branding purposes, e.g. www.contoso.com. */
export declare interface AFDDomain extends ProxyResource {
    /**
     * The name of the profile which holds the domain.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly profileName?: string;
    /** The configuration specifying how to enable HTTPS for the domain - using AzureFrontDoor managed certificate or user's own certificate. If not specified, enabling ssl uses AzureFrontDoor managed certificate by default. */
    tlsSettings?: AFDDomainHttpsParameters;
    /** Resource reference to the Azure DNS zone */
    azureDnsZone?: ResourceReference;
    /** Resource reference to the Azure resource where custom domain ownership was prevalidated */
    preValidatedCustomDomainResourceId?: ResourceReference;
    /**
     * Provisioning status
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: AfdProvisioningState;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly deploymentStatus?: DeploymentStatus;
    /**
     * Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step. DCV stands for DomainControlValidation.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly domainValidationState?: DomainValidationState;
    /** The host name of the domain. Must be a domain name. */
    hostName?: string;
    /**
     * Values the customer needs to validate domain ownership
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly validationProperties?: DomainValidationProperties;
}

/** The JSON object that contains the properties to secure a domain. */
export declare interface AFDDomainHttpsParameters {
    /** Defines the source of the SSL certificate. */
    certificateType: AfdCertificateType;
    /** TLS protocol version that will be used for Https */
    minimumTlsVersion?: AfdMinimumTlsVersion;
    /** Resource reference to the secret. ie. subs/rg/profile/secret */
    secret?: ResourceReference;
}

/** Result of the request to list domains. It contains a list of domain objects and a URL link to get the next set of results. */
export declare interface AFDDomainListResult {
    /**
     * List of AzureFrontDoor domains within a profile.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: AFDDomain[];
    /** URL to get the next set of domain objects if there are any. */
    nextLink?: string;
}

/** The JSON object that contains the properties of the domain to create. */
export declare interface AFDDomainProperties extends AFDDomainUpdatePropertiesParameters, AFDStateProperties {
    /**
     * Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step. DCV stands for DomainControlValidation.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly domainValidationState?: DomainValidationState;
    /** The host name of the domain. Must be a domain name. */
    hostName: string;
    /**
     * Values the customer needs to validate domain ownership
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly validationProperties?: DomainValidationProperties;
}

/** The domain JSON object required for domain creation or update. */
export declare interface AFDDomainUpdateParameters {
    /**
     * The name of the profile which holds the domain.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly profileName?: string;
    /** The configuration specifying how to enable HTTPS for the domain - using AzureFrontDoor managed certificate or user's own certificate. If not specified, enabling ssl uses AzureFrontDoor managed certificate by default. */
    tlsSettings?: AFDDomainHttpsParameters;
    /** Resource reference to the Azure DNS zone */
    azureDnsZone?: ResourceReference;
    /** Resource reference to the Azure resource where custom domain ownership was prevalidated */
    preValidatedCustomDomainResourceId?: ResourceReference;
}

/** The JSON object that contains the properties of the domain to create. */
export declare interface AFDDomainUpdatePropertiesParameters {
    /**
     * The name of the profile which holds the domain.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly profileName?: string;
    /** The configuration specifying how to enable HTTPS for the domain - using AzureFrontDoor managed certificate or user's own certificate. If not specified, enabling ssl uses AzureFrontDoor managed certificate by default. */
    tlsSettings?: AFDDomainHttpsParameters;
    /** Resource reference to the Azure DNS zone */
    azureDnsZone?: ResourceReference;
    /** Resource reference to the Azure resource where custom domain ownership was prevalidated */
    preValidatedCustomDomainResourceId?: ResourceReference;
}

/** CDN endpoint is the entity within a CDN profile containing configuration information such as origin, protocol, content caching and delivery behavior. The AzureFrontDoor endpoint uses the URL format <endpointname>.azureedge.net. */
export declare interface AFDEndpoint extends TrackedResource {
    /**
     * The name of the profile which holds the endpoint.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly profileName?: string;
    /** Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled' */
    enabledState?: EnabledState;
    /**
     * Provisioning status
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: AfdProvisioningState;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly deploymentStatus?: DeploymentStatus;
    /**
     * The host name of the endpoint structured as {endpointName}.{DNSZone}, e.g. contoso.azureedge.net
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly hostName?: string;
    /** Indicates the endpoint name reuse scope. The default value is TenantReuse. */
    autoGeneratedDomainNameLabelScope?: AutoGeneratedDomainNameLabelScope;
}

/** Result of the request to list endpoints. It contains a list of endpoint objects and a URL link to get the next set of results. */
export declare interface AFDEndpointListResult {
    /**
     * List of AzureFrontDoor endpoints within a profile
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: AFDEndpoint[];
    /** URL to get the next set of endpoint objects if there is any. */
    nextLink?: string;
}

/** The JSON object that contains the properties required to create an endpoint. */
export declare interface AFDEndpointProperties extends AFDEndpointPropertiesUpdateParameters, AFDStateProperties {
    /**
     * The host name of the endpoint structured as {endpointName}.{DNSZone}, e.g. contoso.azureedge.net
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly hostName?: string;
    /** Indicates the endpoint name reuse scope. The default value is TenantReuse. */
    autoGeneratedDomainNameLabelScope?: AutoGeneratedDomainNameLabelScope;
}

/** The JSON object containing endpoint update parameters. */
export declare interface AFDEndpointPropertiesUpdateParameters {
    /**
     * The name of the profile which holds the endpoint.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly profileName?: string;
    /** Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled' */
    enabledState?: EnabledState;
}

/**
 * Defines values for AFDEndpointProtocols. \
 * {@link KnownAFDEndpointProtocols} can be used interchangeably with AFDEndpointProtocols,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Http** \
 * **Https**
 */
export declare type AFDEndpointProtocols = string;

/** Interface representing a AfdEndpoints. */
export declare interface AfdEndpoints {
    /**
     * Lists existing AzureFrontDoor endpoints.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param options The options parameters.
     */
    listByProfile(resourceGroupName: string, profileName: string, options?: AfdEndpointsListByProfileOptionalParams): PagedAsyncIterableIterator<AFDEndpoint>;
    /**
     * Checks the quota and actual usage of the given AzureFrontDoor endpoint under the given CDN profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param options The options parameters.
     */
    listResourceUsage(resourceGroupName: string, profileName: string, endpointName: string, options?: AfdEndpointsListResourceUsageOptionalParams): PagedAsyncIterableIterator<Usage>;
    /**
     * Gets an existing AzureFrontDoor endpoint with the specified endpoint name under the specified
     * subscription, resource group and profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, profileName: string, endpointName: string, options?: AfdEndpointsGetOptionalParams): Promise<AfdEndpointsGetResponse>;
    /**
     * Creates a new AzureFrontDoor endpoint with the specified endpoint name under the specified
     * subscription, resource group and profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param endpoint Endpoint properties
     * @param options The options parameters.
     */
    beginCreate(resourceGroupName: string, profileName: string, endpointName: string, endpoint: AFDEndpoint, options?: AfdEndpointsCreateOptionalParams): Promise<PollerLike<PollOperationState<AfdEndpointsCreateResponse>, AfdEndpointsCreateResponse>>;
    /**
     * Creates a new AzureFrontDoor endpoint with the specified endpoint name under the specified
     * subscription, resource group and profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param endpoint Endpoint properties
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceGroupName: string, profileName: string, endpointName: string, endpoint: AFDEndpoint, options?: AfdEndpointsCreateOptionalParams): Promise<AfdEndpointsCreateResponse>;
    /**
     * Updates an existing AzureFrontDoor endpoint with the specified endpoint name under the specified
     * subscription, resource group and profile. Only tags can be updated after creating an endpoint. To
     * update origins, use the Update Origin operation. To update origin groups, use the Update Origin
     * group operation. To update domains, use the Update Custom Domain operation.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param endpointUpdateProperties Endpoint update properties
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, profileName: string, endpointName: string, endpointUpdateProperties: AFDEndpointUpdateParameters, options?: AfdEndpointsUpdateOptionalParams): Promise<PollerLike<PollOperationState<AfdEndpointsUpdateResponse>, AfdEndpointsUpdateResponse>>;
    /**
     * Updates an existing AzureFrontDoor endpoint with the specified endpoint name under the specified
     * subscription, resource group and profile. Only tags can be updated after creating an endpoint. To
     * update origins, use the Update Origin operation. To update origin groups, use the Update Origin
     * group operation. To update domains, use the Update Custom Domain operation.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param endpointUpdateProperties Endpoint update properties
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, profileName: string, endpointName: string, endpointUpdateProperties: AFDEndpointUpdateParameters, options?: AfdEndpointsUpdateOptionalParams): Promise<AfdEndpointsUpdateResponse>;
    /**
     * Deletes an existing AzureFrontDoor endpoint with the specified endpoint name under the specified
     * subscription, resource group and profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, profileName: string, endpointName: string, options?: AfdEndpointsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes an existing AzureFrontDoor endpoint with the specified endpoint name under the specified
     * subscription, resource group and profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, profileName: string, endpointName: string, options?: AfdEndpointsDeleteOptionalParams): Promise<void>;
    /**
     * Removes a content from AzureFrontDoor.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param contents The list of paths to the content and the list of linked domains to be purged. Path
     *                 can be a full URL, e.g. '/pictures/city.png' which removes a single file, or a directory with a
     *                 wildcard, e.g. '/pictures/*' which removes all folders and files in the directory.
     * @param options The options parameters.
     */
    beginPurgeContent(resourceGroupName: string, profileName: string, endpointName: string, contents: AfdPurgeParameters, options?: AfdEndpointsPurgeContentOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Removes a content from AzureFrontDoor.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param contents The list of paths to the content and the list of linked domains to be purged. Path
     *                 can be a full URL, e.g. '/pictures/city.png' which removes a single file, or a directory with a
     *                 wildcard, e.g. '/pictures/*' which removes all folders and files in the directory.
     * @param options The options parameters.
     */
    beginPurgeContentAndWait(resourceGroupName: string, profileName: string, endpointName: string, contents: AfdPurgeParameters, options?: AfdEndpointsPurgeContentOptionalParams): Promise<void>;
    /**
     * Validates the custom domain mapping to ensure it maps to the correct CDN endpoint in DNS.This api
     * isn't work for apex domain.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param customDomainProperties Custom domain to be validated.
     * @param options The options parameters.
     */
    validateCustomDomain(resourceGroupName: string, profileName: string, endpointName: string, customDomainProperties: ValidateCustomDomainInput, options?: AfdEndpointsValidateCustomDomainOptionalParams): Promise<AfdEndpointsValidateCustomDomainResponse>;
}

/** Optional parameters. */
export declare interface AfdEndpointsCreateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the create operation. */
export declare type AfdEndpointsCreateResponse = AFDEndpoint;

/** Optional parameters. */
export declare interface AfdEndpointsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface AfdEndpointsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type AfdEndpointsGetResponse = AFDEndpoint;

/** Optional parameters. */
export declare interface AfdEndpointsListByProfileNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByProfileNext operation. */
export declare type AfdEndpointsListByProfileNextResponse = AFDEndpointListResult;

/** Optional parameters. */
export declare interface AfdEndpointsListByProfileOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByProfile operation. */
export declare type AfdEndpointsListByProfileResponse = AFDEndpointListResult;

/** Optional parameters. */
export declare interface AfdEndpointsListResourceUsageNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listResourceUsageNext operation. */
export declare type AfdEndpointsListResourceUsageNextResponse = UsagesListResult;

/** Optional parameters. */
export declare interface AfdEndpointsListResourceUsageOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listResourceUsage operation. */
export declare type AfdEndpointsListResourceUsageResponse = UsagesListResult;

/** Optional parameters. */
export declare interface AfdEndpointsPurgeContentOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface AfdEndpointsUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the update operation. */
export declare type AfdEndpointsUpdateResponse = AFDEndpoint;

/** Optional parameters. */
export declare interface AfdEndpointsValidateCustomDomainOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the validateCustomDomain operation. */
export declare type AfdEndpointsValidateCustomDomainResponse = ValidateCustomDomainOutput;

/** Properties required to create or update an endpoint. */
export declare interface AFDEndpointUpdateParameters {
    /** Endpoint tags. */
    tags?: {
        [propertyName: string]: string;
    };
    /**
     * The name of the profile which holds the endpoint.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly profileName?: string;
    /** Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled' */
    enabledState?: EnabledState;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export declare interface AfdErrorResponse {
    /** The error object. */
    error?: ErrorDetail;
}

/** Defines values for AfdMinimumTlsVersion. */
export declare type AfdMinimumTlsVersion = "TLS10" | "TLS12";

/** CDN origin is the source of the content being delivered via CDN. When the edge nodes represented by an endpoint do not have the requested content cached, they attempt to fetch it from one or more of the configured origins. */
export declare interface AFDOrigin extends ProxyResource {
    /**
     * The name of the origin group which contains this origin.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly originGroupName?: string;
    /** Resource reference to the Azure origin resource. */
    azureOrigin?: ResourceReference;
    /** The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint. */
    hostName?: string;
    /** The value of the HTTP port. Must be between 1 and 65535. */
    httpPort?: number;
    /** The value of the HTTPS port. Must be between 1 and 65535. */
    httpsPort?: number;
    /** The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint */
    originHostHeader?: string;
    /** Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5 */
    priority?: number;
    /** Weight of the origin in given origin group for load balancing. Must be between 1 and 1000 */
    weight?: number;
    /** The properties of the private link resource for private origin. */
    sharedPrivateLinkResource?: SharedPrivateLinkResourceProperties;
    /** Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool. */
    enabledState?: EnabledState;
    /** Whether to enable certificate name check at origin level */
    enforceCertificateNameCheck?: boolean;
    /**
     * Provisioning status
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: AfdProvisioningState;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly deploymentStatus?: DeploymentStatus;
}

/** AFDOrigin group comprising of origins is used for load balancing to origins when the content cannot be served from CDN. */
export declare interface AFDOriginGroup extends ProxyResource {
    /**
     * The name of the profile which holds the origin group.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly profileName?: string;
    /** Load balancing settings for a backend pool */
    loadBalancingSettings?: LoadBalancingSettingsParameters;
    /** Health probe settings to the origin that is used to determine the health of the origin. */
    healthProbeSettings?: HealthProbeParameters;
    /** Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported. */
    trafficRestorationTimeToHealedOrNewEndpointsInMinutes?: number;
    /** Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled' */
    sessionAffinityState?: EnabledState;
    /**
     * Provisioning status
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: AfdProvisioningState;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly deploymentStatus?: DeploymentStatus;
}

/** Result of the request to list origin groups. It contains a list of origin groups objects and a URL link to get the next set of results. */
export declare interface AFDOriginGroupListResult {
    /**
     * List of CDN origin groups within an endpoint
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: AFDOriginGroup[];
    /** URL to get the next set of origin objects if there are any. */
    nextLink?: string;
}

/** The JSON object that contains the properties of the origin group. */
export declare interface AFDOriginGroupProperties extends AFDOriginGroupUpdatePropertiesParameters, AFDStateProperties {
}

/** Interface representing a AfdOriginGroups. */
export declare interface AfdOriginGroups {
    /**
     * Lists all of the existing origin groups within a profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param options The options parameters.
     */
    listByProfile(resourceGroupName: string, profileName: string, options?: AfdOriginGroupsListByProfileOptionalParams): PagedAsyncIterableIterator<AFDOriginGroup>;
    /**
     * Checks the quota and actual usage of the given AzureFrontDoor origin group under the given CDN
     * profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param originGroupName Name of the origin group which is unique within the endpoint.
     * @param options The options parameters.
     */
    listResourceUsage(resourceGroupName: string, profileName: string, originGroupName: string, options?: AfdOriginGroupsListResourceUsageOptionalParams): PagedAsyncIterableIterator<Usage>;
    /**
     * Gets an existing origin group within a profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param originGroupName Name of the origin group which is unique within the endpoint.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, profileName: string, originGroupName: string, options?: AfdOriginGroupsGetOptionalParams): Promise<AfdOriginGroupsGetResponse>;
    /**
     * Creates a new origin group within the specified profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param originGroupName Name of the origin group which is unique within the endpoint.
     * @param originGroup Origin group properties
     * @param options The options parameters.
     */
    beginCreate(resourceGroupName: string, profileName: string, originGroupName: string, originGroup: AFDOriginGroup, options?: AfdOriginGroupsCreateOptionalParams): Promise<PollerLike<PollOperationState<AfdOriginGroupsCreateResponse>, AfdOriginGroupsCreateResponse>>;
    /**
     * Creates a new origin group within the specified profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param originGroupName Name of the origin group which is unique within the endpoint.
     * @param originGroup Origin group properties
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceGroupName: string, profileName: string, originGroupName: string, originGroup: AFDOriginGroup, options?: AfdOriginGroupsCreateOptionalParams): Promise<AfdOriginGroupsCreateResponse>;
    /**
     * Updates an existing origin group within a profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param originGroupName Name of the origin group which is unique within the profile.
     * @param originGroupUpdateProperties Origin group properties
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, profileName: string, originGroupName: string, originGroupUpdateProperties: AFDOriginGroupUpdateParameters, options?: AfdOriginGroupsUpdateOptionalParams): Promise<PollerLike<PollOperationState<AfdOriginGroupsUpdateResponse>, AfdOriginGroupsUpdateResponse>>;
    /**
     * Updates an existing origin group within a profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param originGroupName Name of the origin group which is unique within the profile.
     * @param originGroupUpdateProperties Origin group properties
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, profileName: string, originGroupName: string, originGroupUpdateProperties: AFDOriginGroupUpdateParameters, options?: AfdOriginGroupsUpdateOptionalParams): Promise<AfdOriginGroupsUpdateResponse>;
    /**
     * Deletes an existing origin group within a profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param originGroupName Name of the origin group which is unique within the profile.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, profileName: string, originGroupName: string, options?: AfdOriginGroupsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes an existing origin group within a profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param originGroupName Name of the origin group which is unique within the profile.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, profileName: string, originGroupName: string, options?: AfdOriginGroupsDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface AfdOriginGroupsCreateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the create operation. */
export declare type AfdOriginGroupsCreateResponse = AFDOriginGroup;

/** Optional parameters. */
export declare interface AfdOriginGroupsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface AfdOriginGroupsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type AfdOriginGroupsGetResponse = AFDOriginGroup;

/** Optional parameters. */
export declare interface AfdOriginGroupsListByProfileNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByProfileNext operation. */
export declare type AfdOriginGroupsListByProfileNextResponse = AFDOriginGroupListResult;

/** Optional parameters. */
export declare interface AfdOriginGroupsListByProfileOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByProfile operation. */
export declare type AfdOriginGroupsListByProfileResponse = AFDOriginGroupListResult;

/** Optional parameters. */
export declare interface AfdOriginGroupsListResourceUsageNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listResourceUsageNext operation. */
export declare type AfdOriginGroupsListResourceUsageNextResponse = UsagesListResult;

/** Optional parameters. */
export declare interface AfdOriginGroupsListResourceUsageOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listResourceUsage operation. */
export declare type AfdOriginGroupsListResourceUsageResponse = UsagesListResult;

/** Optional parameters. */
export declare interface AfdOriginGroupsUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the update operation. */
export declare type AfdOriginGroupsUpdateResponse = AFDOriginGroup;

/** AFDOrigin group properties needed for origin group creation or update. */
export declare interface AFDOriginGroupUpdateParameters {
    /**
     * The name of the profile which holds the origin group.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly profileName?: string;
    /** Load balancing settings for a backend pool */
    loadBalancingSettings?: LoadBalancingSettingsParameters;
    /** Health probe settings to the origin that is used to determine the health of the origin. */
    healthProbeSettings?: HealthProbeParameters;
    /** Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported. */
    trafficRestorationTimeToHealedOrNewEndpointsInMinutes?: number;
    /** Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled' */
    sessionAffinityState?: EnabledState;
}

/** The JSON object that contains the properties of the origin group. */
export declare interface AFDOriginGroupUpdatePropertiesParameters {
    /**
     * The name of the profile which holds the origin group.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly profileName?: string;
    /** Load balancing settings for a backend pool */
    loadBalancingSettings?: LoadBalancingSettingsParameters;
    /** Health probe settings to the origin that is used to determine the health of the origin. */
    healthProbeSettings?: HealthProbeParameters;
    /** Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported. */
    trafficRestorationTimeToHealedOrNewEndpointsInMinutes?: number;
    /** Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled' */
    sessionAffinityState?: EnabledState;
}

/** Result of the request to list origins. It contains a list of origin objects and a URL link to get the next set of results. */
export declare interface AFDOriginListResult {
    /**
     * List of CDN origins within an endpoint
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: AFDOrigin[];
    /** URL to get the next set of origin objects if there are any. */
    nextLink?: string;
}

/** The JSON object that contains the properties of the origin. */
export declare interface AFDOriginProperties extends AFDOriginUpdatePropertiesParameters, AFDStateProperties {
}

/** Interface representing a AfdOrigins. */
export declare interface AfdOrigins {
    /**
     * Lists all of the existing origins within an origin group.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param originGroupName Name of the origin group which is unique within the profile.
     * @param options The options parameters.
     */
    listByOriginGroup(resourceGroupName: string, profileName: string, originGroupName: string, options?: AfdOriginsListByOriginGroupOptionalParams): PagedAsyncIterableIterator<AFDOrigin>;
    /**
     * Gets an existing origin within an origin group.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param originGroupName Name of the origin group which is unique within the profile.
     * @param originName Name of the origin which is unique within the profile.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, profileName: string, originGroupName: string, originName: string, options?: AfdOriginsGetOptionalParams): Promise<AfdOriginsGetResponse>;
    /**
     * Creates a new origin within the specified origin group.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param originGroupName Name of the origin group which is unique within the profile.
     * @param originName Name of the origin that is unique within the profile.
     * @param origin Origin properties
     * @param options The options parameters.
     */
    beginCreate(resourceGroupName: string, profileName: string, originGroupName: string, originName: string, origin: AFDOrigin, options?: AfdOriginsCreateOptionalParams): Promise<PollerLike<PollOperationState<AfdOriginsCreateResponse>, AfdOriginsCreateResponse>>;
    /**
     * Creates a new origin within the specified origin group.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param originGroupName Name of the origin group which is unique within the profile.
     * @param originName Name of the origin that is unique within the profile.
     * @param origin Origin properties
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceGroupName: string, profileName: string, originGroupName: string, originName: string, origin: AFDOrigin, options?: AfdOriginsCreateOptionalParams): Promise<AfdOriginsCreateResponse>;
    /**
     * Updates an existing origin within an origin group.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param originGroupName Name of the origin group which is unique within the profile.
     * @param originName Name of the origin which is unique within the profile.
     * @param originUpdateProperties Origin properties
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, profileName: string, originGroupName: string, originName: string, originUpdateProperties: AFDOriginUpdateParameters, options?: AfdOriginsUpdateOptionalParams): Promise<PollerLike<PollOperationState<AfdOriginsUpdateResponse>, AfdOriginsUpdateResponse>>;
    /**
     * Updates an existing origin within an origin group.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param originGroupName Name of the origin group which is unique within the profile.
     * @param originName Name of the origin which is unique within the profile.
     * @param originUpdateProperties Origin properties
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, profileName: string, originGroupName: string, originName: string, originUpdateProperties: AFDOriginUpdateParameters, options?: AfdOriginsUpdateOptionalParams): Promise<AfdOriginsUpdateResponse>;
    /**
     * Deletes an existing origin within an origin group.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param originGroupName Name of the origin group which is unique within the profile.
     * @param originName Name of the origin which is unique within the profile.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, profileName: string, originGroupName: string, originName: string, options?: AfdOriginsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes an existing origin within an origin group.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param originGroupName Name of the origin group which is unique within the profile.
     * @param originName Name of the origin which is unique within the profile.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, profileName: string, originGroupName: string, originName: string, options?: AfdOriginsDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface AfdOriginsCreateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the create operation. */
export declare type AfdOriginsCreateResponse = AFDOrigin;

/** Optional parameters. */
export declare interface AfdOriginsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface AfdOriginsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type AfdOriginsGetResponse = AFDOrigin;

/** Optional parameters. */
export declare interface AfdOriginsListByOriginGroupNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByOriginGroupNext operation. */
export declare type AfdOriginsListByOriginGroupNextResponse = AFDOriginListResult;

/** Optional parameters. */
export declare interface AfdOriginsListByOriginGroupOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByOriginGroup operation. */
export declare type AfdOriginsListByOriginGroupResponse = AFDOriginListResult;

/** Optional parameters. */
export declare interface AfdOriginsUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the update operation. */
export declare type AfdOriginsUpdateResponse = AFDOrigin;

/** AFDOrigin properties needed for origin update. */
export declare interface AFDOriginUpdateParameters {
    /**
     * The name of the origin group which contains this origin.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly originGroupName?: string;
    /** Resource reference to the Azure origin resource. */
    azureOrigin?: ResourceReference;
    /** The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint. */
    hostName?: string;
    /** The value of the HTTP port. Must be between 1 and 65535. */
    httpPort?: number;
    /** The value of the HTTPS port. Must be between 1 and 65535. */
    httpsPort?: number;
    /** The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint */
    originHostHeader?: string;
    /** Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5 */
    priority?: number;
    /** Weight of the origin in given origin group for load balancing. Must be between 1 and 1000 */
    weight?: number;
    /** The properties of the private link resource for private origin. */
    sharedPrivateLinkResource?: SharedPrivateLinkResourceProperties;
    /** Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool. */
    enabledState?: EnabledState;
    /** Whether to enable certificate name check at origin level */
    enforceCertificateNameCheck?: boolean;
}

/** The JSON object that contains the properties of the origin. */
export declare interface AFDOriginUpdatePropertiesParameters {
    /**
     * The name of the origin group which contains this origin.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly originGroupName?: string;
    /** Resource reference to the Azure origin resource. */
    azureOrigin?: ResourceReference;
    /** The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint. */
    hostName?: string;
    /** The value of the HTTP port. Must be between 1 and 65535. */
    httpPort?: number;
    /** The value of the HTTPS port. Must be between 1 and 65535. */
    httpsPort?: number;
    /** The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint */
    originHostHeader?: string;
    /** Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5 */
    priority?: number;
    /** Weight of the origin in given origin group for load balancing. Must be between 1 and 1000 */
    weight?: number;
    /** The properties of the private link resource for private origin. */
    sharedPrivateLinkResource?: SharedPrivateLinkResourceProperties;
    /** Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool. */
    enabledState?: EnabledState;
    /** Whether to enable certificate name check at origin level */
    enforceCertificateNameCheck?: boolean;
}

/** Interface representing a AfdProfiles. */
export declare interface AfdProfiles {
    /**
     * Checks the quota and actual usage of AzureFrontDoor endpoints under the given CDN profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile
     *                    which is unique within the resource group.
     * @param options The options parameters.
     */
    listResourceUsage(resourceGroupName: string, profileName: string, options?: AfdProfilesListResourceUsageOptionalParams): PagedAsyncIterableIterator<Usage>;
    /**
     * Check the name availability of a host name.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile
     *                    which is unique within the resource group.
     * @param checkHostNameAvailabilityInput Custom domain to be validated.
     * @param options The options parameters.
     */
    checkHostNameAvailability(resourceGroupName: string, profileName: string, checkHostNameAvailabilityInput: CheckHostNameAvailabilityInput, options?: AfdProfilesCheckHostNameAvailabilityOptionalParams): Promise<AfdProfilesCheckHostNameAvailabilityResponse>;
}

/** Optional parameters. */
export declare interface AfdProfilesCheckHostNameAvailabilityOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the checkHostNameAvailability operation. */
export declare type AfdProfilesCheckHostNameAvailabilityResponse = CheckNameAvailabilityOutput;

/** Optional parameters. */
export declare interface AfdProfilesListResourceUsageNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listResourceUsageNext operation. */
export declare type AfdProfilesListResourceUsageNextResponse = UsagesListResult;

/** Optional parameters. */
export declare interface AfdProfilesListResourceUsageOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listResourceUsage operation. */
export declare type AfdProfilesListResourceUsageResponse = UsagesListResult;

/**
 * Defines values for AfdProvisioningState. \
 * {@link KnownAfdProvisioningState} can be used interchangeably with AfdProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Failed** \
 * **Updating** \
 * **Deleting** \
 * **Creating**
 */
export declare type AfdProvisioningState = string;

/** Parameters required for content purge. */
export declare interface AfdPurgeParameters {
    /** The path to the content to be purged. Can describe a file path or a wild card directory. */
    contentPaths: string[];
    /** List of domains. */
    domains?: string[];
}

/**
 * Defines values for AfdQueryStringCachingBehavior. \
 * {@link KnownAfdQueryStringCachingBehavior} can be used interchangeably with AfdQueryStringCachingBehavior,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **IgnoreQueryString** \
 * **UseQueryString** \
 * **IgnoreSpecifiedQueryStrings** \
 * **IncludeSpecifiedQueryStrings**
 */
export declare type AfdQueryStringCachingBehavior = string;

/** Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object. */
export declare interface AfdRouteCacheConfiguration {
    /** Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore specific query strings, cache every request with a unique URL, or cache specific query strings. */
    queryStringCachingBehavior?: AfdQueryStringCachingBehavior;
    /** query parameters to include or exclude (comma separated). */
    queryParameters?: string;
    /** compression settings. */
    compressionSettings?: CompressionSettings;
}

/** The tracking states for afd resources. */
export declare interface AFDStateProperties {
    /**
     * Provisioning status
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: AfdProvisioningState;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly deploymentStatus?: DeploymentStatus;
}

/**
 * Defines values for Algorithm. \
 * {@link KnownAlgorithm} can be used interchangeably with Algorithm,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **SHA256**
 */
declare type Algorithm_2 = string;
export { Algorithm_2 as Algorithm }

/**
 * Defines values for AutoGeneratedDomainNameLabelScope. \
 * {@link KnownAutoGeneratedDomainNameLabelScope} can be used interchangeably with AutoGeneratedDomainNameLabelScope,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **TenantReuse** \
 * **SubscriptionReuse** \
 * **ResourceGroupReuse** \
 * **NoReuse**
 */
export declare type AutoGeneratedDomainNameLabelScope = string;

/** Azure FirstParty Managed Certificate provided by other first party resource providers to enable HTTPS. */
export declare interface AzureFirstPartyManagedCertificate extends Certificate {
}

/** Azure FirstParty Managed Certificate provided by other first party resource providers to enable HTTPS. */
export declare interface AzureFirstPartyManagedCertificateParameters extends SecretParameters {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    type: "AzureFirstPartyManagedCertificate";
}

/**
 * Defines values for CacheBehavior. \
 * {@link KnownCacheBehavior} can be used interchangeably with CacheBehavior,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BypassCache** \
 * **Override** \
 * **SetIfMissing**
 */
export declare type CacheBehavior = string;

/** Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object. */
export declare interface CacheConfiguration {
    /** Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore specific query strings, cache every request with a unique URL, or cache specific query strings. */
    queryStringCachingBehavior?: RuleQueryStringCachingBehavior;
    /** query parameters to include or exclude (comma separated). */
    queryParameters?: string;
    /** Indicates whether content compression is enabled. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB. */
    isCompressionEnabled?: RuleIsCompressionEnabled;
    /** Caching behavior for the requests */
    cacheBehavior?: RuleCacheBehavior;
    /** The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss */
    cacheDuration?: string;
}

/** Defines the parameters for the cache expiration action. */
export declare interface CacheExpirationActionParameters {
    typeName: "DeliveryRuleCacheExpirationActionParameters";
    /** Caching behavior for the requests */
    cacheBehavior: CacheBehavior;
    /** The level at which the content needs to be cached. */
    cacheType: CacheType;
    /** The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss */
    cacheDuration?: string;
}

/** Defines the parameters for the cache-key query string action. */
export declare interface CacheKeyQueryStringActionParameters {
    typeName: "DeliveryRuleCacheKeyQueryStringBehaviorActionParameters";
    /** Caching behavior for the requests */
    queryStringBehavior: QueryStringBehavior;
    /** query parameters to include or exclude (comma separated). */
    queryParameters?: string;
}

/**
 * Defines values for CacheType. \
 * {@link KnownCacheType} can be used interchangeably with CacheType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **All**
 */
export declare type CacheType = string;

/** Defines the parameters for using CDN managed certificate for securing custom domain. */
export declare interface CdnCertificateSourceParameters {
    typeName: "CdnCertificateSourceParameters";
    /** Type of certificate used */
    certificateType: CertificateType;
}

/** Defines the ARM Resource ID for the linked endpoints */
export declare interface CdnEndpoint {
    /** ARM Resource ID string. */
    id?: string;
}

/** Defines the certificate source parameters using CDN managed certificate for enabling SSL. */
export declare interface CdnManagedHttpsParameters extends CustomDomainHttpsParameters {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    certificateSource: "Cdn";
    /** Defines the certificate source parameters using CDN managed certificate for enabling SSL. */
    certificateSourceParameters: CdnCertificateSourceParameters;
}

export declare class CdnManagementClient extends coreClient.ServiceClient {
    $host: string;
    subscriptionId: string;
    apiVersion: string;
    /**
     * Initializes a new instance of the CdnManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId Azure Subscription ID.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: CdnManagementClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    /**
     * Check the availability of a resource name. This is needed for resources where name is globally
     * unique, such as a afdx endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param checkEndpointNameAvailabilityInput Input to check.
     * @param options The options parameters.
     */
    checkEndpointNameAvailability(resourceGroupName: string, checkEndpointNameAvailabilityInput: CheckEndpointNameAvailabilityInput, options?: CheckEndpointNameAvailabilityOptionalParams): Promise<CheckEndpointNameAvailabilityResponse>;
    /**
     * Check the availability of a resource name. This is needed for resources where name is globally
     * unique, such as a CDN endpoint.
     * @param checkNameAvailabilityInput Input to check.
     * @param options The options parameters.
     */
    checkNameAvailability(checkNameAvailabilityInput: CheckNameAvailabilityInput, options?: CheckNameAvailabilityOptionalParams): Promise<CheckNameAvailabilityResponse>;
    /**
     * Check the availability of a resource name. This is needed for resources where name is globally
     * unique, such as a CDN endpoint.
     * @param checkNameAvailabilityInput Input to check.
     * @param options The options parameters.
     */
    checkNameAvailabilityWithSubscription(checkNameAvailabilityInput: CheckNameAvailabilityInput, options?: CheckNameAvailabilityWithSubscriptionOptionalParams): Promise<CheckNameAvailabilityWithSubscriptionResponse>;
    /**
     * Check if the probe path is a valid path and the file can be accessed. Probe path is the path to a
     * file hosted on the origin server to help accelerate the delivery of dynamic content via the CDN
     * endpoint. This path is relative to the origin path specified in the endpoint configuration.
     * @param validateProbeInput Input to check.
     * @param options The options parameters.
     */
    validateProbe(validateProbeInput: ValidateProbeInput, options?: ValidateProbeOptionalParams): Promise<ValidateProbeResponse>;
    afdProfiles: AfdProfiles;
    afdCustomDomains: AfdCustomDomains;
    afdEndpoints: AfdEndpoints;
    afdOriginGroups: AfdOriginGroups;
    afdOrigins: AfdOrigins;
    routes: Routes;
    ruleSets: RuleSets;
    rules: Rules;
    securityPolicies: SecurityPolicies;
    secrets: Secrets;
    validate: Validate;
    logAnalytics: LogAnalytics;
    profiles: Profiles;
    endpoints: Endpoints;
    origins: Origins;
    originGroups: OriginGroups;
    customDomains: CustomDomains;
    resourceUsageOperations: ResourceUsageOperations;
    operations: Operations;
    edgeNodes: EdgeNodes;
    policies: Policies;
    managedRuleSets: ManagedRuleSets;
}

/** Optional parameters. */
export declare interface CdnManagementClientOptionalParams extends coreClient.ServiceClientOptions {
    /** server parameter */
    $host?: string;
    /** Api Version */
    apiVersion?: string;
    /** Overrides client endpoint. */
    endpoint?: string;
}

/** Defines web application firewall policy for Azure CDN. */
export declare interface CdnWebApplicationFirewallPolicy extends TrackedResource {
    /** Gets a unique read-only string that changes whenever the resource is updated. */
    etag?: string;
    /** The pricing tier (defines a CDN provider, feature list and rate) of the CdnWebApplicationFirewallPolicy. */
    sku: Sku;
    /** Describes  policySettings for policy */
    policySettings?: PolicySettings;
    /** Describes rate limit rules inside the policy. */
    rateLimitRules?: RateLimitRuleList;
    /** Describes custom rules inside the policy. */
    customRules?: CustomRuleList;
    /** Describes managed rules inside the policy. */
    managedRules?: ManagedRuleSetList;
    /**
     * Describes Azure CDN endpoints associated with this Web Application Firewall policy.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly endpointLinks?: CdnEndpoint[];
    /**
     * Provisioning state of the WebApplicationFirewallPolicy.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
    /**
     * Resource status of the policy.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resourceState?: PolicyResourceState;
}

/** Defines a list of WebApplicationFirewallPolicies for Azure CDN. It contains a list of WebApplicationFirewallPolicy objects and a URL link to get the next set of results. */
export declare interface CdnWebApplicationFirewallPolicyList {
    /**
     * List of Azure CDN WebApplicationFirewallPolicies within a resource group.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: CdnWebApplicationFirewallPolicy[];
    /** URL to get the next set of WebApplicationFirewallPolicy objects if there are any. */
    nextLink?: string;
}

/** Properties required to update a CdnWebApplicationFirewallPolicy. */
export declare interface CdnWebApplicationFirewallPolicyPatchParameters {
    /** CdnWebApplicationFirewallPolicy tags */
    tags?: {
        [propertyName: string]: string;
    };
}

/** Certificate used for https */
export declare interface Certificate {
    /** The type of the secret resource. */
    type?: SecretType;
    /**
     * Subject name in the certificate.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly subject?: string;
    /**
     * Certificate expiration date.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly expirationDate?: string;
}

/**
 * Defines values for CertificateSource. \
 * {@link KnownCertificateSource} can be used interchangeably with CertificateSource,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AzureKeyVault** \
 * **Cdn**
 */
export declare type CertificateSource = string;

/**
 * Defines values for CertificateType. \
 * {@link KnownCertificateType} can be used interchangeably with CertificateType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Shared** \
 * **Dedicated**
 */
export declare type CertificateType = string;

/** Input of CheckNameAvailability API. */
export declare interface CheckEndpointNameAvailabilityInput {
    /** The resource name to validate. */
    name: string;
    /** The type of the resource whose name is to be validated. */
    type: ResourceType;
    /** Indicates the endpoint name reuse scope. The default value is TenantReuse. */
    autoGeneratedDomainNameLabelScope?: AutoGeneratedDomainNameLabelScope;
}

/** Optional parameters. */
export declare interface CheckEndpointNameAvailabilityOptionalParams extends coreClient.OperationOptions {
}

/** Output of check name availability API. */
export declare interface CheckEndpointNameAvailabilityOutput {
    /**
     * Indicates whether the name is available.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nameAvailable?: boolean;
    /**
     * Returns the available hostname generated based on the AutoGeneratedDomainNameLabelScope when the name is available, otherwise it returns empty string
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly availableHostname?: string;
    /**
     * The reason why the name is not available.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly reason?: string;
    /**
     * The detailed error message describing why the name is not available.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
}

/** Contains response data for the checkEndpointNameAvailability operation. */
export declare type CheckEndpointNameAvailabilityResponse = CheckEndpointNameAvailabilityOutput;

/** Input of CheckHostNameAvailability API. */
export declare interface CheckHostNameAvailabilityInput {
    /** The host name to validate. */
    hostName: string;
}

/** Input of CheckNameAvailability API. */
export declare interface CheckNameAvailabilityInput {
    /** The resource name to validate. */
    name: string;
    /** The type of the resource whose name is to be validated. */
    type: ResourceType;
}

/** Optional parameters. */
export declare interface CheckNameAvailabilityOptionalParams extends coreClient.OperationOptions {
}

/** Output of check name availability API. */
export declare interface CheckNameAvailabilityOutput {
    /**
     * Indicates whether the name is available.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nameAvailable?: boolean;
    /**
     * The reason why the name is not available.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly reason?: string;
    /**
     * The detailed error message describing why the name is not available.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
}

/** Contains response data for the checkNameAvailability operation. */
export declare type CheckNameAvailabilityResponse = CheckNameAvailabilityOutput;

/** Optional parameters. */
export declare interface CheckNameAvailabilityWithSubscriptionOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the checkNameAvailabilityWithSubscription operation. */
export declare type CheckNameAvailabilityWithSubscriptionResponse = CheckNameAvailabilityOutput;

/** CIDR Ip address */
export declare interface CidrIpAddress {
    /** Ip address itself. */
    baseIpAddress?: string;
    /** The length of the prefix of the ip address. */
    prefixLength?: number;
}

/** Defines the parameters for ClientPort match conditions */
export declare interface ClientPortMatchConditionParameters {
    typeName: "DeliveryRuleClientPortConditionParameters";
    /** Describes operator to be matched */
    operator: ClientPortOperator;
    /** Describes if this is negate condition or not */
    negateCondition?: boolean;
    /** The match value for the condition of the delivery rule */
    matchValues?: string[];
    /** List of transforms */
    transforms?: Transform[];
}

/**
 * Defines values for ClientPortOperator. \
 * {@link KnownClientPortOperator} can be used interchangeably with ClientPortOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Any** \
 * **Equal** \
 * **Contains** \
 * **BeginsWith** \
 * **EndsWith** \
 * **LessThan** \
 * **LessThanOrEqual** \
 * **GreaterThan** \
 * **GreaterThanOrEqual** \
 * **RegEx**
 */
export declare type ClientPortOperator = string;

export declare interface Components18OrqelSchemasWafmetricsresponsePropertiesSeriesItemsPropertiesDataItems {
    dateTime?: Date;
    value?: number;
}

export declare interface Components1Gs0LlpSchemasMetricsresponsePropertiesSeriesItemsPropertiesDataItems {
    dateTime?: Date;
    value?: number;
}

export declare interface ComponentsKpo1PjSchemasWafrankingsresponsePropertiesDataItemsPropertiesMetricsItems {
    metric?: string;
    value?: number;
    percentage?: number;
}

/** settings for compression. */
export declare interface CompressionSettings {
    /** List of content types on which compression applies. The value should be a valid MIME type. */
    contentTypesToCompress?: string[];
    /** Indicates whether content compression is enabled on AzureFrontDoor. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB. */
    isCompressionEnabled?: boolean;
}

/** Continents Response */
export declare interface ContinentsResponse {
    continents?: ContinentsResponseContinentsItem[];
    countryOrRegions?: ContinentsResponseCountryOrRegionsItem[];
}

export declare interface ContinentsResponseContinentsItem {
    id?: string;
}

export declare interface ContinentsResponseCountryOrRegionsItem {
    id?: string;
    continentId?: string;
}

/** Defines the parameters for Cookies match conditions */
export declare interface CookiesMatchConditionParameters {
    typeName: "DeliveryRuleCookiesConditionParameters";
    /** Name of Cookies to be matched */
    selector?: string;
    /** Describes operator to be matched */
    operator: CookiesOperator;
    /** Describes if this is negate condition or not */
    negateCondition?: boolean;
    /** The match value for the condition of the delivery rule */
    matchValues?: string[];
    /** List of transforms */
    transforms?: Transform[];
}

/**
 * Defines values for CookiesOperator. \
 * {@link KnownCookiesOperator} can be used interchangeably with CookiesOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Any** \
 * **Equal** \
 * **Contains** \
 * **BeginsWith** \
 * **EndsWith** \
 * **LessThan** \
 * **LessThanOrEqual** \
 * **GreaterThan** \
 * **GreaterThanOrEqual** \
 * **RegEx**
 */
export declare type CookiesOperator = string;

/** Friendly domain name mapping to the endpoint hostname that the customer provides for branding purposes, e.g. www.contoso.com. */
export declare interface CustomDomain extends ProxyResource {
    /** The host name of the custom domain. Must be a domain name. */
    hostName?: string;
    /**
     * Resource status of the custom domain.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resourceState?: CustomDomainResourceState;
    /**
     * Provisioning status of the custom domain.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly customHttpsProvisioningState?: CustomHttpsProvisioningState;
    /**
     * Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly customHttpsProvisioningSubstate?: CustomHttpsProvisioningSubstate;
    /** Certificate parameters for securing custom HTTPS */
    customHttpsParameters?: CustomDomainHttpsParametersUnion;
    /** Special validation or data may be required when delivering CDN to some regions due to local compliance reasons. E.g. ICP license number of a custom domain is required to deliver content in China. */
    validationData?: string;
    /**
     * Provisioning status of Custom Https of the custom domain.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: CustomHttpsProvisioningState;
}

/** The JSON object that contains the properties to secure a custom domain. */
export declare interface CustomDomainHttpsParameters {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    certificateSource: "Cdn" | "AzureKeyVault";
    /** Defines the TLS extension protocol that is used for secure delivery. */
    protocolType: ProtocolType;
    /** TLS protocol version that will be used for Https */
    minimumTlsVersion?: MinimumTlsVersion;
}

export declare type CustomDomainHttpsParametersUnion = CustomDomainHttpsParameters | CdnManagedHttpsParameters | UserManagedHttpsParameters;

/** Result of the request to list custom domains. It contains a list of custom domain objects and a URL link to get the next set of results. */
export declare interface CustomDomainListResult {
    /**
     * List of CDN CustomDomains within an endpoint.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: CustomDomain[];
    /** URL to get the next set of custom domain objects if there are any. */
    nextLink?: string;
}

/** The customDomain JSON object required for custom domain creation or update. */
export declare interface CustomDomainParameters {
    /** The host name of the custom domain. Must be a domain name. */
    hostName?: string;
}

/**
 * Defines values for CustomDomainResourceState. \
 * {@link KnownCustomDomainResourceState} can be used interchangeably with CustomDomainResourceState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Creating** \
 * **Active** \
 * **Deleting**
 */
export declare type CustomDomainResourceState = string;

/** Interface representing a CustomDomains. */
export declare interface CustomDomains {
    /**
     * Lists all of the existing custom domains within an endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param options The options parameters.
     */
    listByEndpoint(resourceGroupName: string, profileName: string, endpointName: string, options?: CustomDomainsListByEndpointOptionalParams): PagedAsyncIterableIterator<CustomDomain>;
    /**
     * Gets an existing custom domain within an endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param customDomainName Name of the custom domain within an endpoint.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, profileName: string, endpointName: string, customDomainName: string, options?: CustomDomainsGetOptionalParams): Promise<CustomDomainsGetResponse>;
    /**
     * Creates a new custom domain within an endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param customDomainName Name of the custom domain within an endpoint.
     * @param customDomainProperties Properties required to create a new custom domain.
     * @param options The options parameters.
     */
    beginCreate(resourceGroupName: string, profileName: string, endpointName: string, customDomainName: string, customDomainProperties: CustomDomainParameters, options?: CustomDomainsCreateOptionalParams): Promise<PollerLike<PollOperationState<CustomDomainsCreateResponse>, CustomDomainsCreateResponse>>;
    /**
     * Creates a new custom domain within an endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param customDomainName Name of the custom domain within an endpoint.
     * @param customDomainProperties Properties required to create a new custom domain.
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceGroupName: string, profileName: string, endpointName: string, customDomainName: string, customDomainProperties: CustomDomainParameters, options?: CustomDomainsCreateOptionalParams): Promise<CustomDomainsCreateResponse>;
    /**
     * Deletes an existing custom domain within an endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param customDomainName Name of the custom domain within an endpoint.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, profileName: string, endpointName: string, customDomainName: string, options?: CustomDomainsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes an existing custom domain within an endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param customDomainName Name of the custom domain within an endpoint.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, profileName: string, endpointName: string, customDomainName: string, options?: CustomDomainsDeleteOptionalParams): Promise<void>;
    /**
     * Disable https delivery of the custom domain.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param customDomainName Name of the custom domain within an endpoint.
     * @param options The options parameters.
     */
    beginDisableCustomHttps(resourceGroupName: string, profileName: string, endpointName: string, customDomainName: string, options?: CustomDomainsDisableCustomHttpsOptionalParams): Promise<PollerLike<PollOperationState<CustomDomainsDisableCustomHttpsResponse>, CustomDomainsDisableCustomHttpsResponse>>;
    /**
     * Disable https delivery of the custom domain.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param customDomainName Name of the custom domain within an endpoint.
     * @param options The options parameters.
     */
    beginDisableCustomHttpsAndWait(resourceGroupName: string, profileName: string, endpointName: string, customDomainName: string, options?: CustomDomainsDisableCustomHttpsOptionalParams): Promise<CustomDomainsDisableCustomHttpsResponse>;
    /**
     * Enable https delivery of the custom domain.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param customDomainName Name of the custom domain within an endpoint.
     * @param options The options parameters.
     */
    beginEnableCustomHttps(resourceGroupName: string, profileName: string, endpointName: string, customDomainName: string, options?: CustomDomainsEnableCustomHttpsOptionalParams): Promise<PollerLike<PollOperationState<CustomDomainsEnableCustomHttpsResponse>, CustomDomainsEnableCustomHttpsResponse>>;
    /**
     * Enable https delivery of the custom domain.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param customDomainName Name of the custom domain within an endpoint.
     * @param options The options parameters.
     */
    beginEnableCustomHttpsAndWait(resourceGroupName: string, profileName: string, endpointName: string, customDomainName: string, options?: CustomDomainsEnableCustomHttpsOptionalParams): Promise<CustomDomainsEnableCustomHttpsResponse>;
}

/** Optional parameters. */
export declare interface CustomDomainsCreateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the create operation. */
export declare type CustomDomainsCreateResponse = CustomDomain;

/** Optional parameters. */
export declare interface CustomDomainsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface CustomDomainsDisableCustomHttpsOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the disableCustomHttps operation. */
export declare type CustomDomainsDisableCustomHttpsResponse = CustomDomain;

/** Optional parameters. */
export declare interface CustomDomainsEnableCustomHttpsOptionalParams extends coreClient.OperationOptions {
    /** The configuration specifying how to enable HTTPS for the custom domain - using CDN managed certificate or user's own certificate. If not specified, enabling ssl uses CDN managed certificate by default. */
    customDomainHttpsParameters?: CustomDomainHttpsParametersUnion;
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the enableCustomHttps operation. */
export declare type CustomDomainsEnableCustomHttpsResponse = CustomDomain;

/** Optional parameters. */
export declare interface CustomDomainsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type CustomDomainsGetResponse = CustomDomain;

/** Optional parameters. */
export declare interface CustomDomainsListByEndpointNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByEndpointNext operation. */
export declare type CustomDomainsListByEndpointNextResponse = CustomDomainListResult;

/** Optional parameters. */
export declare interface CustomDomainsListByEndpointOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByEndpoint operation. */
export declare type CustomDomainsListByEndpointResponse = CustomDomainListResult;

/** Customer Certificate used for https */
export declare interface CustomerCertificate extends Certificate {
    /** Resource reference to the Azure Key Vault certificate. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{certificateName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​ */
    secretSource?: ResourceReference;
    /** Certificate version. */
    secretVersion?: string;
    /**
     * Certificate issuing authority.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly certificateAuthority?: string;
    /** Whether to use the latest version for the certificate */
    useLatestVersion?: boolean;
    /** The list of SANs. */
    subjectAlternativeNames?: string[];
    /**
     * Certificate thumbprint.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly thumbprint?: string;
}

/** Customer Certificate used for https */
export declare interface CustomerCertificateParameters extends SecretParameters {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    type: "CustomerCertificate";
    /** Resource reference to the Azure Key Vault certificate. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{certificateName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​ */
    secretSource: ResourceReference;
    /** Version of the secret to be used */
    secretVersion?: string;
    /** Whether to use the latest version for the certificate */
    useLatestVersion?: boolean;
    /**
     * Subject name in the certificate.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly subject?: string;
    /**
     * Certificate expiration date.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly expirationDate?: string;
    /**
     * Certificate issuing authority.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly certificateAuthority?: string;
    /** The list of SANs. */
    subjectAlternativeNames?: string[];
    /**
     * Certificate thumbprint.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly thumbprint?: string;
}

/**
 * Defines values for CustomHttpsProvisioningState. \
 * {@link KnownCustomHttpsProvisioningState} can be used interchangeably with CustomHttpsProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabling** \
 * **Enabled** \
 * **Disabling** \
 * **Disabled** \
 * **Failed**
 */
export declare type CustomHttpsProvisioningState = string;

/**
 * Defines values for CustomHttpsProvisioningSubstate. \
 * {@link KnownCustomHttpsProvisioningSubstate} can be used interchangeably with CustomHttpsProvisioningSubstate,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **SubmittingDomainControlValidationRequest** \
 * **PendingDomainControlValidationREquestApproval** \
 * **DomainControlValidationRequestApproved** \
 * **DomainControlValidationRequestRejected** \
 * **DomainControlValidationRequestTimedOut** \
 * **IssuingCertificate** \
 * **DeployingCertificate** \
 * **CertificateDeployed** \
 * **DeletingCertificate** \
 * **CertificateDeleted**
 */
export declare type CustomHttpsProvisioningSubstate = string;

/** Defines the common attributes for a custom rule that can be included in a waf policy */
export declare interface CustomRule {
    /** Defines the name of the custom rule */
    name: string;
    /** Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified. */
    enabledState?: CustomRuleEnabledState;
    /** Defines in what order this rule be evaluated in the overall list of custom rules */
    priority: number;
    /** List of match conditions. */
    matchConditions: MatchCondition[];
    /** Describes what action to be applied when rule matches */
    action: ActionType;
}

/**
 * Defines values for CustomRuleEnabledState. \
 * {@link KnownCustomRuleEnabledState} can be used interchangeably with CustomRuleEnabledState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Enabled**
 */
export declare type CustomRuleEnabledState = string;

/** Defines contents of custom rules */
export declare interface CustomRuleList {
    /** List of rules */
    rules?: CustomRule[];
}

/** Custom domains created on the CDN endpoint. */
export declare interface DeepCreatedCustomDomain {
    /** Custom domain name. */
    name: string;
    /** The host name of the custom domain. Must be a domain name. */
    hostName?: string;
    /** Special validation or data may be required when delivering CDN to some regions due to local compliance reasons. E.g. ICP license number of a custom domain is required to deliver content in China. */
    validationData?: string;
}

/** The main origin of CDN content which is added when creating a CDN endpoint. */
export declare interface DeepCreatedOrigin {
    /** Origin name which must be unique within the endpoint. */
    name: string;
    /** The address of the origin. It can be a domain name, IPv4 address, or IPv6 address. This should be unique across all origins in an endpoint. */
    hostName?: string;
    /** The value of the HTTP port. Must be between 1 and 65535. */
    httpPort?: number;
    /** The value of the HTTPS port. Must be between 1 and 65535. */
    httpsPort?: number;
    /** The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. */
    originHostHeader?: string;
    /** Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5. */
    priority?: number;
    /** Weight of the origin in given origin group for load balancing. Must be between 1 and 1000 */
    weight?: number;
    /** Origin is enabled for load balancing or not. By default, origin is always enabled. */
    enabled?: boolean;
    /** The Alias of the Private Link resource. Populating this optional field indicates that this origin is 'Private' */
    privateLinkAlias?: string;
    /** The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private' */
    privateLinkResourceId?: string;
    /** The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated */
    privateLinkLocation?: string;
    /** A custom message to be included in the approval request to connect to the Private Link. */
    privateLinkApprovalMessage?: string;
    /**
     * The approval status for the connection to the Private Link
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly privateEndpointStatus?: PrivateEndpointStatus;
}

/** The origin group for CDN content which is added when creating a CDN endpoint. Traffic is sent to the origins within the origin group based on origin health. */
export declare interface DeepCreatedOriginGroup {
    /** Origin group name which must be unique within the endpoint. */
    name: string;
    /** Health probe settings to the origin that is used to determine the health of the origin. */
    healthProbeSettings?: HealthProbeParameters;
    /** The source of the content being delivered via CDN within given origin group. */
    origins?: ResourceReference[];
    /** Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported. */
    trafficRestorationTimeToHealedOrNewEndpointsInMinutes?: number;
    /** The JSON object that contains the properties to determine origin health using real requests/responses.This property is currently not supported. */
    responseBasedOriginErrorDetectionSettings?: ResponseBasedOriginErrorDetectionParameters;
}

/**
 * Defines values for DeleteRule. \
 * {@link KnownDeleteRule} can be used interchangeably with DeleteRule,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NoAction**
 */
export declare type DeleteRule = string;

/** A rule that specifies a set of actions and conditions */
export declare interface DeliveryRule {
    /** Name of the rule */
    name?: string;
    /** The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied. */
    order: number;
    /** A list of conditions that must be matched for the actions to be executed */
    conditions?: DeliveryRuleConditionUnion[];
    /** A list of actions that are executed when all the conditions of a rule are satisfied. */
    actions: DeliveryRuleActionAutoGeneratedUnion[];
}

/**
 * Defines values for DeliveryRuleAction. \
 * {@link KnownDeliveryRuleAction} can be used interchangeably with DeliveryRuleAction,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **CacheExpiration** \
 * **CacheKeyQueryString** \
 * **ModifyRequestHeader** \
 * **ModifyResponseHeader** \
 * **UrlRedirect** \
 * **UrlRewrite** \
 * **UrlSigning** \
 * **OriginGroupOverride** \
 * **RouteConfigurationOverride**
 */
export declare type DeliveryRuleAction = string;

/** An action for the delivery rule. */
export declare interface DeliveryRuleActionAutoGenerated {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    name: "UrlRedirect" | "UrlSigning" | "OriginGroupOverride" | "UrlRewrite" | "ModifyRequestHeader" | "ModifyResponseHeader" | "CacheExpiration" | "CacheKeyQueryString" | "RouteConfigurationOverride";
}

export declare type DeliveryRuleActionAutoGeneratedUnion = DeliveryRuleActionAutoGenerated | UrlRedirectAction | UrlSigningAction | OriginGroupOverrideAction | UrlRewriteAction | DeliveryRuleRequestHeaderAction | DeliveryRuleResponseHeaderAction | DeliveryRuleCacheExpirationAction | DeliveryRuleCacheKeyQueryStringAction | DeliveryRuleRouteConfigurationOverrideAction;

/** Defines the cache expiration action for the delivery rule. */
export declare interface DeliveryRuleCacheExpirationAction extends DeliveryRuleActionAutoGenerated {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    name: "CacheExpiration";
    /** Defines the parameters for the action. */
    parameters: CacheExpirationActionParameters;
}

/** Defines the cache-key query string action for the delivery rule. */
export declare interface DeliveryRuleCacheKeyQueryStringAction extends DeliveryRuleActionAutoGenerated {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    name: "CacheKeyQueryString";
    /** Defines the parameters for the action. */
    parameters: CacheKeyQueryStringActionParameters;
}

/** Defines the ClientPort condition for the delivery rule. */
export declare interface DeliveryRuleClientPortCondition extends DeliveryRuleCondition {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    name: "ClientPort";
    /** Defines the parameters for the condition. */
    parameters: ClientPortMatchConditionParameters;
}

/** A condition for the delivery rule. */
export declare interface DeliveryRuleCondition {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    name: "RemoteAddress" | "RequestMethod" | "QueryString" | "PostArgs" | "RequestUri" | "RequestHeader" | "RequestBody" | "RequestScheme" | "UrlPath" | "UrlFileExtension" | "UrlFileName" | "HttpVersion" | "Cookies" | "IsDevice" | "SocketAddr" | "ClientPort" | "ServerPort" | "HostName" | "SslProtocol";
}

export declare type DeliveryRuleConditionUnion = DeliveryRuleCondition | DeliveryRuleRemoteAddressCondition | DeliveryRuleRequestMethodCondition | DeliveryRuleQueryStringCondition | DeliveryRulePostArgsCondition | DeliveryRuleRequestUriCondition | DeliveryRuleRequestHeaderCondition | DeliveryRuleRequestBodyCondition | DeliveryRuleRequestSchemeCondition | DeliveryRuleUrlPathCondition | DeliveryRuleUrlFileExtensionCondition | DeliveryRuleUrlFileNameCondition | DeliveryRuleHttpVersionCondition | DeliveryRuleCookiesCondition | DeliveryRuleIsDeviceCondition | DeliveryRuleSocketAddrCondition | DeliveryRuleClientPortCondition | DeliveryRuleServerPortCondition | DeliveryRuleHostNameCondition | DeliveryRuleSslProtocolCondition;

/** Defines the Cookies condition for the delivery rule. */
export declare interface DeliveryRuleCookiesCondition extends DeliveryRuleCondition {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    name: "Cookies";
    /** Defines the parameters for the condition. */
    parameters: CookiesMatchConditionParameters;
}

/** Defines the HostName condition for the delivery rule. */
export declare interface DeliveryRuleHostNameCondition extends DeliveryRuleCondition {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    name: "HostName";
    /** Defines the parameters for the condition. */
    parameters: HostNameMatchConditionParameters;
}

/** Defines the HttpVersion condition for the delivery rule. */
export declare interface DeliveryRuleHttpVersionCondition extends DeliveryRuleCondition {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    name: "HttpVersion";
    /** Defines the parameters for the condition. */
    parameters: HttpVersionMatchConditionParameters;
}

/** Defines the IsDevice condition for the delivery rule. */
export declare interface DeliveryRuleIsDeviceCondition extends DeliveryRuleCondition {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    name: "IsDevice";
    /** Defines the parameters for the condition. */
    parameters: IsDeviceMatchConditionParameters;
}

/** Defines the PostArgs condition for the delivery rule. */
export declare interface DeliveryRulePostArgsCondition extends DeliveryRuleCondition {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    name: "PostArgs";
    /** Defines the parameters for the condition. */
    parameters: PostArgsMatchConditionParameters;
}

/** Defines the QueryString condition for the delivery rule. */
export declare interface DeliveryRuleQueryStringCondition extends DeliveryRuleCondition {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    name: "QueryString";
    /** Defines the parameters for the condition. */
    parameters: QueryStringMatchConditionParameters;
}

/** Defines the RemoteAddress condition for the delivery rule. */
export declare interface DeliveryRuleRemoteAddressCondition extends DeliveryRuleCondition {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    name: "RemoteAddress";
    /** Defines the parameters for the condition. */
    parameters: RemoteAddressMatchConditionParameters;
}

/** Defines the RequestBody condition for the delivery rule. */
export declare interface DeliveryRuleRequestBodyCondition extends DeliveryRuleCondition {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    name: "RequestBody";
    /** Defines the parameters for the condition. */
    parameters: RequestBodyMatchConditionParameters;
}

/** Defines the request header action for the delivery rule. */
export declare interface DeliveryRuleRequestHeaderAction extends DeliveryRuleActionAutoGenerated {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    name: "ModifyRequestHeader";
    /** Defines the parameters for the action. */
    parameters: HeaderActionParameters;
}

/** Defines the RequestHeader condition for the delivery rule. */
export declare interface DeliveryRuleRequestHeaderCondition extends DeliveryRuleCondition {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    name: "RequestHeader";
    /** Defines the parameters for the condition. */
    parameters: RequestHeaderMatchConditionParameters;
}

/** Defines the RequestMethod condition for the delivery rule. */
export declare interface DeliveryRuleRequestMethodCondition extends DeliveryRuleCondition {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    name: "RequestMethod";
    /** Defines the parameters for the condition. */
    parameters: RequestMethodMatchConditionParameters;
}

/** Defines the RequestScheme condition for the delivery rule. */
export declare interface DeliveryRuleRequestSchemeCondition extends DeliveryRuleCondition {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    name: "RequestScheme";
    /** Defines the parameters for the condition. */
    parameters: RequestSchemeMatchConditionParameters;
}

/** Defines the RequestUri condition for the delivery rule. */
export declare interface DeliveryRuleRequestUriCondition extends DeliveryRuleCondition {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    name: "RequestUri";
    /** Defines the parameters for the condition. */
    parameters: RequestUriMatchConditionParameters;
}

/** Defines the response header action for the delivery rule. */
export declare interface DeliveryRuleResponseHeaderAction extends DeliveryRuleActionAutoGenerated {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    name: "ModifyResponseHeader";
    /** Defines the parameters for the action. */
    parameters: HeaderActionParameters;
}

/** Defines the route configuration override action for the delivery rule. Only applicable to Frontdoor Standard/Premium Profiles. */
export declare interface DeliveryRuleRouteConfigurationOverrideAction extends DeliveryRuleActionAutoGenerated {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    name: "RouteConfigurationOverride";
    /** Defines the parameters for the action. */
    parameters: RouteConfigurationOverrideActionParameters;
}

/** Defines the ServerPort condition for the delivery rule. */
export declare interface DeliveryRuleServerPortCondition extends DeliveryRuleCondition {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    name: "ServerPort";
    /** Defines the parameters for the condition. */
    parameters: ServerPortMatchConditionParameters;
}

/** Defines the SocketAddress condition for the delivery rule. */
export declare interface DeliveryRuleSocketAddrCondition extends DeliveryRuleCondition {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    name: "SocketAddr";
    /** Defines the parameters for the condition. */
    parameters: SocketAddrMatchConditionParameters;
}

/** Defines the SslProtocol condition for the delivery rule. */
export declare interface DeliveryRuleSslProtocolCondition extends DeliveryRuleCondition {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    name: "SslProtocol";
    /** Defines the parameters for the condition. */
    parameters: SslProtocolMatchConditionParameters;
}

/** Defines the UrlFileExtension condition for the delivery rule. */
export declare interface DeliveryRuleUrlFileExtensionCondition extends DeliveryRuleCondition {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    name: "UrlFileExtension";
    /** Defines the parameters for the condition. */
    parameters: UrlFileExtensionMatchConditionParameters;
}

/** Defines the UrlFileName condition for the delivery rule. */
export declare interface DeliveryRuleUrlFileNameCondition extends DeliveryRuleCondition {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    name: "UrlFileName";
    /** Defines the parameters for the condition. */
    parameters: UrlFileNameMatchConditionParameters;
}

/** Defines the UrlPath condition for the delivery rule. */
export declare interface DeliveryRuleUrlPathCondition extends DeliveryRuleCondition {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    name: "UrlPath";
    /** Defines the parameters for the condition. */
    parameters: UrlPathMatchConditionParameters;
}

/**
 * Defines values for DeploymentStatus. \
 * {@link KnownDeploymentStatus} can be used interchangeably with DeploymentStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NotStarted** \
 * **InProgress** \
 * **Succeeded** \
 * **Failed**
 */
export declare type DeploymentStatus = string;

/**
 * Defines values for DestinationProtocol. \
 * {@link KnownDestinationProtocol} can be used interchangeably with DestinationProtocol,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **MatchRequest** \
 * **Http** \
 * **Https**
 */
export declare type DestinationProtocol = string;

/** Type of operation: get, read, delete, etc. */
export declare interface DimensionProperties {
    /** Name of dimension. */
    name?: string;
    /** Display name of dimension. */
    displayName?: string;
    /** Internal name of dimension. */
    internalName?: string;
}

/** The JSON object that contains the properties to validate a domain. */
export declare interface DomainValidationProperties {
    /**
     * Challenge used for DNS TXT record or file based validation
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly validationToken?: string;
    /**
     * The date time that the token expires
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly expirationDate?: string;
}

/**
 * Defines values for DomainValidationState. \
 * {@link KnownDomainValidationState} can be used interchangeably with DomainValidationState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Submitting** \
 * **Pending** \
 * **Rejected** \
 * **TimedOut** \
 * **PendingRevalidation** \
 * **Approved** \
 * **RefreshingValidationToken** \
 * **InternalError**
 */
export declare type DomainValidationState = string;

/** Edgenode is a global Point of Presence (POP) location used to deliver CDN content to end users. */
export declare interface EdgeNode extends ProxyResource {
    /** List of ip address groups. */
    ipAddressGroups?: IpAddressGroup[];
}

/** Result of the request to list CDN edgenodes. It contains a list of ip address group and a URL link to get the next set of results. */
export declare interface EdgenodeResult {
    /**
     * Edge node of CDN service.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: EdgeNode[];
    /** URL to get the next set of edgenode list results if there are any. */
    nextLink?: string;
}

/** Interface representing a EdgeNodes. */
export declare interface EdgeNodes {
    /**
     * Edgenodes are the global Point of Presence (POP) locations used to deliver CDN content to end users.
     * @param options The options parameters.
     */
    list(options?: EdgeNodesListOptionalParams): PagedAsyncIterableIterator<EdgeNode>;
}

/** Optional parameters. */
export declare interface EdgeNodesListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type EdgeNodesListNextResponse = EdgenodeResult;

/** Optional parameters. */
export declare interface EdgeNodesListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type EdgeNodesListResponse = EdgenodeResult;

/**
 * Defines values for EnabledState. \
 * {@link KnownEnabledState} can be used interchangeably with EnabledState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export declare type EnabledState = string;

/** CDN endpoint is the entity within a CDN profile containing configuration information such as origin, protocol, content caching and delivery behavior. The CDN endpoint uses the URL format <endpointname>.azureedge.net. */
export declare interface Endpoint extends TrackedResource {
    /** A directory path on the origin that CDN can use to retrieve content from, e.g. contoso.cloudapp.net/originpath. */
    originPath?: string;
    /** List of content types on which compression applies. The value should be a valid MIME type. */
    contentTypesToCompress?: string[];
    /** The host header value sent to the origin with each request. This property at Endpoint is only allowed when endpoint uses single origin and can be overridden by the same property specified at origin.If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. */
    originHostHeader?: string;
    /** Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content is smaller than 1 byte or larger than 1 MB. */
    isCompressionEnabled?: boolean;
    /** Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed. */
    isHttpAllowed?: boolean;
    /** Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed. */
    isHttpsAllowed?: boolean;
    /** Defines how CDN caches requests that include query strings. You can ignore any query strings when caching, bypass caching to prevent requests that contain query strings from being cached, or cache every request with a unique URL. */
    queryStringCachingBehavior?: QueryStringCachingBehavior;
    /** Specifies what scenario the customer wants this CDN endpoint to optimize for, e.g. Download, Media services. With this information, CDN can apply scenario driven optimization. */
    optimizationType?: OptimizationType;
    /** Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the origin path. This property is only relevant when using a single origin. */
    probePath?: string;
    /** List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule to a specified path or content, e.g. block APAC for path /pictures/ */
    geoFilters?: GeoFilter[];
    /** A reference to the origin group. */
    defaultOriginGroup?: ResourceReference;
    /** List of keys used to validate the signed URL hashes. */
    urlSigningKeys?: UrlSigningKey[];
    /** A policy that specifies the delivery rules to be used for an endpoint. */
    deliveryPolicy?: EndpointPropertiesUpdateParametersDeliveryPolicy;
    /** Defines the Web Application Firewall policy for the endpoint (if applicable) */
    webApplicationFirewallPolicyLink?: EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink;
    /**
     * The host name of the endpoint structured as {endpointName}.{DNSZone}, e.g. contoso.azureedge.net
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly hostName?: string;
    /** The source of the content being delivered via CDN. */
    origins?: DeepCreatedOrigin[];
    /** The origin groups comprising of origins that are used for load balancing the traffic based on availability. */
    originGroups?: DeepCreatedOriginGroup[];
    /**
     * The custom domains under the endpoint.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly customDomains?: DeepCreatedCustomDomain[];
    /**
     * Resource status of the endpoint.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resourceState?: EndpointResourceState;
    /**
     * Provisioning status of the endpoint.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: EndpointProvisioningState;
}

/** Result of the request to list endpoints. It contains a list of endpoint objects and a URL link to get the next set of results. */
export declare interface EndpointListResult {
    /**
     * List of CDN endpoints within a profile
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: Endpoint[];
    /** URL to get the next set of endpoint objects if there is any. */
    nextLink?: string;
}

/** The JSON object that contains the properties required to create an endpoint. */
export declare interface EndpointProperties extends EndpointPropertiesUpdateParameters {
    /**
     * The host name of the endpoint structured as {endpointName}.{DNSZone}, e.g. contoso.azureedge.net
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly hostName?: string;
    /** The source of the content being delivered via CDN. */
    origins: DeepCreatedOrigin[];
    /** The origin groups comprising of origins that are used for load balancing the traffic based on availability. */
    originGroups?: DeepCreatedOriginGroup[];
    /**
     * The custom domains under the endpoint.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly customDomains?: DeepCreatedCustomDomain[];
    /**
     * Resource status of the endpoint.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resourceState?: EndpointResourceState;
    /**
     * Provisioning status of the endpoint.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: EndpointProvisioningState;
}

/** The JSON object containing endpoint update parameters. */
export declare interface EndpointPropertiesUpdateParameters {
    /** A directory path on the origin that CDN can use to retrieve content from, e.g. contoso.cloudapp.net/originpath. */
    originPath?: string;
    /** List of content types on which compression applies. The value should be a valid MIME type. */
    contentTypesToCompress?: string[];
    /** The host header value sent to the origin with each request. This property at Endpoint is only allowed when endpoint uses single origin and can be overridden by the same property specified at origin.If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. */
    originHostHeader?: string;
    /** Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content is smaller than 1 byte or larger than 1 MB. */
    isCompressionEnabled?: boolean;
    /** Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed. */
    isHttpAllowed?: boolean;
    /** Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed. */
    isHttpsAllowed?: boolean;
    /** Defines how CDN caches requests that include query strings. You can ignore any query strings when caching, bypass caching to prevent requests that contain query strings from being cached, or cache every request with a unique URL. */
    queryStringCachingBehavior?: QueryStringCachingBehavior;
    /** Specifies what scenario the customer wants this CDN endpoint to optimize for, e.g. Download, Media services. With this information, CDN can apply scenario driven optimization. */
    optimizationType?: OptimizationType;
    /** Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the origin path. This property is only relevant when using a single origin. */
    probePath?: string;
    /** List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule to a specified path or content, e.g. block APAC for path /pictures/ */
    geoFilters?: GeoFilter[];
    /** A reference to the origin group. */
    defaultOriginGroup?: ResourceReference;
    /** List of keys used to validate the signed URL hashes. */
    urlSigningKeys?: UrlSigningKey[];
    /** A policy that specifies the delivery rules to be used for an endpoint. */
    deliveryPolicy?: EndpointPropertiesUpdateParametersDeliveryPolicy;
    /** Defines the Web Application Firewall policy for the endpoint (if applicable) */
    webApplicationFirewallPolicyLink?: EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink;
}

/** A policy that specifies the delivery rules to be used for an endpoint. */
export declare interface EndpointPropertiesUpdateParametersDeliveryPolicy {
    /** User-friendly description of the policy. */
    description?: string;
    /** A list of the delivery rules. */
    rules: DeliveryRule[];
}

/** Defines the Web Application Firewall policy for the endpoint (if applicable) */
export declare interface EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink {
    /** Resource ID. */
    id?: string;
}

/**
 * Defines values for EndpointProvisioningState. \
 * {@link KnownEndpointProvisioningState} can be used interchangeably with EndpointProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Failed** \
 * **Updating** \
 * **Deleting** \
 * **Creating**
 */
export declare type EndpointProvisioningState = string;

/**
 * Defines values for EndpointResourceState. \
 * {@link KnownEndpointResourceState} can be used interchangeably with EndpointResourceState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Creating** \
 * **Deleting** \
 * **Running** \
 * **Starting** \
 * **Stopped** \
 * **Stopping**
 */
export declare type EndpointResourceState = string;

/** Interface representing a Endpoints. */
export declare interface Endpoints {
    /**
     * Lists existing CDN endpoints.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param options The options parameters.
     */
    listByProfile(resourceGroupName: string, profileName: string, options?: EndpointsListByProfileOptionalParams): PagedAsyncIterableIterator<Endpoint>;
    /**
     * Checks the quota and usage of geo filters and custom domains under the given endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param options The options parameters.
     */
    listResourceUsage(resourceGroupName: string, profileName: string, endpointName: string, options?: EndpointsListResourceUsageOptionalParams): PagedAsyncIterableIterator<ResourceUsage>;
    /**
     * Gets an existing CDN endpoint with the specified endpoint name under the specified subscription,
     * resource group and profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, profileName: string, endpointName: string, options?: EndpointsGetOptionalParams): Promise<EndpointsGetResponse>;
    /**
     * Creates a new CDN endpoint with the specified endpoint name under the specified subscription,
     * resource group and profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param endpoint Endpoint properties
     * @param options The options parameters.
     */
    beginCreate(resourceGroupName: string, profileName: string, endpointName: string, endpoint: Endpoint, options?: EndpointsCreateOptionalParams): Promise<PollerLike<PollOperationState<EndpointsCreateResponse>, EndpointsCreateResponse>>;
    /**
     * Creates a new CDN endpoint with the specified endpoint name under the specified subscription,
     * resource group and profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param endpoint Endpoint properties
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceGroupName: string, profileName: string, endpointName: string, endpoint: Endpoint, options?: EndpointsCreateOptionalParams): Promise<EndpointsCreateResponse>;
    /**
     * Updates an existing CDN endpoint with the specified endpoint name under the specified subscription,
     * resource group and profile. Only tags can be updated after creating an endpoint. To update origins,
     * use the Update Origin operation. To update origin groups, use the Update Origin group operation. To
     * update custom domains, use the Update Custom Domain operation.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param endpointUpdateProperties Endpoint update properties
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, profileName: string, endpointName: string, endpointUpdateProperties: EndpointUpdateParameters, options?: EndpointsUpdateOptionalParams): Promise<PollerLike<PollOperationState<EndpointsUpdateResponse>, EndpointsUpdateResponse>>;
    /**
     * Updates an existing CDN endpoint with the specified endpoint name under the specified subscription,
     * resource group and profile. Only tags can be updated after creating an endpoint. To update origins,
     * use the Update Origin operation. To update origin groups, use the Update Origin group operation. To
     * update custom domains, use the Update Custom Domain operation.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param endpointUpdateProperties Endpoint update properties
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, profileName: string, endpointName: string, endpointUpdateProperties: EndpointUpdateParameters, options?: EndpointsUpdateOptionalParams): Promise<EndpointsUpdateResponse>;
    /**
     * Deletes an existing CDN endpoint with the specified endpoint name under the specified subscription,
     * resource group and profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, profileName: string, endpointName: string, options?: EndpointsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes an existing CDN endpoint with the specified endpoint name under the specified subscription,
     * resource group and profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, profileName: string, endpointName: string, options?: EndpointsDeleteOptionalParams): Promise<void>;
    /**
     * Starts an existing CDN endpoint that is on a stopped state.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param options The options parameters.
     */
    beginStart(resourceGroupName: string, profileName: string, endpointName: string, options?: EndpointsStartOptionalParams): Promise<PollerLike<PollOperationState<EndpointsStartResponse>, EndpointsStartResponse>>;
    /**
     * Starts an existing CDN endpoint that is on a stopped state.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param options The options parameters.
     */
    beginStartAndWait(resourceGroupName: string, profileName: string, endpointName: string, options?: EndpointsStartOptionalParams): Promise<EndpointsStartResponse>;
    /**
     * Stops an existing running CDN endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param options The options parameters.
     */
    beginStop(resourceGroupName: string, profileName: string, endpointName: string, options?: EndpointsStopOptionalParams): Promise<PollerLike<PollOperationState<EndpointsStopResponse>, EndpointsStopResponse>>;
    /**
     * Stops an existing running CDN endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param options The options parameters.
     */
    beginStopAndWait(resourceGroupName: string, profileName: string, endpointName: string, options?: EndpointsStopOptionalParams): Promise<EndpointsStopResponse>;
    /**
     * Removes a content from CDN.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param contentFilePaths The path to the content to be purged. Path can be a full URL, e.g.
     *                         '/pictures/city.png' which removes a single file, or a directory with a wildcard, e.g. '/pictures/*'
     *                         which removes all folders and files in the directory.
     * @param options The options parameters.
     */
    beginPurgeContent(resourceGroupName: string, profileName: string, endpointName: string, contentFilePaths: PurgeParameters, options?: EndpointsPurgeContentOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Removes a content from CDN.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param contentFilePaths The path to the content to be purged. Path can be a full URL, e.g.
     *                         '/pictures/city.png' which removes a single file, or a directory with a wildcard, e.g. '/pictures/*'
     *                         which removes all folders and files in the directory.
     * @param options The options parameters.
     */
    beginPurgeContentAndWait(resourceGroupName: string, profileName: string, endpointName: string, contentFilePaths: PurgeParameters, options?: EndpointsPurgeContentOptionalParams): Promise<void>;
    /**
     * Pre-loads a content to CDN. Available for Verizon Profiles.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param contentFilePaths The path to the content to be loaded. Path should be a full URL, e.g.
     *                         ‘/pictures/city.png' which loads a single file
     * @param options The options parameters.
     */
    beginLoadContent(resourceGroupName: string, profileName: string, endpointName: string, contentFilePaths: LoadParameters, options?: EndpointsLoadContentOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Pre-loads a content to CDN. Available for Verizon Profiles.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param contentFilePaths The path to the content to be loaded. Path should be a full URL, e.g.
     *                         ‘/pictures/city.png' which loads a single file
     * @param options The options parameters.
     */
    beginLoadContentAndWait(resourceGroupName: string, profileName: string, endpointName: string, contentFilePaths: LoadParameters, options?: EndpointsLoadContentOptionalParams): Promise<void>;
    /**
     * Validates the custom domain mapping to ensure it maps to the correct CDN endpoint in DNS.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param customDomainProperties Custom domain to be validated.
     * @param options The options parameters.
     */
    validateCustomDomain(resourceGroupName: string, profileName: string, endpointName: string, customDomainProperties: ValidateCustomDomainInput, options?: EndpointsValidateCustomDomainOptionalParams): Promise<EndpointsValidateCustomDomainResponse>;
}

/** Optional parameters. */
export declare interface EndpointsCreateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the create operation. */
export declare type EndpointsCreateResponse = Endpoint;

/** Optional parameters. */
export declare interface EndpointsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface EndpointsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type EndpointsGetResponse = Endpoint;

/** Optional parameters. */
export declare interface EndpointsListByProfileNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByProfileNext operation. */
export declare type EndpointsListByProfileNextResponse = EndpointListResult;

/** Optional parameters. */
export declare interface EndpointsListByProfileOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByProfile operation. */
export declare type EndpointsListByProfileResponse = EndpointListResult;

/** Optional parameters. */
export declare interface EndpointsListResourceUsageNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listResourceUsageNext operation. */
export declare type EndpointsListResourceUsageNextResponse = ResourceUsageListResult;

/** Optional parameters. */
export declare interface EndpointsListResourceUsageOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listResourceUsage operation. */
export declare type EndpointsListResourceUsageResponse = ResourceUsageListResult;

/** Optional parameters. */
export declare interface EndpointsLoadContentOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface EndpointsPurgeContentOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface EndpointsStartOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the start operation. */
export declare type EndpointsStartResponse = Endpoint;

/** Optional parameters. */
export declare interface EndpointsStopOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the stop operation. */
export declare type EndpointsStopResponse = Endpoint;

/** Optional parameters. */
export declare interface EndpointsUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the update operation. */
export declare type EndpointsUpdateResponse = Endpoint;

/** Optional parameters. */
export declare interface EndpointsValidateCustomDomainOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the validateCustomDomain operation. */
export declare type EndpointsValidateCustomDomainResponse = ValidateCustomDomainOutput;

/** Properties required to create or update an endpoint. */
export declare interface EndpointUpdateParameters {
    /** Endpoint tags. */
    tags?: {
        [propertyName: string]: string;
    };
    /** A directory path on the origin that CDN can use to retrieve content from, e.g. contoso.cloudapp.net/originpath. */
    originPath?: string;
    /** List of content types on which compression applies. The value should be a valid MIME type. */
    contentTypesToCompress?: string[];
    /** The host header value sent to the origin with each request. This property at Endpoint is only allowed when endpoint uses single origin and can be overridden by the same property specified at origin.If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. */
    originHostHeader?: string;
    /** Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content is smaller than 1 byte or larger than 1 MB. */
    isCompressionEnabled?: boolean;
    /** Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed. */
    isHttpAllowed?: boolean;
    /** Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed. */
    isHttpsAllowed?: boolean;
    /** Defines how CDN caches requests that include query strings. You can ignore any query strings when caching, bypass caching to prevent requests that contain query strings from being cached, or cache every request with a unique URL. */
    queryStringCachingBehavior?: QueryStringCachingBehavior;
    /** Specifies what scenario the customer wants this CDN endpoint to optimize for, e.g. Download, Media services. With this information, CDN can apply scenario driven optimization. */
    optimizationType?: OptimizationType;
    /** Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the origin path. This property is only relevant when using a single origin. */
    probePath?: string;
    /** List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule to a specified path or content, e.g. block APAC for path /pictures/ */
    geoFilters?: GeoFilter[];
    /** A reference to the origin group. */
    defaultOriginGroup?: ResourceReference;
    /** List of keys used to validate the signed URL hashes. */
    urlSigningKeys?: UrlSigningKey[];
    /** A policy that specifies the delivery rules to be used for an endpoint. */
    deliveryPolicy?: EndpointPropertiesUpdateParametersDeliveryPolicy;
    /** Defines the Web Application Firewall policy for the endpoint (if applicable) */
    webApplicationFirewallPolicyLink?: EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink;
}

/** The resource management error additional info. */
export declare interface ErrorAdditionalInfo {
    /**
     * The additional info type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * The additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly info?: Record<string, unknown>;
}

/** The error detail. */
export declare interface ErrorDetail {
    /**
     * The error code.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly code?: string;
    /**
     * The error message.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
    /**
     * The error target.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly target?: string;
    /**
     * The error details.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly details?: ErrorDetail[];
    /**
     * The error additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** Error response indicates Azure Front Door Standard or Azure Front Door Premium or CDN service is not able to process the incoming request. The reason is provided in the error message. */
export declare interface ErrorResponse {
    /** The error object. */
    error?: ErrorDetail;
}

/**
 * Defines values for ForwardingProtocol. \
 * {@link KnownForwardingProtocol} can be used interchangeably with ForwardingProtocol,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **HttpOnly** \
 * **HttpsOnly** \
 * **MatchRequest**
 */
export declare type ForwardingProtocol = string;

/** Rules defining user's geo access within a CDN endpoint. */
export declare interface GeoFilter {
    /** Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.) */
    relativePath: string;
    /** Action of the geo filter, i.e. allow or block access. */
    action: GeoFilterActions;
    /** Two letter country or region codes defining user country or region access in a geo filter, e.g. AU, MX, US. */
    countryCodes: string[];
}

/** Defines values for GeoFilterActions. */
export declare type GeoFilterActions = "Block" | "Allow";

/**
 * Given a result page from a pageable operation, returns a
 * continuation token that can be used to begin paging from
 * that point later.
 * @param page A result object from calling .byPage() on a paged operation.
 * @returns The continuation token that can be passed into byPage().
 */
export declare function getContinuationToken(page: unknown): string | undefined;

/**
 * Defines values for HeaderAction. \
 * {@link KnownHeaderAction} can be used interchangeably with HeaderAction,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Append** \
 * **Overwrite** \
 * **Delete**
 */
export declare type HeaderAction = string;

/** Defines the parameters for the request header action. */
export declare interface HeaderActionParameters {
    typeName: "DeliveryRuleHeaderActionParameters";
    /** Action to perform */
    headerAction: HeaderAction;
    /** Name of the header to modify */
    headerName: string;
    /** Value for the specified action */
    value?: string;
}

/** The JSON object that contains the properties to send health probes to origin. */
export declare interface HealthProbeParameters {
    /** The path relative to the origin that is used to determine the health of the origin. */
    probePath?: string;
    /** The type of health probe request that is made. */
    probeRequestType?: HealthProbeRequestType;
    /** Protocol to use for health probe. */
    probeProtocol?: ProbeProtocol;
    /** The number of seconds between health probes.Default is 240sec. */
    probeIntervalInSeconds?: number;
}

/** Defines values for HealthProbeRequestType. */
export declare type HealthProbeRequestType = "NotSet" | "GET" | "HEAD";

/** Defines the parameters for HostName match conditions */
export declare interface HostNameMatchConditionParameters {
    typeName: "DeliveryRuleHostNameConditionParameters";
    /** Describes operator to be matched */
    operator: HostNameOperator;
    /** Describes if this is negate condition or not */
    negateCondition?: boolean;
    /** The match value for the condition of the delivery rule */
    matchValues?: string[];
    /** List of transforms */
    transforms?: Transform[];
}

/**
 * Defines values for HostNameOperator. \
 * {@link KnownHostNameOperator} can be used interchangeably with HostNameOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Any** \
 * **Equal** \
 * **Contains** \
 * **BeginsWith** \
 * **EndsWith** \
 * **LessThan** \
 * **LessThanOrEqual** \
 * **GreaterThan** \
 * **GreaterThanOrEqual** \
 * **RegEx**
 */
export declare type HostNameOperator = string;

/** The JSON object that represents the range for http status codes */
export declare interface HttpErrorRangeParameters {
    /** The inclusive start of the http status code range. */
    begin?: number;
    /** The inclusive end of the http status code range. */
    end?: number;
}

/**
 * Defines values for HttpsRedirect. \
 * {@link KnownHttpsRedirect} can be used interchangeably with HttpsRedirect,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export declare type HttpsRedirect = string;

/** Defines the parameters for HttpVersion match conditions */
export declare interface HttpVersionMatchConditionParameters {
    typeName: "DeliveryRuleHttpVersionConditionParameters";
    /** Describes operator to be matched */
    operator: HttpVersionOperator;
    /** Describes if this is negate condition or not */
    negateCondition?: boolean;
    /** The match value for the condition of the delivery rule */
    matchValues?: string[];
    /** List of transforms */
    transforms?: Transform[];
}

/**
 * Defines values for HttpVersionOperator. \
 * {@link KnownHttpVersionOperator} can be used interchangeably with HttpVersionOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Equal**
 */
export declare type HttpVersionOperator = string;

/**
 * Defines values for IdentityType. \
 * {@link KnownIdentityType} can be used interchangeably with IdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **application** \
 * **managedIdentity** \
 * **key**
 */
export declare type IdentityType = string;

/** CDN Ip address group */
export declare interface IpAddressGroup {
    /** The delivery region of the ip address group */
    deliveryRegion?: string;
    /** The list of ip v4 addresses. */
    ipv4Addresses?: CidrIpAddress[];
    /** The list of ip v6 addresses. */
    ipv6Addresses?: CidrIpAddress[];
}

/** Defines the parameters for IsDevice match conditions */
export declare interface IsDeviceMatchConditionParameters {
    typeName: "DeliveryRuleIsDeviceConditionParameters";
    /** Describes operator to be matched */
    operator: IsDeviceOperator;
    /** Describes if this is negate condition or not */
    negateCondition?: boolean;
    /** The match value for the condition of the delivery rule */
    matchValues?: IsDeviceMatchConditionParametersMatchValuesItem[];
    /** List of transforms */
    transforms?: Transform[];
}

/**
 * Defines values for IsDeviceMatchConditionParametersMatchValuesItem. \
 * {@link KnownIsDeviceMatchConditionParametersMatchValuesItem} can be used interchangeably with IsDeviceMatchConditionParametersMatchValuesItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Mobile** \
 * **Desktop**
 */
export declare type IsDeviceMatchConditionParametersMatchValuesItem = string;

/**
 * Defines values for IsDeviceOperator. \
 * {@link KnownIsDeviceOperator} can be used interchangeably with IsDeviceOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Equal**
 */
export declare type IsDeviceOperator = string;

/** Describes the parameters for using a user's KeyVault certificate for securing custom domain. */
export declare interface KeyVaultCertificateSourceParameters {
    typeName: "KeyVaultCertificateSourceParameters";
    /** Subscription Id of the user's Key Vault containing the SSL certificate */
    subscriptionId: string;
    /** Resource group of the user's Key Vault containing the SSL certificate */
    resourceGroupName: string;
    /** The name of the user's Key Vault containing the SSL certificate */
    vaultName: string;
    /** The name of Key Vault Secret (representing the full certificate PFX) in Key Vault. */
    secretName: string;
    /** The version(GUID) of Key Vault Secret in Key Vault. */
    secretVersion?: string;
    /** Describes the action that shall be taken when the certificate is updated in Key Vault. */
    updateRule: UpdateRule;
    /** Describes the action that shall be taken when the certificate is removed from Key Vault. */
    deleteRule: DeleteRule;
}

/** Describes the parameters for using a user's KeyVault for URL Signing Key. */
export declare interface KeyVaultSigningKeyParameters {
    typeName: "KeyVaultSigningKeyParameters";
    /** Subscription Id of the user's Key Vault containing the secret */
    subscriptionId: string;
    /** Resource group of the user's Key Vault containing the secret */
    resourceGroupName: string;
    /** The name of the user's Key Vault containing the secret */
    vaultName: string;
    /** The name of secret in Key Vault. */
    secretName: string;
    /** The version(GUID) of secret in Key Vault. */
    secretVersion: string;
}

/** Known values of {@link ActionType} that the service accepts. */
export declare enum KnownActionType {
    /** Allow */
    Allow = "Allow",
    /** Block */
    Block = "Block",
    /** Log */
    Log = "Log",
    /** Redirect */
    Redirect = "Redirect"
}

/** Known values of {@link AfdCertificateType} that the service accepts. */
export declare enum KnownAfdCertificateType {
    /** CustomerCertificate */
    CustomerCertificate = "CustomerCertificate",
    /** ManagedCertificate */
    ManagedCertificate = "ManagedCertificate",
    /** AzureFirstPartyManagedCertificate */
    AzureFirstPartyManagedCertificate = "AzureFirstPartyManagedCertificate"
}

/** Known values of {@link AFDEndpointProtocols} that the service accepts. */
export declare enum KnownAFDEndpointProtocols {
    /** Http */
    Http = "Http",
    /** Https */
    Https = "Https"
}

/** Known values of {@link AfdProvisioningState} that the service accepts. */
export declare enum KnownAfdProvisioningState {
    /** Succeeded */
    Succeeded = "Succeeded",
    /** Failed */
    Failed = "Failed",
    /** Updating */
    Updating = "Updating",
    /** Deleting */
    Deleting = "Deleting",
    /** Creating */
    Creating = "Creating"
}

/** Known values of {@link AfdQueryStringCachingBehavior} that the service accepts. */
export declare enum KnownAfdQueryStringCachingBehavior {
    /** IgnoreQueryString */
    IgnoreQueryString = "IgnoreQueryString",
    /** UseQueryString */
    UseQueryString = "UseQueryString",
    /** IgnoreSpecifiedQueryStrings */
    IgnoreSpecifiedQueryStrings = "IgnoreSpecifiedQueryStrings",
    /** IncludeSpecifiedQueryStrings */
    IncludeSpecifiedQueryStrings = "IncludeSpecifiedQueryStrings"
}

/** Known values of {@link Algorithm} that the service accepts. */
export declare enum KnownAlgorithm {
    /** SHA256 */
    SHA256 = "SHA256"
}

/** Known values of {@link AutoGeneratedDomainNameLabelScope} that the service accepts. */
export declare enum KnownAutoGeneratedDomainNameLabelScope {
    /** TenantReuse */
    TenantReuse = "TenantReuse",
    /** SubscriptionReuse */
    SubscriptionReuse = "SubscriptionReuse",
    /** ResourceGroupReuse */
    ResourceGroupReuse = "ResourceGroupReuse",
    /** NoReuse */
    NoReuse = "NoReuse"
}

/** Known values of {@link CacheBehavior} that the service accepts. */
export declare enum KnownCacheBehavior {
    /** BypassCache */
    BypassCache = "BypassCache",
    /** Override */
    Override = "Override",
    /** SetIfMissing */
    SetIfMissing = "SetIfMissing"
}

/** Known values of {@link CacheType} that the service accepts. */
export declare enum KnownCacheType {
    /** All */
    All = "All"
}

/** Known values of {@link CertificateSource} that the service accepts. */
export declare enum KnownCertificateSource {
    /** AzureKeyVault */
    AzureKeyVault = "AzureKeyVault",
    /** Cdn */
    Cdn = "Cdn"
}

/** Known values of {@link CertificateType} that the service accepts. */
export declare enum KnownCertificateType {
    /** Shared */
    Shared = "Shared",
    /** Dedicated */
    Dedicated = "Dedicated"
}

/** Known values of {@link ClientPortOperator} that the service accepts. */
export declare enum KnownClientPortOperator {
    /** Any */
    Any = "Any",
    /** Equal */
    Equal = "Equal",
    /** Contains */
    Contains = "Contains",
    /** BeginsWith */
    BeginsWith = "BeginsWith",
    /** EndsWith */
    EndsWith = "EndsWith",
    /** LessThan */
    LessThan = "LessThan",
    /** LessThanOrEqual */
    LessThanOrEqual = "LessThanOrEqual",
    /** GreaterThan */
    GreaterThan = "GreaterThan",
    /** GreaterThanOrEqual */
    GreaterThanOrEqual = "GreaterThanOrEqual",
    /** RegEx */
    RegEx = "RegEx"
}

/** Known values of {@link CookiesOperator} that the service accepts. */
export declare enum KnownCookiesOperator {
    /** Any */
    Any = "Any",
    /** Equal */
    Equal = "Equal",
    /** Contains */
    Contains = "Contains",
    /** BeginsWith */
    BeginsWith = "BeginsWith",
    /** EndsWith */
    EndsWith = "EndsWith",
    /** LessThan */
    LessThan = "LessThan",
    /** LessThanOrEqual */
    LessThanOrEqual = "LessThanOrEqual",
    /** GreaterThan */
    GreaterThan = "GreaterThan",
    /** GreaterThanOrEqual */
    GreaterThanOrEqual = "GreaterThanOrEqual",
    /** RegEx */
    RegEx = "RegEx"
}

/** Known values of {@link CustomDomainResourceState} that the service accepts. */
export declare enum KnownCustomDomainResourceState {
    /** Creating */
    Creating = "Creating",
    /** Active */
    Active = "Active",
    /** Deleting */
    Deleting = "Deleting"
}

/** Known values of {@link CustomHttpsProvisioningState} that the service accepts. */
export declare enum KnownCustomHttpsProvisioningState {
    /** Enabling */
    Enabling = "Enabling",
    /** Enabled */
    Enabled = "Enabled",
    /** Disabling */
    Disabling = "Disabling",
    /** Disabled */
    Disabled = "Disabled",
    /** Failed */
    Failed = "Failed"
}

/** Known values of {@link CustomHttpsProvisioningSubstate} that the service accepts. */
export declare enum KnownCustomHttpsProvisioningSubstate {
    /** SubmittingDomainControlValidationRequest */
    SubmittingDomainControlValidationRequest = "SubmittingDomainControlValidationRequest",
    /** PendingDomainControlValidationREquestApproval */
    PendingDomainControlValidationREquestApproval = "PendingDomainControlValidationREquestApproval",
    /** DomainControlValidationRequestApproved */
    DomainControlValidationRequestApproved = "DomainControlValidationRequestApproved",
    /** DomainControlValidationRequestRejected */
    DomainControlValidationRequestRejected = "DomainControlValidationRequestRejected",
    /** DomainControlValidationRequestTimedOut */
    DomainControlValidationRequestTimedOut = "DomainControlValidationRequestTimedOut",
    /** IssuingCertificate */
    IssuingCertificate = "IssuingCertificate",
    /** DeployingCertificate */
    DeployingCertificate = "DeployingCertificate",
    /** CertificateDeployed */
    CertificateDeployed = "CertificateDeployed",
    /** DeletingCertificate */
    DeletingCertificate = "DeletingCertificate",
    /** CertificateDeleted */
    CertificateDeleted = "CertificateDeleted"
}

/** Known values of {@link CustomRuleEnabledState} that the service accepts. */
export declare enum KnownCustomRuleEnabledState {
    /** Disabled */
    Disabled = "Disabled",
    /** Enabled */
    Enabled = "Enabled"
}

/** Known values of {@link DeleteRule} that the service accepts. */
export declare enum KnownDeleteRule {
    /** NoAction */
    NoAction = "NoAction"
}

/** Known values of {@link DeliveryRuleAction} that the service accepts. */
export declare enum KnownDeliveryRuleAction {
    /** CacheExpiration */
    CacheExpiration = "CacheExpiration",
    /** CacheKeyQueryString */
    CacheKeyQueryString = "CacheKeyQueryString",
    /** ModifyRequestHeader */
    ModifyRequestHeader = "ModifyRequestHeader",
    /** ModifyResponseHeader */
    ModifyResponseHeader = "ModifyResponseHeader",
    /** UrlRedirect */
    UrlRedirect = "UrlRedirect",
    /** UrlRewrite */
    UrlRewrite = "UrlRewrite",
    /** UrlSigning */
    UrlSigning = "UrlSigning",
    /** OriginGroupOverride */
    OriginGroupOverride = "OriginGroupOverride",
    /** RouteConfigurationOverride */
    RouteConfigurationOverride = "RouteConfigurationOverride"
}

/** Known values of {@link DeploymentStatus} that the service accepts. */
export declare enum KnownDeploymentStatus {
    /** NotStarted */
    NotStarted = "NotStarted",
    /** InProgress */
    InProgress = "InProgress",
    /** Succeeded */
    Succeeded = "Succeeded",
    /** Failed */
    Failed = "Failed"
}

/** Known values of {@link DestinationProtocol} that the service accepts. */
export declare enum KnownDestinationProtocol {
    /** MatchRequest */
    MatchRequest = "MatchRequest",
    /** Http */
    Http = "Http",
    /** Https */
    Https = "Https"
}

/** Known values of {@link DomainValidationState} that the service accepts. */
export declare enum KnownDomainValidationState {
    /** Unknown */
    Unknown = "Unknown",
    /** Submitting */
    Submitting = "Submitting",
    /** Pending */
    Pending = "Pending",
    /** Rejected */
    Rejected = "Rejected",
    /** TimedOut */
    TimedOut = "TimedOut",
    /** PendingRevalidation */
    PendingRevalidation = "PendingRevalidation",
    /** Approved */
    Approved = "Approved",
    /** RefreshingValidationToken */
    RefreshingValidationToken = "RefreshingValidationToken",
    /** InternalError */
    InternalError = "InternalError"
}

/** Known values of {@link EnabledState} that the service accepts. */
export declare enum KnownEnabledState {
    /** Enabled */
    Enabled = "Enabled",
    /** Disabled */
    Disabled = "Disabled"
}

/** Known values of {@link EndpointProvisioningState} that the service accepts. */
export declare enum KnownEndpointProvisioningState {
    /** Succeeded */
    Succeeded = "Succeeded",
    /** Failed */
    Failed = "Failed",
    /** Updating */
    Updating = "Updating",
    /** Deleting */
    Deleting = "Deleting",
    /** Creating */
    Creating = "Creating"
}

/** Known values of {@link EndpointResourceState} that the service accepts. */
export declare enum KnownEndpointResourceState {
    /** Creating */
    Creating = "Creating",
    /** Deleting */
    Deleting = "Deleting",
    /** Running */
    Running = "Running",
    /** Starting */
    Starting = "Starting",
    /** Stopped */
    Stopped = "Stopped",
    /** Stopping */
    Stopping = "Stopping"
}

/** Known values of {@link ForwardingProtocol} that the service accepts. */
export declare enum KnownForwardingProtocol {
    /** HttpOnly */
    HttpOnly = "HttpOnly",
    /** HttpsOnly */
    HttpsOnly = "HttpsOnly",
    /** MatchRequest */
    MatchRequest = "MatchRequest"
}

/** Known values of {@link HeaderAction} that the service accepts. */
export declare enum KnownHeaderAction {
    /** Append */
    Append = "Append",
    /** Overwrite */
    Overwrite = "Overwrite",
    /** Delete */
    Delete = "Delete"
}

/** Known values of {@link HostNameOperator} that the service accepts. */
export declare enum KnownHostNameOperator {
    /** Any */
    Any = "Any",
    /** Equal */
    Equal = "Equal",
    /** Contains */
    Contains = "Contains",
    /** BeginsWith */
    BeginsWith = "BeginsWith",
    /** EndsWith */
    EndsWith = "EndsWith",
    /** LessThan */
    LessThan = "LessThan",
    /** LessThanOrEqual */
    LessThanOrEqual = "LessThanOrEqual",
    /** GreaterThan */
    GreaterThan = "GreaterThan",
    /** GreaterThanOrEqual */
    GreaterThanOrEqual = "GreaterThanOrEqual",
    /** RegEx */
    RegEx = "RegEx"
}

/** Known values of {@link HttpsRedirect} that the service accepts. */
export declare enum KnownHttpsRedirect {
    /** Enabled */
    Enabled = "Enabled",
    /** Disabled */
    Disabled = "Disabled"
}

/** Known values of {@link HttpVersionOperator} that the service accepts. */
export declare enum KnownHttpVersionOperator {
    /** Equal */
    Equal = "Equal"
}

/** Known values of {@link IdentityType} that the service accepts. */
export declare enum KnownIdentityType {
    /** User */
    User = "user",
    /** Application */
    Application = "application",
    /** ManagedIdentity */
    ManagedIdentity = "managedIdentity",
    /** Key */
    Key = "key"
}

/** Known values of {@link IsDeviceMatchConditionParametersMatchValuesItem} that the service accepts. */
export declare enum KnownIsDeviceMatchConditionParametersMatchValuesItem {
    /** Mobile */
    Mobile = "Mobile",
    /** Desktop */
    Desktop = "Desktop"
}

/** Known values of {@link IsDeviceOperator} that the service accepts. */
export declare enum KnownIsDeviceOperator {
    /** Equal */
    Equal = "Equal"
}

/** Known values of {@link LinkToDefaultDomain} that the service accepts. */
export declare enum KnownLinkToDefaultDomain {
    /** Enabled */
    Enabled = "Enabled",
    /** Disabled */
    Disabled = "Disabled"
}

/** Known values of {@link LogMetric} that the service accepts. */
export declare enum KnownLogMetric {
    /** ClientRequestCount */
    ClientRequestCount = "clientRequestCount",
    /** ClientRequestTraffic */
    ClientRequestTraffic = "clientRequestTraffic",
    /** ClientRequestBandwidth */
    ClientRequestBandwidth = "clientRequestBandwidth",
    /** OriginRequestTraffic */
    OriginRequestTraffic = "originRequestTraffic",
    /** OriginRequestBandwidth */
    OriginRequestBandwidth = "originRequestBandwidth",
    /** TotalLatency */
    TotalLatency = "totalLatency"
}

/** Known values of {@link LogMetricsGranularity} that the service accepts. */
export declare enum KnownLogMetricsGranularity {
    /** PT5M */
    PT5M = "PT5M",
    /** PT1H */
    PT1H = "PT1H",
    /** P1D */
    P1D = "P1D"
}

/** Known values of {@link LogMetricsGroupBy} that the service accepts. */
export declare enum KnownLogMetricsGroupBy {
    /** HttpStatusCode */
    HttpStatusCode = "httpStatusCode",
    /** Protocol */
    Protocol = "protocol",
    /** CacheStatus */
    CacheStatus = "cacheStatus",
    /** CountryOrRegion */
    CountryOrRegion = "countryOrRegion",
    /** CustomDomain */
    CustomDomain = "customDomain"
}

/** Known values of {@link LogRanking} that the service accepts. */
export declare enum KnownLogRanking {
    /** Url */
    Url = "url",
    /** Referrer */
    Referrer = "referrer",
    /** Browser */
    Browser = "browser",
    /** UserAgent */
    UserAgent = "userAgent",
    /** CountryOrRegion */
    CountryOrRegion = "countryOrRegion"
}

/** Known values of {@link LogRankingMetric} that the service accepts. */
export declare enum KnownLogRankingMetric {
    /** ClientRequestCount */
    ClientRequestCount = "clientRequestCount",
    /** ClientRequestTraffic */
    ClientRequestTraffic = "clientRequestTraffic",
    /** HitCount */
    HitCount = "hitCount",
    /** MissCount */
    MissCount = "missCount",
    /** UserErrorCount */
    UserErrorCount = "userErrorCount",
    /** ErrorCount */
    ErrorCount = "errorCount"
}

/** Known values of {@link ManagedRuleEnabledState} that the service accepts. */
export declare enum KnownManagedRuleEnabledState {
    /** Disabled */
    Disabled = "Disabled",
    /** Enabled */
    Enabled = "Enabled"
}

/** Known values of {@link MatchProcessingBehavior} that the service accepts. */
export declare enum KnownMatchProcessingBehavior {
    /** Continue */
    Continue = "Continue",
    /** Stop */
    Stop = "Stop"
}

/** Known values of {@link MatchVariable} that the service accepts. */
export declare enum KnownMatchVariable {
    /** RemoteAddress */
    RemoteAddress = "RemoteAddress",
    /** RequestMethod */
    RequestMethod = "RequestMethod",
    /** QueryString */
    QueryString = "QueryString",
    /** PostArgs */
    PostArgs = "PostArgs",
    /** RequestUri */
    RequestUri = "RequestUri",
    /** RequestHeader */
    RequestHeader = "RequestHeader",
    /** RequestBody */
    RequestBody = "RequestBody",
    /** RequestScheme */
    RequestScheme = "RequestScheme",
    /** UrlPath */
    UrlPath = "UrlPath",
    /** UrlFileExtension */
    UrlFileExtension = "UrlFileExtension",
    /** UrlFileName */
    UrlFileName = "UrlFileName",
    /** HttpVersion */
    HttpVersion = "HttpVersion",
    /** Cookies */
    Cookies = "Cookies",
    /** IsDevice */
    IsDevice = "IsDevice",
    /** SocketAddr */
    SocketAddr = "SocketAddr",
    /** ClientPort */
    ClientPort = "ClientPort",
    /** ServerPort */
    ServerPort = "ServerPort",
    /** HostName */
    HostName = "HostName",
    /** SslProtocol */
    SslProtocol = "SslProtocol"
}

/** Known values of {@link MetricsResponseGranularity} that the service accepts. */
export declare enum KnownMetricsResponseGranularity {
    /** PT5M */
    PT5M = "PT5M",
    /** PT1H */
    PT1H = "PT1H",
    /** P1D */
    P1D = "P1D"
}

/** Known values of {@link MetricsResponseSeriesItemUnit} that the service accepts. */
export declare enum KnownMetricsResponseSeriesItemUnit {
    /** Count */
    Count = "count",
    /** Bytes */
    Bytes = "bytes",
    /** BitsPerSecond */
    BitsPerSecond = "bitsPerSecond",
    /** MilliSeconds */
    MilliSeconds = "milliSeconds"
}

/** Known values of {@link Operator} that the service accepts. */
export declare enum KnownOperator {
    /** Any */
    Any = "Any",
    /** IPMatch */
    IPMatch = "IPMatch",
    /** GeoMatch */
    GeoMatch = "GeoMatch",
    /** Equal */
    Equal = "Equal",
    /** Contains */
    Contains = "Contains",
    /** LessThan */
    LessThan = "LessThan",
    /** GreaterThan */
    GreaterThan = "GreaterThan",
    /** LessThanOrEqual */
    LessThanOrEqual = "LessThanOrEqual",
    /** GreaterThanOrEqual */
    GreaterThanOrEqual = "GreaterThanOrEqual",
    /** BeginsWith */
    BeginsWith = "BeginsWith",
    /** EndsWith */
    EndsWith = "EndsWith",
    /** RegEx */
    RegEx = "RegEx"
}

/** Known values of {@link OptimizationType} that the service accepts. */
export declare enum KnownOptimizationType {
    /** GeneralWebDelivery */
    GeneralWebDelivery = "GeneralWebDelivery",
    /** GeneralMediaStreaming */
    GeneralMediaStreaming = "GeneralMediaStreaming",
    /** VideoOnDemandMediaStreaming */
    VideoOnDemandMediaStreaming = "VideoOnDemandMediaStreaming",
    /** LargeFileDownload */
    LargeFileDownload = "LargeFileDownload",
    /** DynamicSiteAcceleration */
    DynamicSiteAcceleration = "DynamicSiteAcceleration"
}

/** Known values of {@link OriginGroupProvisioningState} that the service accepts. */
export declare enum KnownOriginGroupProvisioningState {
    /** Succeeded */
    Succeeded = "Succeeded",
    /** Failed */
    Failed = "Failed",
    /** Updating */
    Updating = "Updating",
    /** Deleting */
    Deleting = "Deleting",
    /** Creating */
    Creating = "Creating"
}

/** Known values of {@link OriginGroupResourceState} that the service accepts. */
export declare enum KnownOriginGroupResourceState {
    /** Creating */
    Creating = "Creating",
    /** Active */
    Active = "Active",
    /** Deleting */
    Deleting = "Deleting"
}

/** Known values of {@link OriginProvisioningState} that the service accepts. */
export declare enum KnownOriginProvisioningState {
    /** Succeeded */
    Succeeded = "Succeeded",
    /** Failed */
    Failed = "Failed",
    /** Updating */
    Updating = "Updating",
    /** Deleting */
    Deleting = "Deleting",
    /** Creating */
    Creating = "Creating"
}

/** Known values of {@link OriginResourceState} that the service accepts. */
export declare enum KnownOriginResourceState {
    /** Creating */
    Creating = "Creating",
    /** Active */
    Active = "Active",
    /** Deleting */
    Deleting = "Deleting"
}

/** Known values of {@link ParamIndicator} that the service accepts. */
export declare enum KnownParamIndicator {
    /** Expires */
    Expires = "Expires",
    /** KeyId */
    KeyId = "KeyId",
    /** Signature */
    Signature = "Signature"
}

/** Known values of {@link PolicyEnabledState} that the service accepts. */
export declare enum KnownPolicyEnabledState {
    /** Disabled */
    Disabled = "Disabled",
    /** Enabled */
    Enabled = "Enabled"
}

/** Known values of {@link PolicyMode} that the service accepts. */
export declare enum KnownPolicyMode {
    /** Prevention */
    Prevention = "Prevention",
    /** Detection */
    Detection = "Detection"
}

/** Known values of {@link PolicyResourceState} that the service accepts. */
export declare enum KnownPolicyResourceState {
    /** Creating */
    Creating = "Creating",
    /** Enabling */
    Enabling = "Enabling",
    /** Enabled */
    Enabled = "Enabled",
    /** Disabling */
    Disabling = "Disabling",
    /** Disabled */
    Disabled = "Disabled",
    /** Deleting */
    Deleting = "Deleting"
}

/** Known values of {@link PolicySettingsDefaultCustomBlockResponseStatusCode} that the service accepts. */
export declare enum KnownPolicySettingsDefaultCustomBlockResponseStatusCode {
    /** TwoHundred */
    TwoHundred = 200,
    /** FourHundredThree */
    FourHundredThree = 403,
    /** FourHundredFive */
    FourHundredFive = 405,
    /** FourHundredSix */
    FourHundredSix = 406,
    /** FourHundredTwentyNine */
    FourHundredTwentyNine = 429
}

/** Known values of {@link PostArgsOperator} that the service accepts. */
export declare enum KnownPostArgsOperator {
    /** Any */
    Any = "Any",
    /** Equal */
    Equal = "Equal",
    /** Contains */
    Contains = "Contains",
    /** BeginsWith */
    BeginsWith = "BeginsWith",
    /** EndsWith */
    EndsWith = "EndsWith",
    /** LessThan */
    LessThan = "LessThan",
    /** LessThanOrEqual */
    LessThanOrEqual = "LessThanOrEqual",
    /** GreaterThan */
    GreaterThan = "GreaterThan",
    /** GreaterThanOrEqual */
    GreaterThanOrEqual = "GreaterThanOrEqual",
    /** RegEx */
    RegEx = "RegEx"
}

/** Known values of {@link PrivateEndpointStatus} that the service accepts. */
export declare enum KnownPrivateEndpointStatus {
    /** Pending */
    Pending = "Pending",
    /** Approved */
    Approved = "Approved",
    /** Rejected */
    Rejected = "Rejected",
    /** Disconnected */
    Disconnected = "Disconnected",
    /** Timeout */
    Timeout = "Timeout"
}

/** Known values of {@link ProfileProvisioningState} that the service accepts. */
export declare enum KnownProfileProvisioningState {
    /** Succeeded */
    Succeeded = "Succeeded",
    /** Failed */
    Failed = "Failed",
    /** Updating */
    Updating = "Updating",
    /** Deleting */
    Deleting = "Deleting",
    /** Creating */
    Creating = "Creating"
}

/** Known values of {@link ProfileResourceState} that the service accepts. */
export declare enum KnownProfileResourceState {
    /** Creating */
    Creating = "Creating",
    /** Active */
    Active = "Active",
    /** Deleting */
    Deleting = "Deleting",
    /** Disabled */
    Disabled = "Disabled"
}

/** Known values of {@link ProtocolType} that the service accepts. */
export declare enum KnownProtocolType {
    /** ServerNameIndication */
    ServerNameIndication = "ServerNameIndication",
    /** IPBased */
    IPBased = "IPBased"
}

/** Known values of {@link ProvisioningState} that the service accepts. */
export declare enum KnownProvisioningState {
    /** Creating */
    Creating = "Creating",
    /** Succeeded */
    Succeeded = "Succeeded",
    /** Failed */
    Failed = "Failed"
}

/** Known values of {@link QueryStringBehavior} that the service accepts. */
export declare enum KnownQueryStringBehavior {
    /** Include */
    Include = "Include",
    /** IncludeAll */
    IncludeAll = "IncludeAll",
    /** Exclude */
    Exclude = "Exclude",
    /** ExcludeAll */
    ExcludeAll = "ExcludeAll"
}

/** Known values of {@link QueryStringOperator} that the service accepts. */
export declare enum KnownQueryStringOperator {
    /** Any */
    Any = "Any",
    /** Equal */
    Equal = "Equal",
    /** Contains */
    Contains = "Contains",
    /** BeginsWith */
    BeginsWith = "BeginsWith",
    /** EndsWith */
    EndsWith = "EndsWith",
    /** LessThan */
    LessThan = "LessThan",
    /** LessThanOrEqual */
    LessThanOrEqual = "LessThanOrEqual",
    /** GreaterThan */
    GreaterThan = "GreaterThan",
    /** GreaterThanOrEqual */
    GreaterThanOrEqual = "GreaterThanOrEqual",
    /** RegEx */
    RegEx = "RegEx"
}

/** Known values of {@link RedirectType} that the service accepts. */
export declare enum KnownRedirectType {
    /** Moved */
    Moved = "Moved",
    /** Found */
    Found = "Found",
    /** TemporaryRedirect */
    TemporaryRedirect = "TemporaryRedirect",
    /** PermanentRedirect */
    PermanentRedirect = "PermanentRedirect"
}

/** Known values of {@link RemoteAddressOperator} that the service accepts. */
export declare enum KnownRemoteAddressOperator {
    /** Any */
    Any = "Any",
    /** IPMatch */
    IPMatch = "IPMatch",
    /** GeoMatch */
    GeoMatch = "GeoMatch"
}

/** Known values of {@link RequestBodyOperator} that the service accepts. */
export declare enum KnownRequestBodyOperator {
    /** Any */
    Any = "Any",
    /** Equal */
    Equal = "Equal",
    /** Contains */
    Contains = "Contains",
    /** BeginsWith */
    BeginsWith = "BeginsWith",
    /** EndsWith */
    EndsWith = "EndsWith",
    /** LessThan */
    LessThan = "LessThan",
    /** LessThanOrEqual */
    LessThanOrEqual = "LessThanOrEqual",
    /** GreaterThan */
    GreaterThan = "GreaterThan",
    /** GreaterThanOrEqual */
    GreaterThanOrEqual = "GreaterThanOrEqual",
    /** RegEx */
    RegEx = "RegEx"
}

/** Known values of {@link RequestHeaderOperator} that the service accepts. */
export declare enum KnownRequestHeaderOperator {
    /** Any */
    Any = "Any",
    /** Equal */
    Equal = "Equal",
    /** Contains */
    Contains = "Contains",
    /** BeginsWith */
    BeginsWith = "BeginsWith",
    /** EndsWith */
    EndsWith = "EndsWith",
    /** LessThan */
    LessThan = "LessThan",
    /** LessThanOrEqual */
    LessThanOrEqual = "LessThanOrEqual",
    /** GreaterThan */
    GreaterThan = "GreaterThan",
    /** GreaterThanOrEqual */
    GreaterThanOrEqual = "GreaterThanOrEqual",
    /** RegEx */
    RegEx = "RegEx"
}

/** Known values of {@link RequestMethodMatchConditionParametersMatchValuesItem} that the service accepts. */
export declare enum KnownRequestMethodMatchConditionParametersMatchValuesItem {
    /** GET */
    GET = "GET",
    /** Head */
    Head = "HEAD",
    /** Post */
    Post = "POST",
    /** PUT */
    PUT = "PUT",
    /** Delete */
    Delete = "DELETE",
    /** Options */
    Options = "OPTIONS",
    /** Trace */
    Trace = "TRACE"
}

/** Known values of {@link RequestMethodOperator} that the service accepts. */
export declare enum KnownRequestMethodOperator {
    /** Equal */
    Equal = "Equal"
}

/** Known values of {@link RequestSchemeMatchConditionParametersMatchValuesItem} that the service accepts. */
export declare enum KnownRequestSchemeMatchConditionParametersMatchValuesItem {
    /** Http */
    Http = "HTTP",
    /** Https */
    Https = "HTTPS"
}

/** Known values of {@link RequestUriOperator} that the service accepts. */
export declare enum KnownRequestUriOperator {
    /** Any */
    Any = "Any",
    /** Equal */
    Equal = "Equal",
    /** Contains */
    Contains = "Contains",
    /** BeginsWith */
    BeginsWith = "BeginsWith",
    /** EndsWith */
    EndsWith = "EndsWith",
    /** LessThan */
    LessThan = "LessThan",
    /** LessThanOrEqual */
    LessThanOrEqual = "LessThanOrEqual",
    /** GreaterThan */
    GreaterThan = "GreaterThan",
    /** GreaterThanOrEqual */
    GreaterThanOrEqual = "GreaterThanOrEqual",
    /** RegEx */
    RegEx = "RegEx"
}

/** Known values of {@link ResourceType} that the service accepts. */
export declare enum KnownResourceType {
    /** MicrosoftCdnProfilesEndpoints */
    MicrosoftCdnProfilesEndpoints = "Microsoft.Cdn/Profiles/Endpoints",
    /** MicrosoftCdnProfilesAfdEndpoints */
    MicrosoftCdnProfilesAfdEndpoints = "Microsoft.Cdn/Profiles/AfdEndpoints"
}

/** Known values of {@link ResourceUsageUnit} that the service accepts. */
export declare enum KnownResourceUsageUnit {
    /** Count */
    Count = "count"
}

/** Known values of {@link RuleCacheBehavior} that the service accepts. */
export declare enum KnownRuleCacheBehavior {
    /** HonorOrigin */
    HonorOrigin = "HonorOrigin",
    /** OverrideAlways */
    OverrideAlways = "OverrideAlways",
    /** OverrideIfOriginMissing */
    OverrideIfOriginMissing = "OverrideIfOriginMissing"
}

/** Known values of {@link RuleIsCompressionEnabled} that the service accepts. */
export declare enum KnownRuleIsCompressionEnabled {
    /** Enabled */
    Enabled = "Enabled",
    /** Disabled */
    Disabled = "Disabled"
}

/** Known values of {@link RuleQueryStringCachingBehavior} that the service accepts. */
export declare enum KnownRuleQueryStringCachingBehavior {
    /** IgnoreQueryString */
    IgnoreQueryString = "IgnoreQueryString",
    /** UseQueryString */
    UseQueryString = "UseQueryString",
    /** IgnoreSpecifiedQueryStrings */
    IgnoreSpecifiedQueryStrings = "IgnoreSpecifiedQueryStrings",
    /** IncludeSpecifiedQueryStrings */
    IncludeSpecifiedQueryStrings = "IncludeSpecifiedQueryStrings"
}

/** Known values of {@link SecretType} that the service accepts. */
export declare enum KnownSecretType {
    /** UrlSigningKey */
    UrlSigningKey = "UrlSigningKey",
    /** CustomerCertificate */
    CustomerCertificate = "CustomerCertificate",
    /** ManagedCertificate */
    ManagedCertificate = "ManagedCertificate",
    /** AzureFirstPartyManagedCertificate */
    AzureFirstPartyManagedCertificate = "AzureFirstPartyManagedCertificate"
}

/** Known values of {@link SecurityPolicyType} that the service accepts. */
export declare enum KnownSecurityPolicyType {
    /** WebApplicationFirewall */
    WebApplicationFirewall = "WebApplicationFirewall"
}

/** Known values of {@link ServerPortOperator} that the service accepts. */
export declare enum KnownServerPortOperator {
    /** Any */
    Any = "Any",
    /** Equal */
    Equal = "Equal",
    /** Contains */
    Contains = "Contains",
    /** BeginsWith */
    BeginsWith = "BeginsWith",
    /** EndsWith */
    EndsWith = "EndsWith",
    /** LessThan */
    LessThan = "LessThan",
    /** LessThanOrEqual */
    LessThanOrEqual = "LessThanOrEqual",
    /** GreaterThan */
    GreaterThan = "GreaterThan",
    /** GreaterThanOrEqual */
    GreaterThanOrEqual = "GreaterThanOrEqual",
    /** RegEx */
    RegEx = "RegEx"
}

/** Known values of {@link SkuName} that the service accepts. */
export declare enum KnownSkuName {
    /** StandardVerizon */
    StandardVerizon = "Standard_Verizon",
    /** PremiumVerizon */
    PremiumVerizon = "Premium_Verizon",
    /** CustomVerizon */
    CustomVerizon = "Custom_Verizon",
    /** StandardAkamai */
    StandardAkamai = "Standard_Akamai",
    /** StandardChinaCdn */
    StandardChinaCdn = "Standard_ChinaCdn",
    /** StandardMicrosoft */
    StandardMicrosoft = "Standard_Microsoft",
    /** StandardAzureFrontDoor */
    StandardAzureFrontDoor = "Standard_AzureFrontDoor",
    /** PremiumAzureFrontDoor */
    PremiumAzureFrontDoor = "Premium_AzureFrontDoor",
    /** Standard955BandWidthChinaCdn */
    Standard955BandWidthChinaCdn = "Standard_955BandWidth_ChinaCdn",
    /** StandardAvgBandWidthChinaCdn */
    StandardAvgBandWidthChinaCdn = "Standard_AvgBandWidth_ChinaCdn",
    /** StandardPlusChinaCdn */
    StandardPlusChinaCdn = "StandardPlus_ChinaCdn",
    /** StandardPlus955BandWidthChinaCdn */
    StandardPlus955BandWidthChinaCdn = "StandardPlus_955BandWidth_ChinaCdn",
    /** StandardPlusAvgBandWidthChinaCdn */
    StandardPlusAvgBandWidthChinaCdn = "StandardPlus_AvgBandWidth_ChinaCdn"
}

/** Known values of {@link SocketAddrOperator} that the service accepts. */
export declare enum KnownSocketAddrOperator {
    /** Any */
    Any = "Any",
    /** IPMatch */
    IPMatch = "IPMatch"
}

/** Known values of {@link SslProtocol} that the service accepts. */
export declare enum KnownSslProtocol {
    /** TLSv1 */
    TLSv1 = "TLSv1",
    /** TLSv11 */
    TLSv11 = "TLSv1.1",
    /** TLSv12 */
    TLSv12 = "TLSv1.2"
}

/** Known values of {@link SslProtocolOperator} that the service accepts. */
export declare enum KnownSslProtocolOperator {
    /** Equal */
    Equal = "Equal"
}

/** Known values of {@link Status} that the service accepts. */
export declare enum KnownStatus {
    /** Valid */
    Valid = "Valid",
    /** Invalid */
    Invalid = "Invalid",
    /** AccessDenied */
    AccessDenied = "AccessDenied",
    /** CertificateExpired */
    CertificateExpired = "CertificateExpired"
}

/** Known values of {@link Transform} that the service accepts. */
export declare enum KnownTransform {
    /** Lowercase */
    Lowercase = "Lowercase",
    /** Uppercase */
    Uppercase = "Uppercase",
    /** Trim */
    Trim = "Trim",
    /** UrlDecode */
    UrlDecode = "UrlDecode",
    /** UrlEncode */
    UrlEncode = "UrlEncode",
    /** RemoveNulls */
    RemoveNulls = "RemoveNulls"
}

/** Known values of {@link TransformType} that the service accepts. */
export declare enum KnownTransformType {
    /** Lowercase */
    Lowercase = "Lowercase",
    /** Uppercase */
    Uppercase = "Uppercase",
    /** Trim */
    Trim = "Trim",
    /** UrlDecode */
    UrlDecode = "UrlDecode",
    /** UrlEncode */
    UrlEncode = "UrlEncode",
    /** RemoveNulls */
    RemoveNulls = "RemoveNulls"
}

/** Known values of {@link UpdateRule} that the service accepts. */
export declare enum KnownUpdateRule {
    /** NoAction */
    NoAction = "NoAction"
}

/** Known values of {@link UrlFileExtensionOperator} that the service accepts. */
export declare enum KnownUrlFileExtensionOperator {
    /** Any */
    Any = "Any",
    /** Equal */
    Equal = "Equal",
    /** Contains */
    Contains = "Contains",
    /** BeginsWith */
    BeginsWith = "BeginsWith",
    /** EndsWith */
    EndsWith = "EndsWith",
    /** LessThan */
    LessThan = "LessThan",
    /** LessThanOrEqual */
    LessThanOrEqual = "LessThanOrEqual",
    /** GreaterThan */
    GreaterThan = "GreaterThan",
    /** GreaterThanOrEqual */
    GreaterThanOrEqual = "GreaterThanOrEqual",
    /** RegEx */
    RegEx = "RegEx"
}

/** Known values of {@link UrlFileNameOperator} that the service accepts. */
export declare enum KnownUrlFileNameOperator {
    /** Any */
    Any = "Any",
    /** Equal */
    Equal = "Equal",
    /** Contains */
    Contains = "Contains",
    /** BeginsWith */
    BeginsWith = "BeginsWith",
    /** EndsWith */
    EndsWith = "EndsWith",
    /** LessThan */
    LessThan = "LessThan",
    /** LessThanOrEqual */
    LessThanOrEqual = "LessThanOrEqual",
    /** GreaterThan */
    GreaterThan = "GreaterThan",
    /** GreaterThanOrEqual */
    GreaterThanOrEqual = "GreaterThanOrEqual",
    /** RegEx */
    RegEx = "RegEx"
}

/** Known values of {@link UrlPathOperator} that the service accepts. */
export declare enum KnownUrlPathOperator {
    /** Any */
    Any = "Any",
    /** Equal */
    Equal = "Equal",
    /** Contains */
    Contains = "Contains",
    /** BeginsWith */
    BeginsWith = "BeginsWith",
    /** EndsWith */
    EndsWith = "EndsWith",
    /** LessThan */
    LessThan = "LessThan",
    /** LessThanOrEqual */
    LessThanOrEqual = "LessThanOrEqual",
    /** GreaterThan */
    GreaterThan = "GreaterThan",
    /** GreaterThanOrEqual */
    GreaterThanOrEqual = "GreaterThanOrEqual",
    /** Wildcard */
    Wildcard = "Wildcard",
    /** RegEx */
    RegEx = "RegEx"
}

/** Known values of {@link UsageUnit} that the service accepts. */
export declare enum KnownUsageUnit {
    /** Count */
    Count = "Count"
}

/** Known values of {@link WafAction} that the service accepts. */
export declare enum KnownWafAction {
    /** Allow */
    Allow = "allow",
    /** Block */
    Block = "block",
    /** Log */
    Log = "log",
    /** Redirect */
    Redirect = "redirect"
}

/** Known values of {@link WafGranularity} that the service accepts. */
export declare enum KnownWafGranularity {
    /** PT5M */
    PT5M = "PT5M",
    /** PT1H */
    PT1H = "PT1H",
    /** P1D */
    P1D = "P1D"
}

/** Known values of {@link WafMatchVariable} that the service accepts. */
export declare enum KnownWafMatchVariable {
    /** RemoteAddr */
    RemoteAddr = "RemoteAddr",
    /** SocketAddr */
    SocketAddr = "SocketAddr",
    /** RequestMethod */
    RequestMethod = "RequestMethod",
    /** RequestHeader */
    RequestHeader = "RequestHeader",
    /** RequestUri */
    RequestUri = "RequestUri",
    /** QueryString */
    QueryString = "QueryString",
    /** RequestBody */
    RequestBody = "RequestBody",
    /** Cookies */
    Cookies = "Cookies",
    /** PostArgs */
    PostArgs = "PostArgs"
}

/** Known values of {@link WafMetric} that the service accepts. */
export declare enum KnownWafMetric {
    /** ClientRequestCount */
    ClientRequestCount = "clientRequestCount"
}

/** Known values of {@link WafMetricsResponseGranularity} that the service accepts. */
export declare enum KnownWafMetricsResponseGranularity {
    /** PT5M */
    PT5M = "PT5M",
    /** PT1H */
    PT1H = "PT1H",
    /** P1D */
    P1D = "P1D"
}

/** Known values of {@link WafRankingGroupBy} that the service accepts. */
export declare enum KnownWafRankingGroupBy {
    /** HttpStatusCode */
    HttpStatusCode = "httpStatusCode",
    /** CustomDomain */
    CustomDomain = "customDomain"
}

/** Known values of {@link WafRankingType} that the service accepts. */
export declare enum KnownWafRankingType {
    /** Action */
    Action = "action",
    /** RuleGroup */
    RuleGroup = "ruleGroup",
    /** RuleId */
    RuleId = "ruleId",
    /** UserAgent */
    UserAgent = "userAgent",
    /** ClientIp */
    ClientIp = "clientIp",
    /** Url */
    Url = "url",
    /** CountryOrRegion */
    CountryOrRegion = "countryOrRegion",
    /** RuleType */
    RuleType = "ruleType"
}

/** Known values of {@link WafRuleType} that the service accepts. */
export declare enum KnownWafRuleType {
    /** Managed */
    Managed = "managed",
    /** Custom */
    Custom = "custom",
    /** Bot */
    Bot = "bot"
}

/**
 * Defines values for LinkToDefaultDomain. \
 * {@link KnownLinkToDefaultDomain} can be used interchangeably with LinkToDefaultDomain,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export declare type LinkToDefaultDomain = string;

/** Round-Robin load balancing settings for a backend pool */
export declare interface LoadBalancingSettingsParameters {
    /** The number of samples to consider for load balancing decisions */
    sampleSize?: number;
    /** The number of samples within the sample period that must succeed */
    successfulSamplesRequired?: number;
    /** The additional latency in milliseconds for probes to fall into the lowest latency bucket */
    additionalLatencyInMilliseconds?: number;
}

/** Parameters required for content load. */
export declare interface LoadParameters {
    /** The path to the content to be loaded. Path should be a relative file URL of the origin. */
    contentPaths: string[];
}

/** Interface representing a LogAnalytics. */
export declare interface LogAnalytics {
    /**
     * Get log report for AFD profile
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group. which is unique within the resource group.
     * @param metrics Array of LogMetric
     * @param dateTimeBegin
     * @param dateTimeEnd
     * @param granularity
     * @param customDomains Array of Get11ItemsItem
     * @param protocols Array of Get12ItemsItem
     * @param options The options parameters.
     */
    getLogAnalyticsMetrics(resourceGroupName: string, profileName: string, metrics: LogMetric[], dateTimeBegin: Date, dateTimeEnd: Date, granularity: LogMetricsGranularity, customDomains: string[], protocols: string[], options?: LogAnalyticsGetLogAnalyticsMetricsOptionalParams): Promise<LogAnalyticsGetLogAnalyticsMetricsResponse>;
    /**
     * Get log analytics ranking report for AFD profile
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group. which is unique within the resource group.
     * @param rankings Array of LogRanking
     * @param metrics Array of LogRankingMetric
     * @param maxRanking
     * @param dateTimeBegin
     * @param dateTimeEnd
     * @param options The options parameters.
     */
    getLogAnalyticsRankings(resourceGroupName: string, profileName: string, rankings: LogRanking[], metrics: LogRankingMetric[], maxRanking: number, dateTimeBegin: Date, dateTimeEnd: Date, options?: LogAnalyticsGetLogAnalyticsRankingsOptionalParams): Promise<LogAnalyticsGetLogAnalyticsRankingsResponse>;
    /**
     * Get all available location names for AFD log analytics report.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group. which is unique within the resource group.
     * @param options The options parameters.
     */
    getLogAnalyticsLocations(resourceGroupName: string, profileName: string, options?: LogAnalyticsGetLogAnalyticsLocationsOptionalParams): Promise<LogAnalyticsGetLogAnalyticsLocationsResponse>;
    /**
     * Get all endpoints and custom domains available for AFD log report
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group. which is unique within the resource group.
     * @param options The options parameters.
     */
    getLogAnalyticsResources(resourceGroupName: string, profileName: string, options?: LogAnalyticsGetLogAnalyticsResourcesOptionalParams): Promise<LogAnalyticsGetLogAnalyticsResourcesResponse>;
    /**
     * Get Waf related log analytics report for AFD profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group. which is unique within the resource group.
     * @param metrics Array of WafMetric
     * @param dateTimeBegin
     * @param dateTimeEnd
     * @param granularity
     * @param options The options parameters.
     */
    getWafLogAnalyticsMetrics(resourceGroupName: string, profileName: string, metrics: WafMetric[], dateTimeBegin: Date, dateTimeEnd: Date, granularity: WafGranularity, options?: LogAnalyticsGetWafLogAnalyticsMetricsOptionalParams): Promise<LogAnalyticsGetWafLogAnalyticsMetricsResponse>;
    /**
     * Get WAF log analytics charts for AFD profile
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group. which is unique within the resource group.
     * @param metrics Array of WafMetric
     * @param dateTimeBegin
     * @param dateTimeEnd
     * @param maxRanking
     * @param rankings Array of WafRankingType
     * @param options The options parameters.
     */
    getWafLogAnalyticsRankings(resourceGroupName: string, profileName: string, metrics: WafMetric[], dateTimeBegin: Date, dateTimeEnd: Date, maxRanking: number, rankings: WafRankingType[], options?: LogAnalyticsGetWafLogAnalyticsRankingsOptionalParams): Promise<LogAnalyticsGetWafLogAnalyticsRankingsResponse>;
}

/** Optional parameters. */
export declare interface LogAnalyticsGetLogAnalyticsLocationsOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getLogAnalyticsLocations operation. */
export declare type LogAnalyticsGetLogAnalyticsLocationsResponse = ContinentsResponse;

/** Optional parameters. */
export declare interface LogAnalyticsGetLogAnalyticsMetricsOptionalParams extends coreClient.OperationOptions {
    /** Array of LogMetricsGroupBy */
    groupBy?: LogMetricsGroupBy[];
    /** Array of Get9ItemsItem */
    continents?: string[];
    /** Array of Get10ItemsItem */
    countryOrRegions?: string[];
}

/** Contains response data for the getLogAnalyticsMetrics operation. */
export declare type LogAnalyticsGetLogAnalyticsMetricsResponse = MetricsResponse;

/** Optional parameters. */
export declare interface LogAnalyticsGetLogAnalyticsRankingsOptionalParams extends coreClient.OperationOptions {
    /** Array of String */
    customDomains?: string[];
}

/** Contains response data for the getLogAnalyticsRankings operation. */
export declare type LogAnalyticsGetLogAnalyticsRankingsResponse = RankingsResponse;

/** Optional parameters. */
export declare interface LogAnalyticsGetLogAnalyticsResourcesOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getLogAnalyticsResources operation. */
export declare type LogAnalyticsGetLogAnalyticsResourcesResponse = ResourcesResponse;

/** Optional parameters. */
export declare interface LogAnalyticsGetWafLogAnalyticsMetricsOptionalParams extends coreClient.OperationOptions {
    /** Array of WafAction */
    actions?: WafAction[];
    /** Array of WafRankingGroupBy */
    groupBy?: WafRankingGroupBy[];
    /** Array of WafRuleType */
    ruleTypes?: WafRuleType[];
}

/** Contains response data for the getWafLogAnalyticsMetrics operation. */
export declare type LogAnalyticsGetWafLogAnalyticsMetricsResponse = WafMetricsResponse;

/** Optional parameters. */
export declare interface LogAnalyticsGetWafLogAnalyticsRankingsOptionalParams extends coreClient.OperationOptions {
    /** Array of WafAction */
    actions?: WafAction[];
    /** Array of WafRuleType */
    ruleTypes?: WafRuleType[];
}

/** Contains response data for the getWafLogAnalyticsRankings operation. */
export declare type LogAnalyticsGetWafLogAnalyticsRankingsResponse = WafRankingsResponse;

/**
 * Defines values for LogMetric. \
 * {@link KnownLogMetric} can be used interchangeably with LogMetric,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **clientRequestCount** \
 * **clientRequestTraffic** \
 * **clientRequestBandwidth** \
 * **originRequestTraffic** \
 * **originRequestBandwidth** \
 * **totalLatency**
 */
export declare type LogMetric = string;

/**
 * Defines values for LogMetricsGranularity. \
 * {@link KnownLogMetricsGranularity} can be used interchangeably with LogMetricsGranularity,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **PT5M** \
 * **PT1H** \
 * **P1D**
 */
export declare type LogMetricsGranularity = string;

/**
 * Defines values for LogMetricsGroupBy. \
 * {@link KnownLogMetricsGroupBy} can be used interchangeably with LogMetricsGroupBy,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **httpStatusCode** \
 * **protocol** \
 * **cacheStatus** \
 * **countryOrRegion** \
 * **customDomain**
 */
export declare type LogMetricsGroupBy = string;

/**
 * Defines values for LogRanking. \
 * {@link KnownLogRanking} can be used interchangeably with LogRanking,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **url** \
 * **referrer** \
 * **browser** \
 * **userAgent** \
 * **countryOrRegion**
 */
export declare type LogRanking = string;

/**
 * Defines values for LogRankingMetric. \
 * {@link KnownLogRankingMetric} can be used interchangeably with LogRankingMetric,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **clientRequestCount** \
 * **clientRequestTraffic** \
 * **hitCount** \
 * **missCount** \
 * **userErrorCount** \
 * **errorCount**
 */
export declare type LogRankingMetric = string;

/** Log specification of operation. */
export declare interface LogSpecification {
    /** Name of log specification. */
    name?: string;
    /** Display name of log specification. */
    displayName?: string;
    /** Blob duration of specification. */
    blobDuration?: string;
    /** Pattern to filter based on name */
    logFilterPattern?: string;
}

/** Managed Certificate used for https */
export declare interface ManagedCertificate extends Certificate {
}

/** Managed Certificate used for https */
export declare interface ManagedCertificateParameters extends SecretParameters {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    type: "ManagedCertificate";
    /**
     * Subject name in the certificate.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly subject?: string;
    /**
     * Certificate expiration date.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly expirationDate?: string;
}

/** Describes a managed rule definition. */
export declare interface ManagedRuleDefinition {
    /**
     * Identifier for the managed rule.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly ruleId?: string;
    /**
     * Describes the functionality of the managed rule.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly description?: string;
}

/**
 * Defines values for ManagedRuleEnabledState. \
 * {@link KnownManagedRuleEnabledState} can be used interchangeably with ManagedRuleEnabledState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Enabled**
 */
export declare type ManagedRuleEnabledState = string;

/** Describes a managed rule group. */
export declare interface ManagedRuleGroupDefinition {
    /**
     * Name of the managed rule group.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly ruleGroupName?: string;
    /**
     * Description of the managed rule group.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly description?: string;
    /**
     * List of rules within the managed rule group.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly rules?: ManagedRuleDefinition[];
}

/** Defines a managed rule group override setting. */
export declare interface ManagedRuleGroupOverride {
    /** Describes the managed rule group within the rule set to override */
    ruleGroupName: string;
    /** List of rules that will be enabled. If none specified, all rules in the group will be disabled. */
    rules?: ManagedRuleOverride[];
}

/** Defines a managed rule group override setting. */
export declare interface ManagedRuleOverride {
    /** Identifier for the managed rule. */
    ruleId: string;
    /** Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified. */
    enabledState?: ManagedRuleEnabledState;
    /** Describes the override action to be applied when rule matches. */
    action?: ActionType;
}

/** Defines a managed rule set. */
export declare interface ManagedRuleSet {
    /** Defines the rule set type to use. */
    ruleSetType: string;
    /** Defines the version of the rule set to use. */
    ruleSetVersion: string;
    /** Verizon only : If the rule set supports anomaly detection mode, this describes the threshold for blocking requests. */
    anomalyScore?: number;
    /** Defines the rule overrides to apply to the rule set. */
    ruleGroupOverrides?: ManagedRuleGroupOverride[];
}

/** Describes a managed rule set definition. */
export declare interface ManagedRuleSetDefinition extends Resource {
    /** The pricing tier (defines a CDN provider, feature list and rate) of the CdnWebApplicationFirewallPolicy. */
    sku?: Sku;
    /**
     * Provisioning state of the managed rule set.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: string;
    /**
     * Type of the managed rule set.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly ruleSetType?: string;
    /**
     * Version of the managed rule set type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly ruleSetVersion?: string;
    /**
     * Rule groups of the managed rule set.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly ruleGroups?: ManagedRuleGroupDefinition[];
}

/** List of managed rule set definitions available for use in a policy. */
export declare interface ManagedRuleSetDefinitionList {
    /**
     * List of managed rule set definitions.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: ManagedRuleSetDefinition[];
    /** URL to retrieve next set of managed rule set definitions. */
    nextLink?: string;
}

/** Defines the list of managed rule sets for the policy. */
export declare interface ManagedRuleSetList {
    /** List of rule sets. */
    managedRuleSets?: ManagedRuleSet[];
}

/** Interface representing a ManagedRuleSets. */
export declare interface ManagedRuleSets {
    /**
     * Lists all available managed rule sets.
     * @param options The options parameters.
     */
    list(options?: ManagedRuleSetsListOptionalParams): PagedAsyncIterableIterator<ManagedRuleSetDefinition>;
}

/** Optional parameters. */
export declare interface ManagedRuleSetsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type ManagedRuleSetsListNextResponse = ManagedRuleSetDefinitionList;

/** Optional parameters. */
export declare interface ManagedRuleSetsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type ManagedRuleSetsListResponse = ManagedRuleSetDefinitionList;

/** Define match conditions */
export declare interface MatchCondition {
    /** Match variable to compare against. */
    matchVariable: WafMatchVariable;
    /** Selector can used to match a specific key for QueryString, Cookies, RequestHeader or PostArgs. */
    selector?: string;
    /** Describes operator to be matched */
    operator: Operator;
    /** Describes if the result of this condition should be negated. */
    negateCondition?: boolean;
    /** List of possible match values. */
    matchValue: string[];
    /** List of transforms. */
    transforms?: TransformType[];
}

/**
 * Defines values for MatchProcessingBehavior. \
 * {@link KnownMatchProcessingBehavior} can be used interchangeably with MatchProcessingBehavior,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Continue** \
 * **Stop**
 */
export declare type MatchProcessingBehavior = string;

/**
 * Defines values for MatchVariable. \
 * {@link KnownMatchVariable} can be used interchangeably with MatchVariable,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **RemoteAddress** \
 * **RequestMethod** \
 * **QueryString** \
 * **PostArgs** \
 * **RequestUri** \
 * **RequestHeader** \
 * **RequestBody** \
 * **RequestScheme** \
 * **UrlPath** \
 * **UrlFileExtension** \
 * **UrlFileName** \
 * **HttpVersion** \
 * **Cookies** \
 * **IsDevice** \
 * **SocketAddr** \
 * **ClientPort** \
 * **ServerPort** \
 * **HostName** \
 * **SslProtocol**
 */
export declare type MatchVariable = string;

/** Retention policy of a resource metric. */
export declare interface MetricAvailability {
    timeGrain?: string;
    blobDuration?: string;
}

/** Metric specification of operation. */
export declare interface MetricSpecification {
    /** Name of metric specification. */
    name?: string;
    /** Display name of metric specification. */
    displayName?: string;
    /** Display description of metric specification. */
    displayDescription?: string;
    /** The metric unit. Possible values include: 'Bytes', 'Count', 'Milliseconds'. */
    unit?: string;
    /** The metric aggregation type. Possible values include: 'Average', 'Count', 'Total'. */
    aggregationType?: string;
    /** Retention policies of a resource metric. */
    availabilities?: MetricAvailability[];
    /** The supported time grain types for the metrics. */
    supportedTimeGrainTypes?: string[];
    /** The dimensions of metric */
    dimensions?: DimensionProperties[];
    /** Property to specify whether to fill gap with zero. */
    fillGapWithZero?: boolean;
    /** Pattern to filter based on name */
    metricFilterPattern?: string;
    /** Property to specify metric is internal or not. */
    isInternal?: boolean;
}

/** Metrics Response */
export declare interface MetricsResponse {
    dateTimeBegin?: Date;
    dateTimeEnd?: Date;
    granularity?: MetricsResponseGranularity;
    series?: MetricsResponseSeriesItem[];
}

/**
 * Defines values for MetricsResponseGranularity. \
 * {@link KnownMetricsResponseGranularity} can be used interchangeably with MetricsResponseGranularity,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **PT5M** \
 * **PT1H** \
 * **P1D**
 */
export declare type MetricsResponseGranularity = string;

export declare interface MetricsResponseSeriesItem {
    metric?: string;
    unit?: MetricsResponseSeriesItemUnit;
    groups?: MetricsResponseSeriesPropertiesItemsItem[];
    data?: Components1Gs0LlpSchemasMetricsresponsePropertiesSeriesItemsPropertiesDataItems[];
}

/**
 * Defines values for MetricsResponseSeriesItemUnit. \
 * {@link KnownMetricsResponseSeriesItemUnit} can be used interchangeably with MetricsResponseSeriesItemUnit,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **count** \
 * **bytes** \
 * **bitsPerSecond** \
 * **milliSeconds**
 */
export declare type MetricsResponseSeriesItemUnit = string;

export declare interface MetricsResponseSeriesPropertiesItemsItem {
    name?: string;
    value?: string;
}

/** Defines values for MinimumTlsVersion. */
export declare type MinimumTlsVersion = "None" | "TLS10" | "TLS12";

/** CDN REST API operation */
export declare interface Operation {
    /**
     * Operation name: {provider}/{resource}/{operation}
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /** Indicates whether the operation is a data action */
    isDataAction?: boolean;
    /** The object that represents the operation. */
    display?: OperationDisplay;
    /**
     * The origin of operations.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly origin?: string;
    /** One property of operation, include metric specifications. */
    serviceSpecification?: ServiceSpecification;
}

/** The object that represents the operation. */
export declare interface OperationDisplay {
    /**
     * Service provider: Microsoft.Cdn
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provider?: string;
    /**
     * Resource on which the operation is performed: Profile, endpoint, etc.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resource?: string;
    /**
     * Operation type: Read, write, delete, etc.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly operation?: string;
    /**
     * Description of operation.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly description?: string;
}

/** Interface representing a Operations. */
export declare interface Operations {
    /**
     * Lists all of the available CDN REST API operations.
     * @param options The options parameters.
     */
    list(options?: OperationsListOptionalParams): PagedAsyncIterableIterator<Operation>;
}

/** Optional parameters. */
export declare interface OperationsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type OperationsListNextResponse = OperationsListResult;

/** Optional parameters. */
export declare interface OperationsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type OperationsListResponse = OperationsListResult;

/** Result of the request to list CDN operations. It contains a list of operations and a URL link to get the next set of results. */
export declare interface OperationsListResult {
    /** List of CDN operations supported by the CDN resource provider. */
    value?: Operation[];
    /** URL to get the next set of operation list results if there are any. */
    nextLink?: string;
}

/**
 * Defines values for Operator. \
 * {@link KnownOperator} can be used interchangeably with Operator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Any** \
 * **IPMatch** \
 * **GeoMatch** \
 * **Equal** \
 * **Contains** \
 * **LessThan** \
 * **GreaterThan** \
 * **LessThanOrEqual** \
 * **GreaterThanOrEqual** \
 * **BeginsWith** \
 * **EndsWith** \
 * **RegEx**
 */
export declare type Operator = string;

/**
 * Defines values for OptimizationType. \
 * {@link KnownOptimizationType} can be used interchangeably with OptimizationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **GeneralWebDelivery** \
 * **GeneralMediaStreaming** \
 * **VideoOnDemandMediaStreaming** \
 * **LargeFileDownload** \
 * **DynamicSiteAcceleration**
 */
export declare type OptimizationType = string;

/** CDN origin is the source of the content being delivered via CDN. When the edge nodes represented by an endpoint do not have the requested content cached, they attempt to fetch it from one or more of the configured origins. */
export declare interface Origin extends ProxyResource {
    /** The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint. */
    hostName?: string;
    /** The value of the HTTP port. Must be between 1 and 65535. */
    httpPort?: number;
    /** The value of the HTTPS port. Must be between 1 and 65535. */
    httpsPort?: number;
    /** The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint */
    originHostHeader?: string;
    /** Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5 */
    priority?: number;
    /** Weight of the origin in given origin group for load balancing. Must be between 1 and 1000 */
    weight?: number;
    /** Origin is enabled for load balancing or not */
    enabled?: boolean;
    /** The Alias of the Private Link resource. Populating this optional field indicates that this origin is 'Private' */
    privateLinkAlias?: string;
    /** The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private' */
    privateLinkResourceId?: string;
    /** The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated */
    privateLinkLocation?: string;
    /** A custom message to be included in the approval request to connect to the Private Link. */
    privateLinkApprovalMessage?: string;
    /**
     * Resource status of the origin.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resourceState?: OriginResourceState;
    /**
     * Provisioning status of the origin.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: OriginProvisioningState;
    /**
     * The approval status for the connection to the Private Link
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly privateEndpointStatus?: PrivateEndpointStatus;
}

/** Origin group comprising of origins is used for load balancing to origins when the content cannot be served from CDN. */
export declare interface OriginGroup extends ProxyResource {
    /** Health probe settings to the origin that is used to determine the health of the origin. */
    healthProbeSettings?: HealthProbeParameters;
    /** The source of the content being delivered via CDN within given origin group. */
    origins?: ResourceReference[];
    /** Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported. */
    trafficRestorationTimeToHealedOrNewEndpointsInMinutes?: number;
    /** The JSON object that contains the properties to determine origin health using real requests/responses. This property is currently not supported. */
    responseBasedOriginErrorDetectionSettings?: ResponseBasedOriginErrorDetectionParameters;
    /**
     * Resource status of the origin group.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resourceState?: OriginGroupResourceState;
    /**
     * Provisioning status of the origin group.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: OriginGroupProvisioningState;
}

/** Result of the request to list origin groups. It contains a list of origin groups objects and a URL link to get the next set of results. */
export declare interface OriginGroupListResult {
    /**
     * List of CDN origin groups within an endpoint
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: OriginGroup[];
    /** URL to get the next set of origin objects if there are any. */
    nextLink?: string;
}

/** Defines the parameters for the origin group override configuration. */
export declare interface OriginGroupOverride {
    /** defines the OriginGroup that would override the DefaultOriginGroup on route. */
    originGroup?: ResourceReference;
    /** Protocol this rule will use when forwarding traffic to backends. */
    forwardingProtocol?: ForwardingProtocol;
}

/** Defines the origin group override action for the delivery rule. */
export declare interface OriginGroupOverrideAction extends DeliveryRuleActionAutoGenerated {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    name: "OriginGroupOverride";
    /** Defines the parameters for the action. */
    parameters: OriginGroupOverrideActionParameters;
}

/** Defines the parameters for the origin group override action. */
export declare interface OriginGroupOverrideActionParameters {
    typeName: "DeliveryRuleOriginGroupOverrideActionParameters";
    /** defines the OriginGroup that would override the DefaultOriginGroup. */
    originGroup: ResourceReference;
}

/** The JSON object that contains the properties of the origin group. */
export declare interface OriginGroupProperties extends OriginGroupUpdatePropertiesParameters {
    /**
     * Resource status of the origin group.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resourceState?: OriginGroupResourceState;
    /**
     * Provisioning status of the origin group.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: OriginGroupProvisioningState;
}

/**
 * Defines values for OriginGroupProvisioningState. \
 * {@link KnownOriginGroupProvisioningState} can be used interchangeably with OriginGroupProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Failed** \
 * **Updating** \
 * **Deleting** \
 * **Creating**
 */
export declare type OriginGroupProvisioningState = string;

/**
 * Defines values for OriginGroupResourceState. \
 * {@link KnownOriginGroupResourceState} can be used interchangeably with OriginGroupResourceState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Creating** \
 * **Active** \
 * **Deleting**
 */
export declare type OriginGroupResourceState = string;

/** Interface representing a OriginGroups. */
export declare interface OriginGroups {
    /**
     * Lists all of the existing origin groups within an endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param options The options parameters.
     */
    listByEndpoint(resourceGroupName: string, profileName: string, endpointName: string, options?: OriginGroupsListByEndpointOptionalParams): PagedAsyncIterableIterator<OriginGroup>;
    /**
     * Gets an existing origin group within an endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param originGroupName Name of the origin group which is unique within the endpoint.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, profileName: string, endpointName: string, originGroupName: string, options?: OriginGroupsGetOptionalParams): Promise<OriginGroupsGetResponse>;
    /**
     * Creates a new origin group within the specified endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param originGroupName Name of the origin group which is unique within the endpoint.
     * @param originGroup Origin group properties
     * @param options The options parameters.
     */
    beginCreate(resourceGroupName: string, profileName: string, endpointName: string, originGroupName: string, originGroup: OriginGroup, options?: OriginGroupsCreateOptionalParams): Promise<PollerLike<PollOperationState<OriginGroupsCreateResponse>, OriginGroupsCreateResponse>>;
    /**
     * Creates a new origin group within the specified endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param originGroupName Name of the origin group which is unique within the endpoint.
     * @param originGroup Origin group properties
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceGroupName: string, profileName: string, endpointName: string, originGroupName: string, originGroup: OriginGroup, options?: OriginGroupsCreateOptionalParams): Promise<OriginGroupsCreateResponse>;
    /**
     * Updates an existing origin group within an endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param originGroupName Name of the origin group which is unique within the endpoint.
     * @param originGroupUpdateProperties Origin group properties
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, profileName: string, endpointName: string, originGroupName: string, originGroupUpdateProperties: OriginGroupUpdateParameters, options?: OriginGroupsUpdateOptionalParams): Promise<PollerLike<PollOperationState<OriginGroupsUpdateResponse>, OriginGroupsUpdateResponse>>;
    /**
     * Updates an existing origin group within an endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param originGroupName Name of the origin group which is unique within the endpoint.
     * @param originGroupUpdateProperties Origin group properties
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, profileName: string, endpointName: string, originGroupName: string, originGroupUpdateProperties: OriginGroupUpdateParameters, options?: OriginGroupsUpdateOptionalParams): Promise<OriginGroupsUpdateResponse>;
    /**
     * Deletes an existing origin group within an endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param originGroupName Name of the origin group which is unique within the endpoint.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, profileName: string, endpointName: string, originGroupName: string, options?: OriginGroupsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes an existing origin group within an endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param originGroupName Name of the origin group which is unique within the endpoint.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, profileName: string, endpointName: string, originGroupName: string, options?: OriginGroupsDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface OriginGroupsCreateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the create operation. */
export declare type OriginGroupsCreateResponse = OriginGroup;

/** Optional parameters. */
export declare interface OriginGroupsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface OriginGroupsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type OriginGroupsGetResponse = OriginGroup;

/** Optional parameters. */
export declare interface OriginGroupsListByEndpointNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByEndpointNext operation. */
export declare type OriginGroupsListByEndpointNextResponse = OriginGroupListResult;

/** Optional parameters. */
export declare interface OriginGroupsListByEndpointOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByEndpoint operation. */
export declare type OriginGroupsListByEndpointResponse = OriginGroupListResult;

/** Optional parameters. */
export declare interface OriginGroupsUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the update operation. */
export declare type OriginGroupsUpdateResponse = OriginGroup;

/** Origin group properties needed for origin group creation or update. */
export declare interface OriginGroupUpdateParameters {
    /** Health probe settings to the origin that is used to determine the health of the origin. */
    healthProbeSettings?: HealthProbeParameters;
    /** The source of the content being delivered via CDN within given origin group. */
    origins?: ResourceReference[];
    /** Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported. */
    trafficRestorationTimeToHealedOrNewEndpointsInMinutes?: number;
    /** The JSON object that contains the properties to determine origin health using real requests/responses. This property is currently not supported. */
    responseBasedOriginErrorDetectionSettings?: ResponseBasedOriginErrorDetectionParameters;
}

/** The JSON object that contains the properties of the origin group. */
export declare interface OriginGroupUpdatePropertiesParameters {
    /** Health probe settings to the origin that is used to determine the health of the origin. */
    healthProbeSettings?: HealthProbeParameters;
    /** The source of the content being delivered via CDN within given origin group. */
    origins?: ResourceReference[];
    /** Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported. */
    trafficRestorationTimeToHealedOrNewEndpointsInMinutes?: number;
    /** The JSON object that contains the properties to determine origin health using real requests/responses. This property is currently not supported. */
    responseBasedOriginErrorDetectionSettings?: ResponseBasedOriginErrorDetectionParameters;
}

/** Result of the request to list origins. It contains a list of origin objects and a URL link to get the next set of results. */
export declare interface OriginListResult {
    /**
     * List of CDN origins within an endpoint
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: Origin[];
    /** URL to get the next set of origin objects if there are any. */
    nextLink?: string;
}

/** The JSON object that contains the properties of the origin. */
export declare interface OriginProperties extends OriginUpdatePropertiesParameters {
    /**
     * Resource status of the origin.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resourceState?: OriginResourceState;
    /**
     * Provisioning status of the origin.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: OriginProvisioningState;
    /**
     * The approval status for the connection to the Private Link
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly privateEndpointStatus?: PrivateEndpointStatus;
}

/**
 * Defines values for OriginProvisioningState. \
 * {@link KnownOriginProvisioningState} can be used interchangeably with OriginProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Failed** \
 * **Updating** \
 * **Deleting** \
 * **Creating**
 */
export declare type OriginProvisioningState = string;

/**
 * Defines values for OriginResourceState. \
 * {@link KnownOriginResourceState} can be used interchangeably with OriginResourceState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Creating** \
 * **Active** \
 * **Deleting**
 */
export declare type OriginResourceState = string;

/** Interface representing a Origins. */
export declare interface Origins {
    /**
     * Lists all of the existing origins within an endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param options The options parameters.
     */
    listByEndpoint(resourceGroupName: string, profileName: string, endpointName: string, options?: OriginsListByEndpointOptionalParams): PagedAsyncIterableIterator<Origin>;
    /**
     * Gets an existing origin within an endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param originName Name of the origin which is unique within the endpoint.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, profileName: string, endpointName: string, originName: string, options?: OriginsGetOptionalParams): Promise<OriginsGetResponse>;
    /**
     * Creates a new origin within the specified endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param originName Name of the origin that is unique within the endpoint.
     * @param origin Origin properties
     * @param options The options parameters.
     */
    beginCreate(resourceGroupName: string, profileName: string, endpointName: string, originName: string, origin: Origin, options?: OriginsCreateOptionalParams): Promise<PollerLike<PollOperationState<OriginsCreateResponse>, OriginsCreateResponse>>;
    /**
     * Creates a new origin within the specified endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param originName Name of the origin that is unique within the endpoint.
     * @param origin Origin properties
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceGroupName: string, profileName: string, endpointName: string, originName: string, origin: Origin, options?: OriginsCreateOptionalParams): Promise<OriginsCreateResponse>;
    /**
     * Updates an existing origin within an endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param originName Name of the origin which is unique within the endpoint.
     * @param originUpdateProperties Origin properties
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, profileName: string, endpointName: string, originName: string, originUpdateProperties: OriginUpdateParameters, options?: OriginsUpdateOptionalParams): Promise<PollerLike<PollOperationState<OriginsUpdateResponse>, OriginsUpdateResponse>>;
    /**
     * Updates an existing origin within an endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param originName Name of the origin which is unique within the endpoint.
     * @param originUpdateProperties Origin properties
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, profileName: string, endpointName: string, originName: string, originUpdateProperties: OriginUpdateParameters, options?: OriginsUpdateOptionalParams): Promise<OriginsUpdateResponse>;
    /**
     * Deletes an existing origin within an endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param originName Name of the origin which is unique within the endpoint.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, profileName: string, endpointName: string, originName: string, options?: OriginsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes an existing origin within an endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param originName Name of the origin which is unique within the endpoint.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, profileName: string, endpointName: string, originName: string, options?: OriginsDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface OriginsCreateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the create operation. */
export declare type OriginsCreateResponse = Origin;

/** Optional parameters. */
export declare interface OriginsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface OriginsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type OriginsGetResponse = Origin;

/** Optional parameters. */
export declare interface OriginsListByEndpointNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByEndpointNext operation. */
export declare type OriginsListByEndpointNextResponse = OriginListResult;

/** Optional parameters. */
export declare interface OriginsListByEndpointOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByEndpoint operation. */
export declare type OriginsListByEndpointResponse = OriginListResult;

/** Optional parameters. */
export declare interface OriginsUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the update operation. */
export declare type OriginsUpdateResponse = Origin;

/** Origin properties needed for origin update. */
export declare interface OriginUpdateParameters {
    /** The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint. */
    hostName?: string;
    /** The value of the HTTP port. Must be between 1 and 65535. */
    httpPort?: number;
    /** The value of the HTTPS port. Must be between 1 and 65535. */
    httpsPort?: number;
    /** The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint */
    originHostHeader?: string;
    /** Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5 */
    priority?: number;
    /** Weight of the origin in given origin group for load balancing. Must be between 1 and 1000 */
    weight?: number;
    /** Origin is enabled for load balancing or not */
    enabled?: boolean;
    /** The Alias of the Private Link resource. Populating this optional field indicates that this origin is 'Private' */
    privateLinkAlias?: string;
    /** The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private' */
    privateLinkResourceId?: string;
    /** The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated */
    privateLinkLocation?: string;
    /** A custom message to be included in the approval request to connect to the Private Link. */
    privateLinkApprovalMessage?: string;
}

/** The JSON object that contains the properties of the origin. */
export declare interface OriginUpdatePropertiesParameters {
    /** The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint. */
    hostName?: string;
    /** The value of the HTTP port. Must be between 1 and 65535. */
    httpPort?: number;
    /** The value of the HTTPS port. Must be between 1 and 65535. */
    httpsPort?: number;
    /** The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint */
    originHostHeader?: string;
    /** Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5 */
    priority?: number;
    /** Weight of the origin in given origin group for load balancing. Must be between 1 and 1000 */
    weight?: number;
    /** Origin is enabled for load balancing or not */
    enabled?: boolean;
    /** The Alias of the Private Link resource. Populating this optional field indicates that this origin is 'Private' */
    privateLinkAlias?: string;
    /** The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private' */
    privateLinkResourceId?: string;
    /** The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated */
    privateLinkLocation?: string;
    /** A custom message to be included in the approval request to connect to the Private Link. */
    privateLinkApprovalMessage?: string;
}

/**
 * Defines values for ParamIndicator. \
 * {@link KnownParamIndicator} can be used interchangeably with ParamIndicator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Expires** \
 * **KeyId** \
 * **Signature**
 */
export declare type ParamIndicator = string;

/** Interface representing a Policies. */
export declare interface Policies {
    /**
     * Lists all of the protection policies within a resource group.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, options?: PoliciesListOptionalParams): PagedAsyncIterableIterator<CdnWebApplicationFirewallPolicy>;
    /**
     * Retrieve protection policy with specified name within a resource group.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param policyName The name of the CdnWebApplicationFirewallPolicy.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, policyName: string, options?: PoliciesGetOptionalParams): Promise<PoliciesGetResponse>;
    /**
     * Create or update policy with specified rule set name within a resource group.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param policyName The name of the CdnWebApplicationFirewallPolicy.
     * @param cdnWebApplicationFirewallPolicy Policy to be created.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, policyName: string, cdnWebApplicationFirewallPolicy: CdnWebApplicationFirewallPolicy, options?: PoliciesCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<PoliciesCreateOrUpdateResponse>, PoliciesCreateOrUpdateResponse>>;
    /**
     * Create or update policy with specified rule set name within a resource group.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param policyName The name of the CdnWebApplicationFirewallPolicy.
     * @param cdnWebApplicationFirewallPolicy Policy to be created.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, policyName: string, cdnWebApplicationFirewallPolicy: CdnWebApplicationFirewallPolicy, options?: PoliciesCreateOrUpdateOptionalParams): Promise<PoliciesCreateOrUpdateResponse>;
    /**
     * Update an existing CdnWebApplicationFirewallPolicy with the specified policy name under the
     * specified subscription and resource group
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param policyName The name of the CdnWebApplicationFirewallPolicy.
     * @param cdnWebApplicationFirewallPolicyPatchParameters CdnWebApplicationFirewallPolicy parameters to
     *                                                       be patched.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, policyName: string, cdnWebApplicationFirewallPolicyPatchParameters: CdnWebApplicationFirewallPolicyPatchParameters, options?: PoliciesUpdateOptionalParams): Promise<PollerLike<PollOperationState<PoliciesUpdateResponse>, PoliciesUpdateResponse>>;
    /**
     * Update an existing CdnWebApplicationFirewallPolicy with the specified policy name under the
     * specified subscription and resource group
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param policyName The name of the CdnWebApplicationFirewallPolicy.
     * @param cdnWebApplicationFirewallPolicyPatchParameters CdnWebApplicationFirewallPolicy parameters to
     *                                                       be patched.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, policyName: string, cdnWebApplicationFirewallPolicyPatchParameters: CdnWebApplicationFirewallPolicyPatchParameters, options?: PoliciesUpdateOptionalParams): Promise<PoliciesUpdateResponse>;
    /**
     * Deletes Policy
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param policyName The name of the CdnWebApplicationFirewallPolicy.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, policyName: string, options?: PoliciesDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface PoliciesCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type PoliciesCreateOrUpdateResponse = CdnWebApplicationFirewallPolicy;

/** Optional parameters. */
export declare interface PoliciesDeleteOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface PoliciesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type PoliciesGetResponse = CdnWebApplicationFirewallPolicy;

/** Optional parameters. */
export declare interface PoliciesListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type PoliciesListNextResponse = CdnWebApplicationFirewallPolicyList;

/** Optional parameters. */
export declare interface PoliciesListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type PoliciesListResponse = CdnWebApplicationFirewallPolicyList;

/** Optional parameters. */
export declare interface PoliciesUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the update operation. */
export declare type PoliciesUpdateResponse = CdnWebApplicationFirewallPolicy;

/**
 * Defines values for PolicyEnabledState. \
 * {@link KnownPolicyEnabledState} can be used interchangeably with PolicyEnabledState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Enabled**
 */
export declare type PolicyEnabledState = string;

/**
 * Defines values for PolicyMode. \
 * {@link KnownPolicyMode} can be used interchangeably with PolicyMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Prevention** \
 * **Detection**
 */
export declare type PolicyMode = string;

/**
 * Defines values for PolicyResourceState. \
 * {@link KnownPolicyResourceState} can be used interchangeably with PolicyResourceState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Creating** \
 * **Enabling** \
 * **Enabled** \
 * **Disabling** \
 * **Disabled** \
 * **Deleting**
 */
export declare type PolicyResourceState = string;

/** Defines contents of a web application firewall global configuration */
export declare interface PolicySettings {
    /** describes if the policy is in enabled state or disabled state */
    enabledState?: PolicyEnabledState;
    /** Describes if it is in detection mode or prevention mode at policy level. */
    mode?: PolicyMode;
    /** If action type is redirect, this field represents the default redirect URL for the client. */
    defaultRedirectUrl?: string;
    /** If the action type is block, this field defines the default customer overridable http response status code. */
    defaultCustomBlockResponseStatusCode?: PolicySettingsDefaultCustomBlockResponseStatusCode;
    /** If the action type is block, customer can override the response body. The body must be specified in base64 encoding. */
    defaultCustomBlockResponseBody?: string;
}

/**
 * Defines values for PolicySettingsDefaultCustomBlockResponseStatusCode. \
 * {@link KnownPolicySettingsDefaultCustomBlockResponseStatusCode} can be used interchangeably with PolicySettingsDefaultCustomBlockResponseStatusCode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **200** \
 * **403** \
 * **405** \
 * **406** \
 * **429**
 */
export declare type PolicySettingsDefaultCustomBlockResponseStatusCode = number;

/** Defines the parameters for PostArgs match conditions */
export declare interface PostArgsMatchConditionParameters {
    typeName: "DeliveryRulePostArgsConditionParameters";
    /** Name of PostArg to be matched */
    selector?: string;
    /** Describes operator to be matched */
    operator: PostArgsOperator;
    /** Describes if this is negate condition or not */
    negateCondition?: boolean;
    /** The match value for the condition of the delivery rule */
    matchValues?: string[];
    /** List of transforms */
    transforms?: Transform[];
}

/**
 * Defines values for PostArgsOperator. \
 * {@link KnownPostArgsOperator} can be used interchangeably with PostArgsOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Any** \
 * **Equal** \
 * **Contains** \
 * **BeginsWith** \
 * **EndsWith** \
 * **LessThan** \
 * **LessThanOrEqual** \
 * **GreaterThan** \
 * **GreaterThanOrEqual** \
 * **RegEx**
 */
export declare type PostArgsOperator = string;

/**
 * Defines values for PrivateEndpointStatus. \
 * {@link KnownPrivateEndpointStatus} can be used interchangeably with PrivateEndpointStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending** \
 * **Approved** \
 * **Rejected** \
 * **Disconnected** \
 * **Timeout**
 */
export declare type PrivateEndpointStatus = string;

/** Defines values for ProbeProtocol. */
export declare type ProbeProtocol = "NotSet" | "Http" | "Https";

/** A profile is a logical grouping of endpoints that share the same settings. */
export declare interface Profile extends TrackedResource {
    /** The pricing tier (defines Azure Front Door Standard or Premium or a CDN provider, feature list and rate) of the profile. */
    sku: Sku;
    /**
     * Kind of the profile. Used by portal to differentiate traditional CDN profile and new AFD profile.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly kind?: string;
    /**
     * Resource status of the profile.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resourceState?: ProfileResourceState;
    /**
     * Provisioning status of the profile.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProfileProvisioningState;
    /**
     * The Id of the frontdoor.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly frontDoorId?: string;
    /** Send and receive timeout on forwarding request to the origin. When timeout is reached, the request fails and returns. */
    originResponseTimeoutSeconds?: number;
}

/** Result of the request to list profiles. It contains a list of profile objects and a URL link to get the next set of results. */
export declare interface ProfileListResult {
    /**
     * List of CDN profiles within a resource group.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: Profile[];
    /** URL to get the next set of profile objects if there are any. */
    nextLink?: string;
}

/**
 * Defines values for ProfileProvisioningState. \
 * {@link KnownProfileProvisioningState} can be used interchangeably with ProfileProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Failed** \
 * **Updating** \
 * **Deleting** \
 * **Creating**
 */
export declare type ProfileProvisioningState = string;

/**
 * Defines values for ProfileResourceState. \
 * {@link KnownProfileResourceState} can be used interchangeably with ProfileResourceState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Creating** \
 * **Active** \
 * **Deleting** \
 * **Disabled**
 */
export declare type ProfileResourceState = string;

/** Interface representing a Profiles. */
export declare interface Profiles {
    /**
     * Lists all of the Azure Front Door Standard, Azure Front Door Premium, and CDN profiles within an
     * Azure subscription.
     * @param options The options parameters.
     */
    list(options?: ProfilesListOptionalParams): PagedAsyncIterableIterator<Profile>;
    /**
     * Lists all of the Azure Front Door Standard, Azure Front Door Premium, and CDN profiles within a
     * resource group.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: ProfilesListByResourceGroupOptionalParams): PagedAsyncIterableIterator<Profile>;
    /**
     * Checks the quota and actual usage of endpoints under the given Azure Front Door Standard or Azure
     * Front Door Premium or CDN profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile
     *                    which is unique within the resource group.
     * @param options The options parameters.
     */
    listResourceUsage(resourceGroupName: string, profileName: string, options?: ProfilesListResourceUsageOptionalParams): PagedAsyncIterableIterator<ResourceUsage>;
    /**
     * Gets an Azure Front Door Standard or Azure Front Door Premium or CDN profile with the specified
     * profile name under the specified subscription and resource group.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile
     *                    which is unique within the resource group.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, profileName: string, options?: ProfilesGetOptionalParams): Promise<ProfilesGetResponse>;
    /**
     * Creates a new Azure Front Door Standard or Azure Front Door Premium or CDN profile with a profile
     * name under the specified subscription and resource group.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile
     *                    which is unique within the resource group.
     * @param profile Profile properties needed to create a new profile.
     * @param options The options parameters.
     */
    beginCreate(resourceGroupName: string, profileName: string, profile: Profile, options?: ProfilesCreateOptionalParams): Promise<PollerLike<PollOperationState<ProfilesCreateResponse>, ProfilesCreateResponse>>;
    /**
     * Creates a new Azure Front Door Standard or Azure Front Door Premium or CDN profile with a profile
     * name under the specified subscription and resource group.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile
     *                    which is unique within the resource group.
     * @param profile Profile properties needed to create a new profile.
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceGroupName: string, profileName: string, profile: Profile, options?: ProfilesCreateOptionalParams): Promise<ProfilesCreateResponse>;
    /**
     * Updates an existing Azure Front Door Standard or Azure Front Door Premium or CDN profile with the
     * specified profile name under the specified subscription and resource group.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile
     *                    which is unique within the resource group.
     * @param profileUpdateParameters Profile properties needed to update an existing profile.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, profileName: string, profileUpdateParameters: ProfileUpdateParameters, options?: ProfilesUpdateOptionalParams): Promise<PollerLike<PollOperationState<ProfilesUpdateResponse>, ProfilesUpdateResponse>>;
    /**
     * Updates an existing Azure Front Door Standard or Azure Front Door Premium or CDN profile with the
     * specified profile name under the specified subscription and resource group.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile
     *                    which is unique within the resource group.
     * @param profileUpdateParameters Profile properties needed to update an existing profile.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, profileName: string, profileUpdateParameters: ProfileUpdateParameters, options?: ProfilesUpdateOptionalParams): Promise<ProfilesUpdateResponse>;
    /**
     * Deletes an existing  Azure Front Door Standard or Azure Front Door Premium or CDN profile with the
     * specified parameters. Deleting a profile will result in the deletion of all of the sub-resources
     * including endpoints, origins and custom domains.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile
     *                    which is unique within the resource group.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, profileName: string, options?: ProfilesDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes an existing  Azure Front Door Standard or Azure Front Door Premium or CDN profile with the
     * specified parameters. Deleting a profile will result in the deletion of all of the sub-resources
     * including endpoints, origins and custom domains.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile
     *                    which is unique within the resource group.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, profileName: string, options?: ProfilesDeleteOptionalParams): Promise<void>;
    /**
     * Generates a dynamic SSO URI used to sign in to the CDN supplemental portal. Supplemental portal is
     * used to configure advanced feature capabilities that are not yet available in the Azure portal, such
     * as core reports in a standard profile; rules engine, advanced HTTP reports, and real-time stats and
     * alerts in a premium profile. The SSO URI changes approximately every 10 minutes.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the CDN profile which is unique within the resource group.
     * @param options The options parameters.
     */
    generateSsoUri(resourceGroupName: string, profileName: string, options?: ProfilesGenerateSsoUriOptionalParams): Promise<ProfilesGenerateSsoUriResponse>;
    /**
     * Gets the supported optimization types for the current profile. A user can create an endpoint with an
     * optimization type from the listed values.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile
     *                    which is unique within the resource group.
     * @param options The options parameters.
     */
    listSupportedOptimizationTypes(resourceGroupName: string, profileName: string, options?: ProfilesListSupportedOptimizationTypesOptionalParams): Promise<ProfilesListSupportedOptimizationTypesResponse>;
}

/** Optional parameters. */
export declare interface ProfilesCreateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the create operation. */
export declare type ProfilesCreateResponse = Profile;

/** Optional parameters. */
export declare interface ProfilesDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface ProfilesGenerateSsoUriOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the generateSsoUri operation. */
export declare type ProfilesGenerateSsoUriResponse = SsoUri;

/** Optional parameters. */
export declare interface ProfilesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type ProfilesGetResponse = Profile;

/** Optional parameters. */
export declare interface ProfilesListByResourceGroupNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroupNext operation. */
export declare type ProfilesListByResourceGroupNextResponse = ProfileListResult;

/** Optional parameters. */
export declare interface ProfilesListByResourceGroupOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroup operation. */
export declare type ProfilesListByResourceGroupResponse = ProfileListResult;

/** Optional parameters. */
export declare interface ProfilesListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type ProfilesListNextResponse = ProfileListResult;

/** Optional parameters. */
export declare interface ProfilesListOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface ProfilesListResourceUsageNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listResourceUsageNext operation. */
export declare type ProfilesListResourceUsageNextResponse = ResourceUsageListResult;

/** Optional parameters. */
export declare interface ProfilesListResourceUsageOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listResourceUsage operation. */
export declare type ProfilesListResourceUsageResponse = ResourceUsageListResult;

/** Contains response data for the list operation. */
export declare type ProfilesListResponse = ProfileListResult;

/** Optional parameters. */
export declare interface ProfilesListSupportedOptimizationTypesOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listSupportedOptimizationTypes operation. */
export declare type ProfilesListSupportedOptimizationTypesResponse = SupportedOptimizationTypesListResult;

/** Optional parameters. */
export declare interface ProfilesUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the update operation. */
export declare type ProfilesUpdateResponse = Profile;

/** Properties required to update a profile. */
export declare interface ProfileUpdateParameters {
    /** Profile tags */
    tags?: {
        [propertyName: string]: string;
    };
    /** Send and receive timeout on forwarding request to the origin. When timeout is reached, the request fails and returns. */
    originResponseTimeoutSeconds?: number;
}

/**
 * Defines values for ProtocolType. \
 * {@link KnownProtocolType} can be used interchangeably with ProtocolType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ServerNameIndication** \
 * **IPBased**
 */
export declare type ProtocolType = string;

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Creating** \
 * **Succeeded** \
 * **Failed**
 */
export declare type ProvisioningState = string;

/** The resource model definition for a ARM proxy resource. It will have everything other than required location and tags */
export declare interface ProxyResource extends Resource {
}

/** Parameters required for content purge. */
export declare interface PurgeParameters {
    /** The path to the content to be purged. Can describe a file path or a wild card directory. */
    contentPaths: string[];
}

/**
 * Defines values for QueryStringBehavior. \
 * {@link KnownQueryStringBehavior} can be used interchangeably with QueryStringBehavior,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Include** \
 * **IncludeAll** \
 * **Exclude** \
 * **ExcludeAll**
 */
export declare type QueryStringBehavior = string;

/** Defines values for QueryStringCachingBehavior. */
export declare type QueryStringCachingBehavior = "IgnoreQueryString" | "BypassCaching" | "UseQueryString" | "NotSet";

/** Defines the parameters for QueryString match conditions */
export declare interface QueryStringMatchConditionParameters {
    typeName: "DeliveryRuleQueryStringConditionParameters";
    /** Describes operator to be matched */
    operator: QueryStringOperator;
    /** Describes if this is negate condition or not */
    negateCondition?: boolean;
    /** The match value for the condition of the delivery rule */
    matchValues?: string[];
    /** List of transforms */
    transforms?: Transform[];
}

/**
 * Defines values for QueryStringOperator. \
 * {@link KnownQueryStringOperator} can be used interchangeably with QueryStringOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Any** \
 * **Equal** \
 * **Contains** \
 * **BeginsWith** \
 * **EndsWith** \
 * **LessThan** \
 * **LessThanOrEqual** \
 * **GreaterThan** \
 * **GreaterThanOrEqual** \
 * **RegEx**
 */
export declare type QueryStringOperator = string;

/** Rankings Response */
export declare interface RankingsResponse {
    dateTimeBegin?: Date;
    dateTimeEnd?: Date;
    tables?: RankingsResponseTablesItem[];
}

export declare interface RankingsResponseTablesItem {
    ranking?: string;
    data?: RankingsResponseTablesPropertiesItemsItem[];
}

export declare interface RankingsResponseTablesPropertiesItemsItem {
    name?: string;
    metrics?: RankingsResponseTablesPropertiesItemsMetricsItem[];
}

export declare interface RankingsResponseTablesPropertiesItemsMetricsItem {
    metric?: string;
    value?: number;
    percentage?: number;
}

/** Defines a rate limiting rule that can be included in a waf policy */
export declare interface RateLimitRule extends CustomRule {
    /** Defines rate limit threshold. */
    rateLimitThreshold: number;
    /** Defines rate limit duration. Default is 1 minute. */
    rateLimitDurationInMinutes: number;
}

/** Defines contents of rate limit rules */
export declare interface RateLimitRuleList {
    /** List of rules */
    rules?: RateLimitRule[];
}

/**
 * Defines values for RedirectType. \
 * {@link KnownRedirectType} can be used interchangeably with RedirectType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Moved** \
 * **Found** \
 * **TemporaryRedirect** \
 * **PermanentRedirect**
 */
export declare type RedirectType = string;

/** Defines the parameters for RemoteAddress match conditions */
export declare interface RemoteAddressMatchConditionParameters {
    typeName: "DeliveryRuleRemoteAddressConditionParameters";
    /** Describes operator to be matched */
    operator: RemoteAddressOperator;
    /** Describes if this is negate condition or not */
    negateCondition?: boolean;
    /** Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match. */
    matchValues?: string[];
    /** List of transforms */
    transforms?: Transform[];
}

/**
 * Defines values for RemoteAddressOperator. \
 * {@link KnownRemoteAddressOperator} can be used interchangeably with RemoteAddressOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Any** \
 * **IPMatch** \
 * **GeoMatch**
 */
export declare type RemoteAddressOperator = string;

/** Defines the parameters for RequestBody match conditions */
export declare interface RequestBodyMatchConditionParameters {
    typeName: "DeliveryRuleRequestBodyConditionParameters";
    /** Describes operator to be matched */
    operator: RequestBodyOperator;
    /** Describes if this is negate condition or not */
    negateCondition?: boolean;
    /** The match value for the condition of the delivery rule */
    matchValues?: string[];
    /** List of transforms */
    transforms?: Transform[];
}

/**
 * Defines values for RequestBodyOperator. \
 * {@link KnownRequestBodyOperator} can be used interchangeably with RequestBodyOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Any** \
 * **Equal** \
 * **Contains** \
 * **BeginsWith** \
 * **EndsWith** \
 * **LessThan** \
 * **LessThanOrEqual** \
 * **GreaterThan** \
 * **GreaterThanOrEqual** \
 * **RegEx**
 */
export declare type RequestBodyOperator = string;

/** Defines the parameters for RequestHeader match conditions */
export declare interface RequestHeaderMatchConditionParameters {
    typeName: "DeliveryRuleRequestHeaderConditionParameters";
    /** Name of Header to be matched */
    selector?: string;
    /** Describes operator to be matched */
    operator: RequestHeaderOperator;
    /** Describes if this is negate condition or not */
    negateCondition?: boolean;
    /** The match value for the condition of the delivery rule */
    matchValues?: string[];
    /** List of transforms */
    transforms?: Transform[];
}

/**
 * Defines values for RequestHeaderOperator. \
 * {@link KnownRequestHeaderOperator} can be used interchangeably with RequestHeaderOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Any** \
 * **Equal** \
 * **Contains** \
 * **BeginsWith** \
 * **EndsWith** \
 * **LessThan** \
 * **LessThanOrEqual** \
 * **GreaterThan** \
 * **GreaterThanOrEqual** \
 * **RegEx**
 */
export declare type RequestHeaderOperator = string;

/** Defines the parameters for RequestMethod match conditions */
export declare interface RequestMethodMatchConditionParameters {
    typeName: "DeliveryRuleRequestMethodConditionParameters";
    /** Describes operator to be matched */
    operator: RequestMethodOperator;
    /** Describes if this is negate condition or not */
    negateCondition?: boolean;
    /** List of transforms */
    transforms?: Transform[];
    /** The match value for the condition of the delivery rule */
    matchValues?: RequestMethodMatchConditionParametersMatchValuesItem[];
}

/**
 * Defines values for RequestMethodMatchConditionParametersMatchValuesItem. \
 * {@link KnownRequestMethodMatchConditionParametersMatchValuesItem} can be used interchangeably with RequestMethodMatchConditionParametersMatchValuesItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **GET** \
 * **HEAD** \
 * **POST** \
 * **PUT** \
 * **DELETE** \
 * **OPTIONS** \
 * **TRACE**
 */
export declare type RequestMethodMatchConditionParametersMatchValuesItem = string;

/**
 * Defines values for RequestMethodOperator. \
 * {@link KnownRequestMethodOperator} can be used interchangeably with RequestMethodOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Equal**
 */
export declare type RequestMethodOperator = string;

/** Defines the parameters for RequestScheme match conditions */
export declare interface RequestSchemeMatchConditionParameters {
    typeName: "DeliveryRuleRequestSchemeConditionParameters";
    /** Describes operator to be matched */
    operator: "Equal";
    /** Describes if this is negate condition or not */
    negateCondition?: boolean;
    /** List of transforms */
    transforms?: Transform[];
    /** The match value for the condition of the delivery rule */
    matchValues?: RequestSchemeMatchConditionParametersMatchValuesItem[];
}

/**
 * Defines values for RequestSchemeMatchConditionParametersMatchValuesItem. \
 * {@link KnownRequestSchemeMatchConditionParametersMatchValuesItem} can be used interchangeably with RequestSchemeMatchConditionParametersMatchValuesItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **HTTP** \
 * **HTTPS**
 */
export declare type RequestSchemeMatchConditionParametersMatchValuesItem = string;

/** Defines the parameters for RequestUri match conditions */
export declare interface RequestUriMatchConditionParameters {
    typeName: "DeliveryRuleRequestUriConditionParameters";
    /** Describes operator to be matched */
    operator: RequestUriOperator;
    /** Describes if this is negate condition or not */
    negateCondition?: boolean;
    /** The match value for the condition of the delivery rule */
    matchValues?: string[];
    /** List of transforms */
    transforms?: Transform[];
}

/**
 * Defines values for RequestUriOperator. \
 * {@link KnownRequestUriOperator} can be used interchangeably with RequestUriOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Any** \
 * **Equal** \
 * **Contains** \
 * **BeginsWith** \
 * **EndsWith** \
 * **LessThan** \
 * **LessThanOrEqual** \
 * **GreaterThan** \
 * **GreaterThanOrEqual** \
 * **RegEx**
 */
export declare type RequestUriOperator = string;

/** The core properties of ARM resources */
export declare interface Resource {
    /**
     * Resource ID.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * Resource name.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * Resource type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * Read only system data
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
}

/** Reference to another resource. */
export declare interface ResourceReference {
    /** Resource ID. */
    id?: string;
}

/** Resources Response */
export declare interface ResourcesResponse {
    endpoints?: ResourcesResponseEndpointsItem[];
    customDomains?: ResourcesResponseCustomDomainsItem[];
}

export declare interface ResourcesResponseCustomDomainsItem {
    id?: string;
    name?: string;
    endpointId?: string;
    history?: boolean;
}

export declare interface ResourcesResponseEndpointsItem {
    id?: string;
    name?: string;
    history?: boolean;
    customDomains?: ResourcesResponseEndpointsPropertiesItemsItem[];
}

export declare interface ResourcesResponseEndpointsPropertiesItemsItem {
    id?: string;
    name?: string;
    endpointId?: string;
    history?: boolean;
}

/**
 * Defines values for ResourceType. \
 * {@link KnownResourceType} can be used interchangeably with ResourceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Microsoft.Cdn\/Profiles\/Endpoints** \
 * **Microsoft.Cdn\/Profiles\/AfdEndpoints**
 */
export declare type ResourceType = string;

/** Output of check resource usage API. */
export declare interface ResourceUsage {
    /**
     * Resource type for which the usage is provided.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resourceType?: string;
    /**
     * Unit of the usage. e.g. count.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly unit?: ResourceUsageUnit;
    /**
     * Actual value of usage on the specified resource type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly currentValue?: number;
    /**
     * Quota of the specified resource type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly limit?: number;
}

/** Optional parameters. */
export declare interface ResourceUsageListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type ResourceUsageListNextResponse = ResourceUsageListResult;

/** Optional parameters. */
export declare interface ResourceUsageListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type ResourceUsageListResponse = ResourceUsageListResult;

/** Output of check resource usage API. */
export declare interface ResourceUsageListResult {
    /**
     * List of resource usages.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: ResourceUsage[];
    /** URL to get the next set of custom domain objects if there are any. */
    nextLink?: string;
}

/** Interface representing a ResourceUsageOperations. */
export declare interface ResourceUsageOperations {
    /**
     * Check the quota and actual usage of the CDN profiles under the given subscription.
     * @param options The options parameters.
     */
    list(options?: ResourceUsageListOptionalParams): PagedAsyncIterableIterator<ResourceUsage>;
}

/**
 * Defines values for ResourceUsageUnit. \
 * {@link KnownResourceUsageUnit} can be used interchangeably with ResourceUsageUnit,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **count**
 */
export declare type ResourceUsageUnit = string;

/** Defines values for ResponseBasedDetectedErrorTypes. */
export declare type ResponseBasedDetectedErrorTypes = "None" | "TcpErrorsOnly" | "TcpAndHttpErrors";

/** The JSON object that contains the properties to determine origin health using real requests/responses. */
export declare interface ResponseBasedOriginErrorDetectionParameters {
    /** Type of response errors for real user requests for which origin will be deemed unhealthy */
    responseBasedDetectedErrorTypes?: ResponseBasedDetectedErrorTypes;
    /** The percentage of failed requests in the sample where failover should trigger. */
    responseBasedFailoverThresholdPercentage?: number;
    /** The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy. */
    httpErrorRanges?: HttpErrorRangeParameters[];
}

/** Friendly Routes name mapping to the any Routes or secret related information. */
export declare interface Route extends ProxyResource {
    /**
     * The name of the endpoint which holds the route.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly endpointName?: string;
    /** Domains referenced by this endpoint. */
    customDomains?: ActivatedResourceReference[];
    /** A reference to the origin group. */
    originGroup?: ResourceReference;
    /** A directory path on the origin that AzureFrontDoor can use to retrieve content from, e.g. contoso.cloudapp.net/originpath. */
    originPath?: string;
    /** rule sets referenced by this endpoint. */
    ruleSets?: ResourceReference[];
    /** List of supported protocols for this route. */
    supportedProtocols?: AFDEndpointProtocols[];
    /** The route patterns of the rule. */
    patternsToMatch?: string[];
    /** The caching configuration for this route. To disable caching, do not provide a cacheConfiguration object. */
    cacheConfiguration?: AfdRouteCacheConfiguration;
    /** Protocol this rule will use when forwarding traffic to backends. */
    forwardingProtocol?: ForwardingProtocol;
    /** whether this route will be linked to the default endpoint domain. */
    linkToDefaultDomain?: LinkToDefaultDomain;
    /** Whether to automatically redirect HTTP traffic to HTTPS traffic. Note that this is a easy way to set up this rule and it will be the first rule that gets executed. */
    httpsRedirect?: HttpsRedirect;
    /** Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled' */
    enabledState?: EnabledState;
    /**
     * Provisioning status
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: AfdProvisioningState;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly deploymentStatus?: DeploymentStatus;
}

/** Defines the parameters for the route configuration override action. */
export declare interface RouteConfigurationOverrideActionParameters {
    typeName: "DeliveryRuleRouteConfigurationOverrideActionParameters";
    /** A reference to the origin group override configuration. Leave empty to use the default origin group on route. */
    originGroupOverride?: OriginGroupOverride;
    /** The caching configuration associated with this rule. To disable caching, do not provide a cacheConfiguration object. */
    cacheConfiguration?: CacheConfiguration;
}

/** Result of the request to list routes. It contains a list of route objects and a URL link to get the next set of results. */
export declare interface RouteListResult {
    /**
     * List of AzureFrontDoor routes within a profile.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: Route[];
    /** URL to get the next set of route objects if there are any. */
    nextLink?: string;
}

/** The JSON object that contains the properties of the Routes to create. */
export declare interface RouteProperties extends RouteUpdatePropertiesParameters, AFDStateProperties {
}

/** Interface representing a Routes. */
export declare interface Routes {
    /**
     * Lists all of the existing origins within a profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param options The options parameters.
     */
    listByEndpoint(resourceGroupName: string, profileName: string, endpointName: string, options?: RoutesListByEndpointOptionalParams): PagedAsyncIterableIterator<Route>;
    /**
     * Gets an existing route with the specified route name under the specified subscription, resource
     * group, profile, and AzureFrontDoor endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param routeName Name of the routing rule.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, profileName: string, endpointName: string, routeName: string, options?: RoutesGetOptionalParams): Promise<RoutesGetResponse>;
    /**
     * Creates a new route with the specified route name under the specified subscription, resource group,
     * profile, and AzureFrontDoor endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param routeName Name of the routing rule.
     * @param route Route properties
     * @param options The options parameters.
     */
    beginCreate(resourceGroupName: string, profileName: string, endpointName: string, routeName: string, route: Route, options?: RoutesCreateOptionalParams): Promise<PollerLike<PollOperationState<RoutesCreateResponse>, RoutesCreateResponse>>;
    /**
     * Creates a new route with the specified route name under the specified subscription, resource group,
     * profile, and AzureFrontDoor endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param routeName Name of the routing rule.
     * @param route Route properties
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceGroupName: string, profileName: string, endpointName: string, routeName: string, route: Route, options?: RoutesCreateOptionalParams): Promise<RoutesCreateResponse>;
    /**
     * Updates an existing route with the specified route name under the specified subscription, resource
     * group, profile, and AzureFrontDoor endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param routeName Name of the routing rule.
     * @param routeUpdateProperties Route update properties
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, profileName: string, endpointName: string, routeName: string, routeUpdateProperties: RouteUpdateParameters, options?: RoutesUpdateOptionalParams): Promise<PollerLike<PollOperationState<RoutesUpdateResponse>, RoutesUpdateResponse>>;
    /**
     * Updates an existing route with the specified route name under the specified subscription, resource
     * group, profile, and AzureFrontDoor endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param routeName Name of the routing rule.
     * @param routeUpdateProperties Route update properties
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, profileName: string, endpointName: string, routeName: string, routeUpdateProperties: RouteUpdateParameters, options?: RoutesUpdateOptionalParams): Promise<RoutesUpdateResponse>;
    /**
     * Deletes an existing route with the specified route name under the specified subscription, resource
     * group, profile, and AzureFrontDoor endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param routeName Name of the routing rule.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, profileName: string, endpointName: string, routeName: string, options?: RoutesDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes an existing route with the specified route name under the specified subscription, resource
     * group, profile, and AzureFrontDoor endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param endpointName Name of the endpoint under the profile which is unique globally.
     * @param routeName Name of the routing rule.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, profileName: string, endpointName: string, routeName: string, options?: RoutesDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface RoutesCreateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the create operation. */
export declare type RoutesCreateResponse = Route;

/** Optional parameters. */
export declare interface RoutesDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface RoutesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type RoutesGetResponse = Route;

/** Optional parameters. */
export declare interface RoutesListByEndpointNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByEndpointNext operation. */
export declare type RoutesListByEndpointNextResponse = RouteListResult;

/** Optional parameters. */
export declare interface RoutesListByEndpointOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByEndpoint operation. */
export declare type RoutesListByEndpointResponse = RouteListResult;

/** Optional parameters. */
export declare interface RoutesUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the update operation. */
export declare type RoutesUpdateResponse = Route;

/** The domain JSON object required for domain creation or update. */
export declare interface RouteUpdateParameters {
    /**
     * The name of the endpoint which holds the route.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly endpointName?: string;
    /** Domains referenced by this endpoint. */
    customDomains?: ActivatedResourceReference[];
    /** A reference to the origin group. */
    originGroup?: ResourceReference;
    /** A directory path on the origin that AzureFrontDoor can use to retrieve content from, e.g. contoso.cloudapp.net/originpath. */
    originPath?: string;
    /** rule sets referenced by this endpoint. */
    ruleSets?: ResourceReference[];
    /** List of supported protocols for this route. */
    supportedProtocols?: AFDEndpointProtocols[];
    /** The route patterns of the rule. */
    patternsToMatch?: string[];
    /** The caching configuration for this route. To disable caching, do not provide a cacheConfiguration object. */
    cacheConfiguration?: AfdRouteCacheConfiguration;
    /** Protocol this rule will use when forwarding traffic to backends. */
    forwardingProtocol?: ForwardingProtocol;
    /** whether this route will be linked to the default endpoint domain. */
    linkToDefaultDomain?: LinkToDefaultDomain;
    /** Whether to automatically redirect HTTP traffic to HTTPS traffic. Note that this is a easy way to set up this rule and it will be the first rule that gets executed. */
    httpsRedirect?: HttpsRedirect;
    /** Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled' */
    enabledState?: EnabledState;
}

/** The JSON object that contains the properties of the domain to create. */
export declare interface RouteUpdatePropertiesParameters {
    /**
     * The name of the endpoint which holds the route.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly endpointName?: string;
    /** Domains referenced by this endpoint. */
    customDomains?: ActivatedResourceReference[];
    /** A reference to the origin group. */
    originGroup?: ResourceReference;
    /** A directory path on the origin that AzureFrontDoor can use to retrieve content from, e.g. contoso.cloudapp.net/originpath. */
    originPath?: string;
    /** rule sets referenced by this endpoint. */
    ruleSets?: ResourceReference[];
    /** List of supported protocols for this route. */
    supportedProtocols?: AFDEndpointProtocols[];
    /** The route patterns of the rule. */
    patternsToMatch?: string[];
    /** The caching configuration for this route. To disable caching, do not provide a cacheConfiguration object. */
    cacheConfiguration?: AfdRouteCacheConfiguration;
    /** Protocol this rule will use when forwarding traffic to backends. */
    forwardingProtocol?: ForwardingProtocol;
    /** whether this route will be linked to the default endpoint domain. */
    linkToDefaultDomain?: LinkToDefaultDomain;
    /** Whether to automatically redirect HTTP traffic to HTTPS traffic. Note that this is a easy way to set up this rule and it will be the first rule that gets executed. */
    httpsRedirect?: HttpsRedirect;
    /** Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled' */
    enabledState?: EnabledState;
}

/** Friendly Rules name mapping to the any Rules or secret related information. */
export declare interface Rule extends ProxyResource {
    /**
     * The name of the rule set containing the rule.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly ruleSetName?: string;
    /** The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied. */
    order?: number;
    /** A list of conditions that must be matched for the actions to be executed */
    conditions?: DeliveryRuleConditionUnion[];
    /** A list of actions that are executed when all the conditions of a rule are satisfied. */
    actions?: DeliveryRuleActionAutoGeneratedUnion[];
    /** If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue. */
    matchProcessingBehavior?: MatchProcessingBehavior;
    /**
     * Provisioning status
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: AfdProvisioningState;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly deploymentStatus?: DeploymentStatus;
}

/**
 * Defines values for RuleCacheBehavior. \
 * {@link KnownRuleCacheBehavior} can be used interchangeably with RuleCacheBehavior,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **HonorOrigin** \
 * **OverrideAlways** \
 * **OverrideIfOriginMissing**
 */
export declare type RuleCacheBehavior = string;

/**
 * Defines values for RuleIsCompressionEnabled. \
 * {@link KnownRuleIsCompressionEnabled} can be used interchangeably with RuleIsCompressionEnabled,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export declare type RuleIsCompressionEnabled = string;

/** Result of the request to list rules. It contains a list of rule objects and a URL link to get the next set of results. */
export declare interface RuleListResult {
    /**
     * List of AzureFrontDoor rules within a rule set.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: Rule[];
    /** URL to get the next set of rule objects if there are any. */
    nextLink?: string;
}

/** The JSON object that contains the properties of the Rules to create. */
export declare interface RuleProperties extends RuleUpdatePropertiesParameters, AFDStateProperties {
}

/**
 * Defines values for RuleQueryStringCachingBehavior. \
 * {@link KnownRuleQueryStringCachingBehavior} can be used interchangeably with RuleQueryStringCachingBehavior,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **IgnoreQueryString** \
 * **UseQueryString** \
 * **IgnoreSpecifiedQueryStrings** \
 * **IncludeSpecifiedQueryStrings**
 */
export declare type RuleQueryStringCachingBehavior = string;

/** Interface representing a Rules. */
export declare interface Rules {
    /**
     * Lists all of the existing delivery rules within a rule set.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param ruleSetName Name of the rule set under the profile.
     * @param options The options parameters.
     */
    listByRuleSet(resourceGroupName: string, profileName: string, ruleSetName: string, options?: RulesListByRuleSetOptionalParams): PagedAsyncIterableIterator<Rule>;
    /**
     * Gets an existing delivery rule within a rule set.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param ruleSetName Name of the rule set under the profile.
     * @param ruleName Name of the delivery rule which is unique within the endpoint.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, profileName: string, ruleSetName: string, ruleName: string, options?: RulesGetOptionalParams): Promise<RulesGetResponse>;
    /**
     * Creates a new delivery rule within the specified rule set.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param ruleSetName Name of the rule set under the profile.
     * @param ruleName Name of the delivery rule which is unique within the endpoint.
     * @param rule The delivery rule properties.
     * @param options The options parameters.
     */
    beginCreate(resourceGroupName: string, profileName: string, ruleSetName: string, ruleName: string, rule: Rule, options?: RulesCreateOptionalParams): Promise<PollerLike<PollOperationState<RulesCreateResponse>, RulesCreateResponse>>;
    /**
     * Creates a new delivery rule within the specified rule set.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param ruleSetName Name of the rule set under the profile.
     * @param ruleName Name of the delivery rule which is unique within the endpoint.
     * @param rule The delivery rule properties.
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceGroupName: string, profileName: string, ruleSetName: string, ruleName: string, rule: Rule, options?: RulesCreateOptionalParams): Promise<RulesCreateResponse>;
    /**
     * Updates an existing delivery rule within a rule set.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param ruleSetName Name of the rule set under the profile.
     * @param ruleName Name of the delivery rule which is unique within the endpoint.
     * @param ruleUpdateProperties Delivery rule properties
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, profileName: string, ruleSetName: string, ruleName: string, ruleUpdateProperties: RuleUpdateParameters, options?: RulesUpdateOptionalParams): Promise<PollerLike<PollOperationState<RulesUpdateResponse>, RulesUpdateResponse>>;
    /**
     * Updates an existing delivery rule within a rule set.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param ruleSetName Name of the rule set under the profile.
     * @param ruleName Name of the delivery rule which is unique within the endpoint.
     * @param ruleUpdateProperties Delivery rule properties
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, profileName: string, ruleSetName: string, ruleName: string, ruleUpdateProperties: RuleUpdateParameters, options?: RulesUpdateOptionalParams): Promise<RulesUpdateResponse>;
    /**
     * Deletes an existing delivery rule within a rule set.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param ruleSetName Name of the rule set under the profile.
     * @param ruleName Name of the delivery rule which is unique within the endpoint.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, profileName: string, ruleSetName: string, ruleName: string, options?: RulesDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes an existing delivery rule within a rule set.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param ruleSetName Name of the rule set under the profile.
     * @param ruleName Name of the delivery rule which is unique within the endpoint.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, profileName: string, ruleSetName: string, ruleName: string, options?: RulesDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface RulesCreateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the create operation. */
export declare type RulesCreateResponse = Rule;

/** Optional parameters. */
export declare interface RulesDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Friendly RuleSet name mapping to the any RuleSet or secret related information. */
export declare interface RuleSet extends ProxyResource {
    /**
     * Provisioning status
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: AfdProvisioningState;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly deploymentStatus?: DeploymentStatus;
    /**
     * The name of the profile which holds the rule set.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly profileName?: string;
}

/** Result of the request to list rule sets. It contains a list of rule set objects and a URL link to get the next set of results. */
export declare interface RuleSetListResult {
    /**
     * List of AzureFrontDoor rule sets within a profile.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: RuleSet[];
    /** URL to get the next set of rule set objects if there are any. */
    nextLink?: string;
}

/** The JSON object that contains the properties of the Rule Set to create. */
export declare interface RuleSetProperties extends AFDStateProperties {
    /**
     * The name of the profile which holds the rule set.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly profileName?: string;
}

/** Interface representing a RuleSets. */
export declare interface RuleSets {
    /**
     * Lists existing AzureFrontDoor rule sets within a profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param options The options parameters.
     */
    listByProfile(resourceGroupName: string, profileName: string, options?: RuleSetsListByProfileOptionalParams): PagedAsyncIterableIterator<RuleSet>;
    /**
     * Checks the quota and actual usage of the given AzureFrontDoor rule set under the given CDN profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param ruleSetName Name of the rule set under the profile which is unique globally.
     * @param options The options parameters.
     */
    listResourceUsage(resourceGroupName: string, profileName: string, ruleSetName: string, options?: RuleSetsListResourceUsageOptionalParams): PagedAsyncIterableIterator<Usage>;
    /**
     * Gets an existing AzureFrontDoor rule set with the specified rule set name under the specified
     * subscription, resource group and profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param ruleSetName Name of the rule set under the profile which is unique globally.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, profileName: string, ruleSetName: string, options?: RuleSetsGetOptionalParams): Promise<RuleSetsGetResponse>;
    /**
     * Creates a new rule set within the specified profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param ruleSetName Name of the rule set under the profile which is unique globally
     * @param options The options parameters.
     */
    create(resourceGroupName: string, profileName: string, ruleSetName: string, options?: RuleSetsCreateOptionalParams): Promise<RuleSetsCreateResponse>;
    /**
     * Deletes an existing AzureFrontDoor rule set with the specified rule set name under the specified
     * subscription, resource group and profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param ruleSetName Name of the rule set under the profile which is unique globally.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, profileName: string, ruleSetName: string, options?: RuleSetsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes an existing AzureFrontDoor rule set with the specified rule set name under the specified
     * subscription, resource group and profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param ruleSetName Name of the rule set under the profile which is unique globally.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, profileName: string, ruleSetName: string, options?: RuleSetsDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface RuleSetsCreateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the create operation. */
export declare type RuleSetsCreateResponse = RuleSet;

/** Optional parameters. */
export declare interface RuleSetsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface RuleSetsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type RuleSetsGetResponse = RuleSet;

/** Optional parameters. */
export declare interface RuleSetsListByProfileNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByProfileNext operation. */
export declare type RuleSetsListByProfileNextResponse = RuleSetListResult;

/** Optional parameters. */
export declare interface RuleSetsListByProfileOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByProfile operation. */
export declare type RuleSetsListByProfileResponse = RuleSetListResult;

/** Optional parameters. */
export declare interface RuleSetsListResourceUsageNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listResourceUsageNext operation. */
export declare type RuleSetsListResourceUsageNextResponse = UsagesListResult;

/** Optional parameters. */
export declare interface RuleSetsListResourceUsageOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listResourceUsage operation. */
export declare type RuleSetsListResourceUsageResponse = UsagesListResult;

/** Optional parameters. */
export declare interface RulesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type RulesGetResponse = Rule;

/** Optional parameters. */
export declare interface RulesListByRuleSetNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByRuleSetNext operation. */
export declare type RulesListByRuleSetNextResponse = RuleListResult;

/** Optional parameters. */
export declare interface RulesListByRuleSetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByRuleSet operation. */
export declare type RulesListByRuleSetResponse = RuleListResult;

/** Optional parameters. */
export declare interface RulesUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the update operation. */
export declare type RulesUpdateResponse = Rule;

/** The domain JSON object required for domain creation or update. */
export declare interface RuleUpdateParameters {
    /**
     * The name of the rule set containing the rule.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly ruleSetName?: string;
    /** The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied. */
    order?: number;
    /** A list of conditions that must be matched for the actions to be executed */
    conditions?: DeliveryRuleConditionUnion[];
    /** A list of actions that are executed when all the conditions of a rule are satisfied. */
    actions?: DeliveryRuleActionAutoGeneratedUnion[];
    /** If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue. */
    matchProcessingBehavior?: MatchProcessingBehavior;
}

/** The JSON object that contains the properties of the rule to update. */
export declare interface RuleUpdatePropertiesParameters {
    /**
     * The name of the rule set containing the rule.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly ruleSetName?: string;
    /** The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied. */
    order?: number;
    /** A list of conditions that must be matched for the actions to be executed */
    conditions?: DeliveryRuleConditionUnion[];
    /** A list of actions that are executed when all the conditions of a rule are satisfied. */
    actions?: DeliveryRuleActionAutoGeneratedUnion[];
    /** If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue. */
    matchProcessingBehavior?: MatchProcessingBehavior;
}

/** Friendly Secret name mapping to the any Secret or secret related information. */
export declare interface Secret extends ProxyResource {
    /**
     * Provisioning status
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: AfdProvisioningState;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly deploymentStatus?: DeploymentStatus;
    /**
     * The name of the profile which holds the secret.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly profileName?: string;
    /** object which contains secret parameters */
    parameters?: SecretParametersUnion;
}

/** Result of the request to list secrets. It contains a list of Secret objects and a URL link to get the next set of results. */
export declare interface SecretListResult {
    /**
     * List of AzureFrontDoor secrets within a profile.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: Secret[];
    /** URL to get the next set of Secret objects if there are any. */
    nextLink?: string;
}

/** The json object containing secret parameters */
export declare interface SecretParameters {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    type: "UrlSigningKey" | "ManagedCertificate" | "CustomerCertificate" | "AzureFirstPartyManagedCertificate";
}

export declare type SecretParametersUnion = SecretParameters | UrlSigningKeyParameters | ManagedCertificateParameters | CustomerCertificateParameters | AzureFirstPartyManagedCertificateParameters;

/** The JSON object that contains the properties of the Secret to create. */
export declare interface SecretProperties extends AFDStateProperties {
    /**
     * The name of the profile which holds the secret.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly profileName?: string;
    /** object which contains secret parameters */
    parameters?: SecretParametersUnion;
}

/** Interface representing a Secrets. */
export declare interface Secrets {
    /**
     * Lists existing AzureFrontDoor secrets.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param options The options parameters.
     */
    listByProfile(resourceGroupName: string, profileName: string, options?: SecretsListByProfileOptionalParams): PagedAsyncIterableIterator<Secret>;
    /**
     * Gets an existing Secret within a profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param secretName Name of the Secret under the profile.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, profileName: string, secretName: string, options?: SecretsGetOptionalParams): Promise<SecretsGetResponse>;
    /**
     * Creates a new Secret within the specified profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param secretName Name of the Secret under the profile.
     * @param secret The Secret properties.
     * @param options The options parameters.
     */
    beginCreate(resourceGroupName: string, profileName: string, secretName: string, secret: Secret, options?: SecretsCreateOptionalParams): Promise<PollerLike<PollOperationState<SecretsCreateResponse>, SecretsCreateResponse>>;
    /**
     * Creates a new Secret within the specified profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param secretName Name of the Secret under the profile.
     * @param secret The Secret properties.
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceGroupName: string, profileName: string, secretName: string, secret: Secret, options?: SecretsCreateOptionalParams): Promise<SecretsCreateResponse>;
    /**
     * Deletes an existing Secret within profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param secretName Name of the Secret under the profile.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, profileName: string, secretName: string, options?: SecretsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes an existing Secret within profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param secretName Name of the Secret under the profile.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, profileName: string, secretName: string, options?: SecretsDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface SecretsCreateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the create operation. */
export declare type SecretsCreateResponse = Secret;

/** Optional parameters. */
export declare interface SecretsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface SecretsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type SecretsGetResponse = Secret;

/** Optional parameters. */
export declare interface SecretsListByProfileNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByProfileNext operation. */
export declare type SecretsListByProfileNextResponse = SecretListResult;

/** Optional parameters. */
export declare interface SecretsListByProfileOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByProfile operation. */
export declare type SecretsListByProfileResponse = SecretListResult;

/**
 * Defines values for SecretType. \
 * {@link KnownSecretType} can be used interchangeably with SecretType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **UrlSigningKey** \
 * **CustomerCertificate** \
 * **ManagedCertificate** \
 * **AzureFirstPartyManagedCertificate**
 */
export declare type SecretType = string;

/** Interface representing a SecurityPolicies. */
export declare interface SecurityPolicies {
    /**
     * Lists security policies associated with the profile
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param options The options parameters.
     */
    listByProfile(resourceGroupName: string, profileName: string, options?: SecurityPoliciesListByProfileOptionalParams): PagedAsyncIterableIterator<SecurityPolicy>;
    /**
     * Gets an existing security policy within a profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param securityPolicyName Name of the security policy under the profile.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, profileName: string, securityPolicyName: string, options?: SecurityPoliciesGetOptionalParams): Promise<SecurityPoliciesGetResponse>;
    /**
     * Creates a new security policy within the specified profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param securityPolicyName Name of the security policy under the profile.
     * @param securityPolicy The security policy properties.
     * @param options The options parameters.
     */
    beginCreate(resourceGroupName: string, profileName: string, securityPolicyName: string, securityPolicy: SecurityPolicy, options?: SecurityPoliciesCreateOptionalParams): Promise<PollerLike<PollOperationState<SecurityPoliciesCreateResponse>, SecurityPoliciesCreateResponse>>;
    /**
     * Creates a new security policy within the specified profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param securityPolicyName Name of the security policy under the profile.
     * @param securityPolicy The security policy properties.
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceGroupName: string, profileName: string, securityPolicyName: string, securityPolicy: SecurityPolicy, options?: SecurityPoliciesCreateOptionalParams): Promise<SecurityPoliciesCreateResponse>;
    /**
     * Updates an existing security policy within a profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param securityPolicyName Name of the security policy under the profile.
     * @param securityPolicyUpdateProperties Security policy update properties
     * @param options The options parameters.
     */
    beginPatch(resourceGroupName: string, profileName: string, securityPolicyName: string, securityPolicyUpdateProperties: SecurityPolicyUpdateParameters, options?: SecurityPoliciesPatchOptionalParams): Promise<PollerLike<PollOperationState<SecurityPoliciesPatchResponse>, SecurityPoliciesPatchResponse>>;
    /**
     * Updates an existing security policy within a profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param securityPolicyName Name of the security policy under the profile.
     * @param securityPolicyUpdateProperties Security policy update properties
     * @param options The options parameters.
     */
    beginPatchAndWait(resourceGroupName: string, profileName: string, securityPolicyName: string, securityPolicyUpdateProperties: SecurityPolicyUpdateParameters, options?: SecurityPoliciesPatchOptionalParams): Promise<SecurityPoliciesPatchResponse>;
    /**
     * Deletes an existing security policy within profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param securityPolicyName Name of the security policy under the profile.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, profileName: string, securityPolicyName: string, options?: SecurityPoliciesDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes an existing security policy within profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param securityPolicyName Name of the security policy under the profile.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, profileName: string, securityPolicyName: string, options?: SecurityPoliciesDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface SecurityPoliciesCreateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the create operation. */
export declare type SecurityPoliciesCreateResponse = SecurityPolicy;

/** Optional parameters. */
export declare interface SecurityPoliciesDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface SecurityPoliciesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type SecurityPoliciesGetResponse = SecurityPolicy;

/** Optional parameters. */
export declare interface SecurityPoliciesListByProfileNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByProfileNext operation. */
export declare type SecurityPoliciesListByProfileNextResponse = SecurityPolicyListResult;

/** Optional parameters. */
export declare interface SecurityPoliciesListByProfileOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByProfile operation. */
export declare type SecurityPoliciesListByProfileResponse = SecurityPolicyListResult;

/** Optional parameters. */
export declare interface SecurityPoliciesPatchOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the patch operation. */
export declare type SecurityPoliciesPatchResponse = SecurityPolicy;

/** SecurityPolicy association for AzureFrontDoor profile */
export declare interface SecurityPolicy extends ProxyResource {
    /**
     * Provisioning status
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: AfdProvisioningState;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly deploymentStatus?: DeploymentStatus;
    /**
     * The name of the profile which holds the security policy.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly profileName?: string;
    /** object which contains security policy parameters */
    parameters?: SecurityPolicyPropertiesParametersUnion;
}

/** Result of the request to list security policies. It contains a list of security policy objects and a URL link to get the next set of results. */
export declare interface SecurityPolicyListResult {
    /**
     * List of Security policies within a profile
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: SecurityPolicy[];
    /** URL to get the next set of security policy objects if there is any. */
    nextLink?: string;
}

/** The json object that contains properties required to create a security policy */
export declare interface SecurityPolicyProperties extends AFDStateProperties {
    /**
     * The name of the profile which holds the security policy.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly profileName?: string;
    /** object which contains security policy parameters */
    parameters?: SecurityPolicyPropertiesParametersUnion;
}

/** The json object containing security policy parameters */
export declare interface SecurityPolicyPropertiesParameters {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    type: "WebApplicationFirewall";
}

export declare type SecurityPolicyPropertiesParametersUnion = SecurityPolicyPropertiesParameters | SecurityPolicyWebApplicationFirewallParameters;

/**
 * Defines values for SecurityPolicyType. \
 * {@link KnownSecurityPolicyType} can be used interchangeably with SecurityPolicyType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **WebApplicationFirewall**
 */
export declare type SecurityPolicyType = string;

/** The JSON object containing security policy update parameters. */
export declare interface SecurityPolicyUpdateParameters {
    /** object which contains security policy parameters */
    parameters?: SecurityPolicyPropertiesParametersUnion;
}

/** settings for security policy patterns to match */
export declare interface SecurityPolicyWebApplicationFirewallAssociation {
    /** List of domains. */
    domains?: ActivatedResourceReference[];
    /** List of paths */
    patternsToMatch?: string[];
}

/** The json object containing security policy waf parameters */
export declare interface SecurityPolicyWebApplicationFirewallParameters extends SecurityPolicyPropertiesParameters {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    type: "WebApplicationFirewall";
    /** Resource ID. */
    wafPolicy?: ResourceReference;
    /** Waf associations */
    associations?: SecurityPolicyWebApplicationFirewallAssociation[];
}

/** Defines the parameters for ServerPort match conditions */
export declare interface ServerPortMatchConditionParameters {
    typeName: "DeliveryRuleServerPortConditionParameters";
    /** Describes operator to be matched */
    operator: ServerPortOperator;
    /** Describes if this is negate condition or not */
    negateCondition?: boolean;
    /** The match value for the condition of the delivery rule */
    matchValues?: string[];
    /** List of transforms */
    transforms?: Transform[];
}

/**
 * Defines values for ServerPortOperator. \
 * {@link KnownServerPortOperator} can be used interchangeably with ServerPortOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Any** \
 * **Equal** \
 * **Contains** \
 * **BeginsWith** \
 * **EndsWith** \
 * **LessThan** \
 * **LessThanOrEqual** \
 * **GreaterThan** \
 * **GreaterThanOrEqual** \
 * **RegEx**
 */
export declare type ServerPortOperator = string;

/** One property of operation, include log specifications. */
export declare interface ServiceSpecification {
    /** Log specifications of operation. */
    logSpecifications?: LogSpecification[];
    /** Metric specifications of operation. */
    metricSpecifications?: MetricSpecification[];
}

/** Describes the properties of an existing Shared Private Link Resource to use when connecting to a private origin. */
export declare interface SharedPrivateLinkResourceProperties {
    /** The resource id of the resource the shared private link resource is for. */
    privateLink?: ResourceReference;
    /** The location of the shared private link resource */
    privateLinkLocation?: string;
    /** The group id from the provider of resource the shared private link resource is for. */
    groupId?: string;
    /** The request message for requesting approval of the shared private link resource. */
    requestMessage?: string;
    /** Status of the shared private link resource. Can be Pending, Approved, Rejected, Disconnected, or Timeout. */
    status?: SharedPrivateLinkResourceStatus;
}

/** Defines values for SharedPrivateLinkResourceStatus. */
export declare type SharedPrivateLinkResourceStatus = "Pending" | "Approved" | "Rejected" | "Disconnected" | "Timeout";

/**
 * Standard_Verizon = The SKU name for a Standard Verizon CDN profile.
 * Premium_Verizon = The SKU name for a Premium Verizon CDN profile.
 * Custom_Verizon = The SKU name for a Custom Verizon CDN profile.
 * Standard_Akamai = The SKU name for an Akamai CDN profile.
 * Standard_ChinaCdn = The SKU name for a China CDN profile for VOD, Web and download scenarios using GB based billing model.
 * Standard_Microsoft = The SKU name for a Standard Microsoft CDN profile.
 * Standard_AzureFrontDoor =  The SKU name for an Azure Front Door Standard profile.
 * Premium_AzureFrontDoor = The SKU name for an Azure Front Door Premium profile.
 * Standard_955BandWidth_ChinaCdn = The SKU name for a China CDN profile for VOD, Web and download scenarios using 95-5 peak bandwidth billing model.
 * Standard_AvgBandWidth_ChinaCdn = The SKU name for a China CDN profile for VOD, Web and download scenarios using monthly average peak bandwidth billing model.
 * StandardPlus_ChinaCdn = The SKU name for a China CDN profile for live-streaming using GB based billing model.
 * StandardPlus_955BandWidth_ChinaCdn = The SKU name for a China CDN live-streaming profile using 95-5 peak bandwidth billing model.
 * StandardPlus_AvgBandWidth_ChinaCdn = The SKU name for a China CDN live-streaming profile using monthly average peak bandwidth billing model.
 *
 */
export declare interface Sku {
    /** Name of the pricing tier. */
    name?: SkuName;
}

/**
 * Defines values for SkuName. \
 * {@link KnownSkuName} can be used interchangeably with SkuName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Standard_Verizon** \
 * **Premium_Verizon** \
 * **Custom_Verizon** \
 * **Standard_Akamai** \
 * **Standard_ChinaCdn** \
 * **Standard_Microsoft** \
 * **Standard_AzureFrontDoor** \
 * **Premium_AzureFrontDoor** \
 * **Standard_955BandWidth_ChinaCdn** \
 * **Standard_AvgBandWidth_ChinaCdn** \
 * **StandardPlus_ChinaCdn** \
 * **StandardPlus_955BandWidth_ChinaCdn** \
 * **StandardPlus_AvgBandWidth_ChinaCdn**
 */
export declare type SkuName = string;

/** Defines the parameters for SocketAddress match conditions */
export declare interface SocketAddrMatchConditionParameters {
    typeName: "DeliveryRuleSocketAddrConditionParameters";
    /** Describes operator to be matched */
    operator: SocketAddrOperator;
    /** Describes if this is negate condition or not */
    negateCondition?: boolean;
    /** The match value for the condition of the delivery rule */
    matchValues?: string[];
    /** List of transforms */
    transforms?: Transform[];
}

/**
 * Defines values for SocketAddrOperator. \
 * {@link KnownSocketAddrOperator} can be used interchangeably with SocketAddrOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Any** \
 * **IPMatch**
 */
export declare type SocketAddrOperator = string;

/**
 * Defines values for SslProtocol. \
 * {@link KnownSslProtocol} can be used interchangeably with SslProtocol,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **TLSv1** \
 * **TLSv1.1** \
 * **TLSv1.2**
 */
export declare type SslProtocol = string;

/** Defines the parameters for SslProtocol match conditions */
export declare interface SslProtocolMatchConditionParameters {
    typeName: "DeliveryRuleSslProtocolConditionParameters";
    /** Describes operator to be matched */
    operator: SslProtocolOperator;
    /** Describes if this is negate condition or not */
    negateCondition?: boolean;
    /** The match value for the condition of the delivery rule */
    matchValues?: SslProtocol[];
    /** List of transforms */
    transforms?: Transform[];
}

/**
 * Defines values for SslProtocolOperator. \
 * {@link KnownSslProtocolOperator} can be used interchangeably with SslProtocolOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Equal**
 */
export declare type SslProtocolOperator = string;

/** The URI required to login to the supplemental portal from the Azure portal. */
export declare interface SsoUri {
    /**
     * The URI used to login to the supplemental portal.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly ssoUriValue?: string;
}

/**
 * Defines values for Status. \
 * {@link KnownStatus} can be used interchangeably with Status,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Valid** \
 * **Invalid** \
 * **AccessDenied** \
 * **CertificateExpired**
 */
export declare type Status = string;

/** The result of the GetSupportedOptimizationTypes API */
export declare interface SupportedOptimizationTypesListResult {
    /**
     * Supported optimization types for a profile.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly supportedOptimizationTypes?: OptimizationType[];
}

/** Read only system data */
export declare interface SystemData {
    /** An identifier for the identity that created the resource */
    createdBy?: string;
    /** The type of identity that created the resource */
    createdByType?: IdentityType;
    /** The timestamp of resource creation (UTC) */
    createdAt?: Date;
    /** An identifier for the identity that last modified the resource */
    lastModifiedBy?: string;
    /** The type of identity that last modified the resource */
    lastModifiedByType?: IdentityType;
    /** The timestamp of resource last modification (UTC) */
    lastModifiedAt?: Date;
}

/** The resource model definition for a ARM tracked top level resource. */
export declare interface TrackedResource extends Resource {
    /** Resource location. */
    location: string;
    /** Resource tags. */
    tags?: {
        [propertyName: string]: string;
    };
}

/**
 * Defines values for Transform. \
 * {@link KnownTransform} can be used interchangeably with Transform,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Lowercase** \
 * **Uppercase** \
 * **Trim** \
 * **UrlDecode** \
 * **UrlEncode** \
 * **RemoveNulls**
 */
export declare type Transform = string;

/**
 * Defines values for TransformType. \
 * {@link KnownTransformType} can be used interchangeably with TransformType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Lowercase** \
 * **Uppercase** \
 * **Trim** \
 * **UrlDecode** \
 * **UrlEncode** \
 * **RemoveNulls**
 */
export declare type TransformType = string;

/**
 * Defines values for UpdateRule. \
 * {@link KnownUpdateRule} can be used interchangeably with UpdateRule,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NoAction**
 */
export declare type UpdateRule = string;

/** Defines the parameters for UrlFileExtension match conditions */
export declare interface UrlFileExtensionMatchConditionParameters {
    typeName: "DeliveryRuleUrlFileExtensionMatchConditionParameters";
    /** Describes operator to be matched */
    operator: UrlFileExtensionOperator;
    /** Describes if this is negate condition or not */
    negateCondition?: boolean;
    /** The match value for the condition of the delivery rule */
    matchValues?: string[];
    /** List of transforms */
    transforms?: Transform[];
}

/**
 * Defines values for UrlFileExtensionOperator. \
 * {@link KnownUrlFileExtensionOperator} can be used interchangeably with UrlFileExtensionOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Any** \
 * **Equal** \
 * **Contains** \
 * **BeginsWith** \
 * **EndsWith** \
 * **LessThan** \
 * **LessThanOrEqual** \
 * **GreaterThan** \
 * **GreaterThanOrEqual** \
 * **RegEx**
 */
export declare type UrlFileExtensionOperator = string;

/** Defines the parameters for UrlFilename match conditions */
export declare interface UrlFileNameMatchConditionParameters {
    typeName: "DeliveryRuleUrlFilenameConditionParameters";
    /** Describes operator to be matched */
    operator: UrlFileNameOperator;
    /** Describes if this is negate condition or not */
    negateCondition?: boolean;
    /** The match value for the condition of the delivery rule */
    matchValues?: string[];
    /** List of transforms */
    transforms?: Transform[];
}

/**
 * Defines values for UrlFileNameOperator. \
 * {@link KnownUrlFileNameOperator} can be used interchangeably with UrlFileNameOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Any** \
 * **Equal** \
 * **Contains** \
 * **BeginsWith** \
 * **EndsWith** \
 * **LessThan** \
 * **LessThanOrEqual** \
 * **GreaterThan** \
 * **GreaterThanOrEqual** \
 * **RegEx**
 */
export declare type UrlFileNameOperator = string;

/** Defines the parameters for UrlPath match conditions */
export declare interface UrlPathMatchConditionParameters {
    typeName: "DeliveryRuleUrlPathMatchConditionParameters";
    /** Describes operator to be matched */
    operator: UrlPathOperator;
    /** Describes if this is negate condition or not */
    negateCondition?: boolean;
    /** The match value for the condition of the delivery rule */
    matchValues?: string[];
    /** List of transforms */
    transforms?: Transform[];
}

/**
 * Defines values for UrlPathOperator. \
 * {@link KnownUrlPathOperator} can be used interchangeably with UrlPathOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Any** \
 * **Equal** \
 * **Contains** \
 * **BeginsWith** \
 * **EndsWith** \
 * **LessThan** \
 * **LessThanOrEqual** \
 * **GreaterThan** \
 * **GreaterThanOrEqual** \
 * **Wildcard** \
 * **RegEx**
 */
export declare type UrlPathOperator = string;

/** Defines the url redirect action for the delivery rule. */
export declare interface UrlRedirectAction extends DeliveryRuleActionAutoGenerated {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    name: "UrlRedirect";
    /** Defines the parameters for the action. */
    parameters: UrlRedirectActionParameters;
}

/** Defines the parameters for the url redirect action. */
export declare interface UrlRedirectActionParameters {
    typeName: "DeliveryRuleUrlRedirectActionParameters";
    /** The redirect type the rule will use when redirecting traffic. */
    redirectType: RedirectType;
    /** Protocol to use for the redirect. The default value is MatchRequest */
    destinationProtocol?: DestinationProtocol;
    /** The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path. */
    customPath?: string;
    /** Host to redirect. Leave empty to use the incoming host as the destination host. */
    customHostname?: string;
    /** The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added automatically so do not include them. */
    customQueryString?: string;
    /** Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #. */
    customFragment?: string;
}

/** Defines the url rewrite action for the delivery rule. */
export declare interface UrlRewriteAction extends DeliveryRuleActionAutoGenerated {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    name: "UrlRewrite";
    /** Defines the parameters for the action. */
    parameters: UrlRewriteActionParameters;
}

/** Defines the parameters for the url rewrite action. */
export declare interface UrlRewriteActionParameters {
    typeName: "DeliveryRuleUrlRewriteActionParameters";
    /** define a request URI pattern that identifies the type of requests that may be rewritten. If value is blank, all strings are matched. */
    sourcePattern: string;
    /** Define the relative URL to which the above requests will be rewritten by. */
    destination: string;
    /** Whether to preserve unmatched path. Default value is true. */
    preserveUnmatchedPath?: boolean;
}

/** Defines the url signing action for the delivery rule. */
export declare interface UrlSigningAction extends DeliveryRuleActionAutoGenerated {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    name: "UrlSigning";
    /** Defines the parameters for the action. */
    parameters: UrlSigningActionParameters;
}

/** Defines the parameters for the Url Signing action. */
export declare interface UrlSigningActionParameters {
    typeName: "DeliveryRuleUrlSigningActionParameters";
    /** Algorithm to use for URL signing */
    algorithm?: Algorithm_2;
    /** Defines which query string parameters in the url to be considered for expires, key id etc. */
    parameterNameOverride?: UrlSigningParamIdentifier[];
}

/** Url signing key */
export declare interface UrlSigningKey {
    /** Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash. */
    keyId: string;
    /** Defines the parameters for using customer key vault for Url Signing Key. */
    keySourceParameters: KeyVaultSigningKeyParameters;
}

/** Url signing key parameters */
export declare interface UrlSigningKeyParameters extends SecretParameters {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    type: "UrlSigningKey";
    /** Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash. */
    keyId: string;
    /** Resource reference to the Azure Key Vault secret. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{secretName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​ */
    secretSource: ResourceReference;
    /** Version of the secret to be used */
    secretVersion?: string;
}

/** Defines how to identify a parameter for a specific purpose e.g. expires */
export declare interface UrlSigningParamIdentifier {
    /** Indicates the purpose of the parameter */
    paramIndicator: ParamIndicator;
    /** Parameter name */
    paramName: string;
}

/** Describes resource usage. */
export declare interface Usage {
    /**
     * Resource identifier.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /** An enum describing the unit of measurement. */
    unit: UsageUnit;
    /** The current value of the usage. */
    currentValue: number;
    /** The limit of usage. */
    limit: number;
    /** The name of the type of usage. */
    name: UsageName;
}

/** The usage names. */
export declare interface UsageName {
    /** A string describing the resource name. */
    value?: string;
    /** A localized string describing the resource name. */
    localizedValue?: string;
}

/** The list usages operation response. */
export declare interface UsagesListResult {
    /** The list of resource usages. */
    value?: Usage[];
    /** URL to get the next set of results. */
    nextLink?: string;
}

/**
 * Defines values for UsageUnit. \
 * {@link KnownUsageUnit} can be used interchangeably with UsageUnit,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Count**
 */
export declare type UsageUnit = string;

/** Defines the certificate source parameters using user's keyvault certificate for enabling SSL. */
export declare interface UserManagedHttpsParameters extends CustomDomainHttpsParameters {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    certificateSource: "AzureKeyVault";
    /** Defines the certificate source parameters using user's keyvault certificate for enabling SSL. */
    certificateSourceParameters: KeyVaultCertificateSourceParameters;
}

/** Interface representing a Validate. */
export declare interface Validate {
    /**
     * Validate a Secret in the profile.
     * @param validateSecretInput The Secret source.
     * @param options The options parameters.
     */
    secret(validateSecretInput: ValidateSecretInput, options?: ValidateSecretOptionalParams): Promise<ValidateSecretResponse>;
}

/** Input of the custom domain to be validated for DNS mapping. */
export declare interface ValidateCustomDomainInput {
    /** The host name of the custom domain. Must be a domain name. */
    hostName: string;
}

/** Output of custom domain validation. */
export declare interface ValidateCustomDomainOutput {
    /**
     * Indicates whether the custom domain is valid or not.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly customDomainValidated?: boolean;
    /**
     * The reason why the custom domain is not valid.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly reason?: string;
    /**
     * Error message describing why the custom domain is not valid.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
}

/** Input of the validate probe API. */
export declare interface ValidateProbeInput {
    /** The probe URL to validate. */
    probeURL: string;
}

/** Optional parameters. */
export declare interface ValidateProbeOptionalParams extends coreClient.OperationOptions {
}

/** Output of the validate probe API. */
export declare interface ValidateProbeOutput {
    /**
     * Indicates whether the probe URL is accepted or not.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly isValid?: boolean;
    /**
     * Specifies the error code when the probe url is not accepted.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly errorCode?: string;
    /**
     * The detailed error message describing why the probe URL is not accepted.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
}

/** Contains response data for the validateProbe operation. */
export declare type ValidateProbeResponse = ValidateProbeOutput;

/** Input of the secret to be validated. */
export declare interface ValidateSecretInput {
    /** The secret type. */
    secretType: SecretType;
    /** Resource reference to the Azure Key Vault secret. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{secretName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​ */
    secretSource: ResourceReference;
    /** Secret version, if customer is using a specific version. */
    secretVersion?: string;
}

/** Optional parameters. */
export declare interface ValidateSecretOptionalParams extends coreClient.OperationOptions {
}

/** Output of the validated secret. */
export declare interface ValidateSecretOutput {
    /** The validation status. */
    status?: Status;
    /** Detailed error message */
    message?: string;
}

/** Contains response data for the secret operation. */
export declare type ValidateSecretResponse = ValidateSecretOutput;

/** The validation token. */
export declare interface ValidationToken {
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly token?: string;
}

/**
 * Defines values for WafAction. \
 * {@link KnownWafAction} can be used interchangeably with WafAction,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **allow** \
 * **block** \
 * **log** \
 * **redirect**
 */
export declare type WafAction = string;

/**
 * Defines values for WafGranularity. \
 * {@link KnownWafGranularity} can be used interchangeably with WafGranularity,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **PT5M** \
 * **PT1H** \
 * **P1D**
 */
export declare type WafGranularity = string;

/**
 * Defines values for WafMatchVariable. \
 * {@link KnownWafMatchVariable} can be used interchangeably with WafMatchVariable,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **RemoteAddr** \
 * **SocketAddr** \
 * **RequestMethod** \
 * **RequestHeader** \
 * **RequestUri** \
 * **QueryString** \
 * **RequestBody** \
 * **Cookies** \
 * **PostArgs**
 */
export declare type WafMatchVariable = string;

/**
 * Defines values for WafMetric. \
 * {@link KnownWafMetric} can be used interchangeably with WafMetric,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **clientRequestCount**
 */
export declare type WafMetric = string;

/** Waf Metrics Response */
export declare interface WafMetricsResponse {
    dateTimeBegin?: Date;
    dateTimeEnd?: Date;
    granularity?: WafMetricsResponseGranularity;
    series?: WafMetricsResponseSeriesItem[];
}

/**
 * Defines values for WafMetricsResponseGranularity. \
 * {@link KnownWafMetricsResponseGranularity} can be used interchangeably with WafMetricsResponseGranularity,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **PT5M** \
 * **PT1H** \
 * **P1D**
 */
export declare type WafMetricsResponseGranularity = string;

export declare interface WafMetricsResponseSeriesItem {
    metric?: string;
    unit?: "count";
    groups?: WafMetricsResponseSeriesPropertiesItemsItem[];
    data?: Components18OrqelSchemasWafmetricsresponsePropertiesSeriesItemsPropertiesDataItems[];
}

export declare interface WafMetricsResponseSeriesPropertiesItemsItem {
    name?: string;
    value?: string;
}

/**
 * Defines values for WafRankingGroupBy. \
 * {@link KnownWafRankingGroupBy} can be used interchangeably with WafRankingGroupBy,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **httpStatusCode** \
 * **customDomain**
 */
export declare type WafRankingGroupBy = string;

/** Waf Rankings Response */
export declare interface WafRankingsResponse {
    dateTimeBegin?: Date;
    dateTimeEnd?: Date;
    groups?: string[];
    data?: WafRankingsResponseDataItem[];
}

export declare interface WafRankingsResponseDataItem {
    groupValues?: string[];
    metrics?: ComponentsKpo1PjSchemasWafrankingsresponsePropertiesDataItemsPropertiesMetricsItems[];
}

/**
 * Defines values for WafRankingType. \
 * {@link KnownWafRankingType} can be used interchangeably with WafRankingType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **action** \
 * **ruleGroup** \
 * **ruleId** \
 * **userAgent** \
 * **clientIp** \
 * **url** \
 * **countryOrRegion** \
 * **ruleType**
 */
export declare type WafRankingType = string;

/**
 * Defines values for WafRuleType. \
 * {@link KnownWafRuleType} can be used interchangeably with WafRuleType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **managed** \
 * **custom** \
 * **bot**
 */
export declare type WafRuleType = string;

export { }
