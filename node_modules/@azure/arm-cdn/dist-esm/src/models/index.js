/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
/** Known values of {@link ResourceType} that the service accepts. */
export var KnownResourceType;
(function (KnownResourceType) {
    /** MicrosoftCdnProfilesEndpoints */
    KnownResourceType["MicrosoftCdnProfilesEndpoints"] = "Microsoft.Cdn/Profiles/Endpoints";
    /** MicrosoftCdnProfilesAfdEndpoints */
    KnownResourceType["MicrosoftCdnProfilesAfdEndpoints"] = "Microsoft.Cdn/Profiles/AfdEndpoints";
})(KnownResourceType || (KnownResourceType = {}));
/** Known values of {@link AutoGeneratedDomainNameLabelScope} that the service accepts. */
export var KnownAutoGeneratedDomainNameLabelScope;
(function (KnownAutoGeneratedDomainNameLabelScope) {
    /** TenantReuse */
    KnownAutoGeneratedDomainNameLabelScope["TenantReuse"] = "TenantReuse";
    /** SubscriptionReuse */
    KnownAutoGeneratedDomainNameLabelScope["SubscriptionReuse"] = "SubscriptionReuse";
    /** ResourceGroupReuse */
    KnownAutoGeneratedDomainNameLabelScope["ResourceGroupReuse"] = "ResourceGroupReuse";
    /** NoReuse */
    KnownAutoGeneratedDomainNameLabelScope["NoReuse"] = "NoReuse";
})(KnownAutoGeneratedDomainNameLabelScope || (KnownAutoGeneratedDomainNameLabelScope = {}));
/** Known values of {@link UsageUnit} that the service accepts. */
export var KnownUsageUnit;
(function (KnownUsageUnit) {
    /** Count */
    KnownUsageUnit["Count"] = "Count";
})(KnownUsageUnit || (KnownUsageUnit = {}));
/** Known values of {@link DomainValidationState} that the service accepts. */
export var KnownDomainValidationState;
(function (KnownDomainValidationState) {
    /** Unknown */
    KnownDomainValidationState["Unknown"] = "Unknown";
    /** Submitting */
    KnownDomainValidationState["Submitting"] = "Submitting";
    /** Pending */
    KnownDomainValidationState["Pending"] = "Pending";
    /** Rejected */
    KnownDomainValidationState["Rejected"] = "Rejected";
    /** TimedOut */
    KnownDomainValidationState["TimedOut"] = "TimedOut";
    /** PendingRevalidation */
    KnownDomainValidationState["PendingRevalidation"] = "PendingRevalidation";
    /** Approved */
    KnownDomainValidationState["Approved"] = "Approved";
    /** RefreshingValidationToken */
    KnownDomainValidationState["RefreshingValidationToken"] = "RefreshingValidationToken";
    /** InternalError */
    KnownDomainValidationState["InternalError"] = "InternalError";
})(KnownDomainValidationState || (KnownDomainValidationState = {}));
/** Known values of {@link AfdCertificateType} that the service accepts. */
export var KnownAfdCertificateType;
(function (KnownAfdCertificateType) {
    /** CustomerCertificate */
    KnownAfdCertificateType["CustomerCertificate"] = "CustomerCertificate";
    /** ManagedCertificate */
    KnownAfdCertificateType["ManagedCertificate"] = "ManagedCertificate";
    /** AzureFirstPartyManagedCertificate */
    KnownAfdCertificateType["AzureFirstPartyManagedCertificate"] = "AzureFirstPartyManagedCertificate";
})(KnownAfdCertificateType || (KnownAfdCertificateType = {}));
/** Known values of {@link AfdProvisioningState} that the service accepts. */
export var KnownAfdProvisioningState;
(function (KnownAfdProvisioningState) {
    /** Succeeded */
    KnownAfdProvisioningState["Succeeded"] = "Succeeded";
    /** Failed */
    KnownAfdProvisioningState["Failed"] = "Failed";
    /** Updating */
    KnownAfdProvisioningState["Updating"] = "Updating";
    /** Deleting */
    KnownAfdProvisioningState["Deleting"] = "Deleting";
    /** Creating */
    KnownAfdProvisioningState["Creating"] = "Creating";
})(KnownAfdProvisioningState || (KnownAfdProvisioningState = {}));
/** Known values of {@link DeploymentStatus} that the service accepts. */
export var KnownDeploymentStatus;
(function (KnownDeploymentStatus) {
    /** NotStarted */
    KnownDeploymentStatus["NotStarted"] = "NotStarted";
    /** InProgress */
    KnownDeploymentStatus["InProgress"] = "InProgress";
    /** Succeeded */
    KnownDeploymentStatus["Succeeded"] = "Succeeded";
    /** Failed */
    KnownDeploymentStatus["Failed"] = "Failed";
})(KnownDeploymentStatus || (KnownDeploymentStatus = {}));
/** Known values of {@link IdentityType} that the service accepts. */
export var KnownIdentityType;
(function (KnownIdentityType) {
    /** User */
    KnownIdentityType["User"] = "user";
    /** Application */
    KnownIdentityType["Application"] = "application";
    /** ManagedIdentity */
    KnownIdentityType["ManagedIdentity"] = "managedIdentity";
    /** Key */
    KnownIdentityType["Key"] = "key";
})(KnownIdentityType || (KnownIdentityType = {}));
/** Known values of {@link EnabledState} that the service accepts. */
export var KnownEnabledState;
(function (KnownEnabledState) {
    /** Enabled */
    KnownEnabledState["Enabled"] = "Enabled";
    /** Disabled */
    KnownEnabledState["Disabled"] = "Disabled";
})(KnownEnabledState || (KnownEnabledState = {}));
/** Known values of {@link AFDEndpointProtocols} that the service accepts. */
export var KnownAFDEndpointProtocols;
(function (KnownAFDEndpointProtocols) {
    /** Http */
    KnownAFDEndpointProtocols["Http"] = "Http";
    /** Https */
    KnownAFDEndpointProtocols["Https"] = "Https";
})(KnownAFDEndpointProtocols || (KnownAFDEndpointProtocols = {}));
/** Known values of {@link AfdQueryStringCachingBehavior} that the service accepts. */
export var KnownAfdQueryStringCachingBehavior;
(function (KnownAfdQueryStringCachingBehavior) {
    /** IgnoreQueryString */
    KnownAfdQueryStringCachingBehavior["IgnoreQueryString"] = "IgnoreQueryString";
    /** UseQueryString */
    KnownAfdQueryStringCachingBehavior["UseQueryString"] = "UseQueryString";
    /** IgnoreSpecifiedQueryStrings */
    KnownAfdQueryStringCachingBehavior["IgnoreSpecifiedQueryStrings"] = "IgnoreSpecifiedQueryStrings";
    /** IncludeSpecifiedQueryStrings */
    KnownAfdQueryStringCachingBehavior["IncludeSpecifiedQueryStrings"] = "IncludeSpecifiedQueryStrings";
})(KnownAfdQueryStringCachingBehavior || (KnownAfdQueryStringCachingBehavior = {}));
/** Known values of {@link ForwardingProtocol} that the service accepts. */
export var KnownForwardingProtocol;
(function (KnownForwardingProtocol) {
    /** HttpOnly */
    KnownForwardingProtocol["HttpOnly"] = "HttpOnly";
    /** HttpsOnly */
    KnownForwardingProtocol["HttpsOnly"] = "HttpsOnly";
    /** MatchRequest */
    KnownForwardingProtocol["MatchRequest"] = "MatchRequest";
})(KnownForwardingProtocol || (KnownForwardingProtocol = {}));
/** Known values of {@link LinkToDefaultDomain} that the service accepts. */
export var KnownLinkToDefaultDomain;
(function (KnownLinkToDefaultDomain) {
    /** Enabled */
    KnownLinkToDefaultDomain["Enabled"] = "Enabled";
    /** Disabled */
    KnownLinkToDefaultDomain["Disabled"] = "Disabled";
})(KnownLinkToDefaultDomain || (KnownLinkToDefaultDomain = {}));
/** Known values of {@link HttpsRedirect} that the service accepts. */
export var KnownHttpsRedirect;
(function (KnownHttpsRedirect) {
    /** Enabled */
    KnownHttpsRedirect["Enabled"] = "Enabled";
    /** Disabled */
    KnownHttpsRedirect["Disabled"] = "Disabled";
})(KnownHttpsRedirect || (KnownHttpsRedirect = {}));
/** Known values of {@link MatchVariable} that the service accepts. */
export var KnownMatchVariable;
(function (KnownMatchVariable) {
    /** RemoteAddress */
    KnownMatchVariable["RemoteAddress"] = "RemoteAddress";
    /** RequestMethod */
    KnownMatchVariable["RequestMethod"] = "RequestMethod";
    /** QueryString */
    KnownMatchVariable["QueryString"] = "QueryString";
    /** PostArgs */
    KnownMatchVariable["PostArgs"] = "PostArgs";
    /** RequestUri */
    KnownMatchVariable["RequestUri"] = "RequestUri";
    /** RequestHeader */
    KnownMatchVariable["RequestHeader"] = "RequestHeader";
    /** RequestBody */
    KnownMatchVariable["RequestBody"] = "RequestBody";
    /** RequestScheme */
    KnownMatchVariable["RequestScheme"] = "RequestScheme";
    /** UrlPath */
    KnownMatchVariable["UrlPath"] = "UrlPath";
    /** UrlFileExtension */
    KnownMatchVariable["UrlFileExtension"] = "UrlFileExtension";
    /** UrlFileName */
    KnownMatchVariable["UrlFileName"] = "UrlFileName";
    /** HttpVersion */
    KnownMatchVariable["HttpVersion"] = "HttpVersion";
    /** Cookies */
    KnownMatchVariable["Cookies"] = "Cookies";
    /** IsDevice */
    KnownMatchVariable["IsDevice"] = "IsDevice";
    /** SocketAddr */
    KnownMatchVariable["SocketAddr"] = "SocketAddr";
    /** ClientPort */
    KnownMatchVariable["ClientPort"] = "ClientPort";
    /** ServerPort */
    KnownMatchVariable["ServerPort"] = "ServerPort";
    /** HostName */
    KnownMatchVariable["HostName"] = "HostName";
    /** SslProtocol */
    KnownMatchVariable["SslProtocol"] = "SslProtocol";
})(KnownMatchVariable || (KnownMatchVariable = {}));
/** Known values of {@link DeliveryRuleAction} that the service accepts. */
export var KnownDeliveryRuleAction;
(function (KnownDeliveryRuleAction) {
    /** CacheExpiration */
    KnownDeliveryRuleAction["CacheExpiration"] = "CacheExpiration";
    /** CacheKeyQueryString */
    KnownDeliveryRuleAction["CacheKeyQueryString"] = "CacheKeyQueryString";
    /** ModifyRequestHeader */
    KnownDeliveryRuleAction["ModifyRequestHeader"] = "ModifyRequestHeader";
    /** ModifyResponseHeader */
    KnownDeliveryRuleAction["ModifyResponseHeader"] = "ModifyResponseHeader";
    /** UrlRedirect */
    KnownDeliveryRuleAction["UrlRedirect"] = "UrlRedirect";
    /** UrlRewrite */
    KnownDeliveryRuleAction["UrlRewrite"] = "UrlRewrite";
    /** UrlSigning */
    KnownDeliveryRuleAction["UrlSigning"] = "UrlSigning";
    /** OriginGroupOverride */
    KnownDeliveryRuleAction["OriginGroupOverride"] = "OriginGroupOverride";
    /** RouteConfigurationOverride */
    KnownDeliveryRuleAction["RouteConfigurationOverride"] = "RouteConfigurationOverride";
})(KnownDeliveryRuleAction || (KnownDeliveryRuleAction = {}));
/** Known values of {@link MatchProcessingBehavior} that the service accepts. */
export var KnownMatchProcessingBehavior;
(function (KnownMatchProcessingBehavior) {
    /** Continue */
    KnownMatchProcessingBehavior["Continue"] = "Continue";
    /** Stop */
    KnownMatchProcessingBehavior["Stop"] = "Stop";
})(KnownMatchProcessingBehavior || (KnownMatchProcessingBehavior = {}));
/** Known values of {@link SecurityPolicyType} that the service accepts. */
export var KnownSecurityPolicyType;
(function (KnownSecurityPolicyType) {
    /** WebApplicationFirewall */
    KnownSecurityPolicyType["WebApplicationFirewall"] = "WebApplicationFirewall";
})(KnownSecurityPolicyType || (KnownSecurityPolicyType = {}));
/** Known values of {@link SecretType} that the service accepts. */
export var KnownSecretType;
(function (KnownSecretType) {
    /** UrlSigningKey */
    KnownSecretType["UrlSigningKey"] = "UrlSigningKey";
    /** CustomerCertificate */
    KnownSecretType["CustomerCertificate"] = "CustomerCertificate";
    /** ManagedCertificate */
    KnownSecretType["ManagedCertificate"] = "ManagedCertificate";
    /** AzureFirstPartyManagedCertificate */
    KnownSecretType["AzureFirstPartyManagedCertificate"] = "AzureFirstPartyManagedCertificate";
})(KnownSecretType || (KnownSecretType = {}));
/** Known values of {@link Status} that the service accepts. */
export var KnownStatus;
(function (KnownStatus) {
    /** Valid */
    KnownStatus["Valid"] = "Valid";
    /** Invalid */
    KnownStatus["Invalid"] = "Invalid";
    /** AccessDenied */
    KnownStatus["AccessDenied"] = "AccessDenied";
    /** CertificateExpired */
    KnownStatus["CertificateExpired"] = "CertificateExpired";
})(KnownStatus || (KnownStatus = {}));
/** Known values of {@link LogMetric} that the service accepts. */
export var KnownLogMetric;
(function (KnownLogMetric) {
    /** ClientRequestCount */
    KnownLogMetric["ClientRequestCount"] = "clientRequestCount";
    /** ClientRequestTraffic */
    KnownLogMetric["ClientRequestTraffic"] = "clientRequestTraffic";
    /** ClientRequestBandwidth */
    KnownLogMetric["ClientRequestBandwidth"] = "clientRequestBandwidth";
    /** OriginRequestTraffic */
    KnownLogMetric["OriginRequestTraffic"] = "originRequestTraffic";
    /** OriginRequestBandwidth */
    KnownLogMetric["OriginRequestBandwidth"] = "originRequestBandwidth";
    /** TotalLatency */
    KnownLogMetric["TotalLatency"] = "totalLatency";
})(KnownLogMetric || (KnownLogMetric = {}));
/** Known values of {@link LogMetricsGranularity} that the service accepts. */
export var KnownLogMetricsGranularity;
(function (KnownLogMetricsGranularity) {
    /** PT5M */
    KnownLogMetricsGranularity["PT5M"] = "PT5M";
    /** PT1H */
    KnownLogMetricsGranularity["PT1H"] = "PT1H";
    /** P1D */
    KnownLogMetricsGranularity["P1D"] = "P1D";
})(KnownLogMetricsGranularity || (KnownLogMetricsGranularity = {}));
/** Known values of {@link LogMetricsGroupBy} that the service accepts. */
export var KnownLogMetricsGroupBy;
(function (KnownLogMetricsGroupBy) {
    /** HttpStatusCode */
    KnownLogMetricsGroupBy["HttpStatusCode"] = "httpStatusCode";
    /** Protocol */
    KnownLogMetricsGroupBy["Protocol"] = "protocol";
    /** CacheStatus */
    KnownLogMetricsGroupBy["CacheStatus"] = "cacheStatus";
    /** CountryOrRegion */
    KnownLogMetricsGroupBy["CountryOrRegion"] = "countryOrRegion";
    /** CustomDomain */
    KnownLogMetricsGroupBy["CustomDomain"] = "customDomain";
})(KnownLogMetricsGroupBy || (KnownLogMetricsGroupBy = {}));
/** Known values of {@link MetricsResponseGranularity} that the service accepts. */
export var KnownMetricsResponseGranularity;
(function (KnownMetricsResponseGranularity) {
    /** PT5M */
    KnownMetricsResponseGranularity["PT5M"] = "PT5M";
    /** PT1H */
    KnownMetricsResponseGranularity["PT1H"] = "PT1H";
    /** P1D */
    KnownMetricsResponseGranularity["P1D"] = "P1D";
})(KnownMetricsResponseGranularity || (KnownMetricsResponseGranularity = {}));
/** Known values of {@link MetricsResponseSeriesItemUnit} that the service accepts. */
export var KnownMetricsResponseSeriesItemUnit;
(function (KnownMetricsResponseSeriesItemUnit) {
    /** Count */
    KnownMetricsResponseSeriesItemUnit["Count"] = "count";
    /** Bytes */
    KnownMetricsResponseSeriesItemUnit["Bytes"] = "bytes";
    /** BitsPerSecond */
    KnownMetricsResponseSeriesItemUnit["BitsPerSecond"] = "bitsPerSecond";
    /** MilliSeconds */
    KnownMetricsResponseSeriesItemUnit["MilliSeconds"] = "milliSeconds";
})(KnownMetricsResponseSeriesItemUnit || (KnownMetricsResponseSeriesItemUnit = {}));
/** Known values of {@link LogRanking} that the service accepts. */
export var KnownLogRanking;
(function (KnownLogRanking) {
    /** Url */
    KnownLogRanking["Url"] = "url";
    /** Referrer */
    KnownLogRanking["Referrer"] = "referrer";
    /** Browser */
    KnownLogRanking["Browser"] = "browser";
    /** UserAgent */
    KnownLogRanking["UserAgent"] = "userAgent";
    /** CountryOrRegion */
    KnownLogRanking["CountryOrRegion"] = "countryOrRegion";
})(KnownLogRanking || (KnownLogRanking = {}));
/** Known values of {@link LogRankingMetric} that the service accepts. */
export var KnownLogRankingMetric;
(function (KnownLogRankingMetric) {
    /** ClientRequestCount */
    KnownLogRankingMetric["ClientRequestCount"] = "clientRequestCount";
    /** ClientRequestTraffic */
    KnownLogRankingMetric["ClientRequestTraffic"] = "clientRequestTraffic";
    /** HitCount */
    KnownLogRankingMetric["HitCount"] = "hitCount";
    /** MissCount */
    KnownLogRankingMetric["MissCount"] = "missCount";
    /** UserErrorCount */
    KnownLogRankingMetric["UserErrorCount"] = "userErrorCount";
    /** ErrorCount */
    KnownLogRankingMetric["ErrorCount"] = "errorCount";
})(KnownLogRankingMetric || (KnownLogRankingMetric = {}));
/** Known values of {@link WafMetric} that the service accepts. */
export var KnownWafMetric;
(function (KnownWafMetric) {
    /** ClientRequestCount */
    KnownWafMetric["ClientRequestCount"] = "clientRequestCount";
})(KnownWafMetric || (KnownWafMetric = {}));
/** Known values of {@link WafGranularity} that the service accepts. */
export var KnownWafGranularity;
(function (KnownWafGranularity) {
    /** PT5M */
    KnownWafGranularity["PT5M"] = "PT5M";
    /** PT1H */
    KnownWafGranularity["PT1H"] = "PT1H";
    /** P1D */
    KnownWafGranularity["P1D"] = "P1D";
})(KnownWafGranularity || (KnownWafGranularity = {}));
/** Known values of {@link WafAction} that the service accepts. */
export var KnownWafAction;
(function (KnownWafAction) {
    /** Allow */
    KnownWafAction["Allow"] = "allow";
    /** Block */
    KnownWafAction["Block"] = "block";
    /** Log */
    KnownWafAction["Log"] = "log";
    /** Redirect */
    KnownWafAction["Redirect"] = "redirect";
})(KnownWafAction || (KnownWafAction = {}));
/** Known values of {@link WafRankingGroupBy} that the service accepts. */
export var KnownWafRankingGroupBy;
(function (KnownWafRankingGroupBy) {
    /** HttpStatusCode */
    KnownWafRankingGroupBy["HttpStatusCode"] = "httpStatusCode";
    /** CustomDomain */
    KnownWafRankingGroupBy["CustomDomain"] = "customDomain";
})(KnownWafRankingGroupBy || (KnownWafRankingGroupBy = {}));
/** Known values of {@link WafRuleType} that the service accepts. */
export var KnownWafRuleType;
(function (KnownWafRuleType) {
    /** Managed */
    KnownWafRuleType["Managed"] = "managed";
    /** Custom */
    KnownWafRuleType["Custom"] = "custom";
    /** Bot */
    KnownWafRuleType["Bot"] = "bot";
})(KnownWafRuleType || (KnownWafRuleType = {}));
/** Known values of {@link WafMetricsResponseGranularity} that the service accepts. */
export var KnownWafMetricsResponseGranularity;
(function (KnownWafMetricsResponseGranularity) {
    /** PT5M */
    KnownWafMetricsResponseGranularity["PT5M"] = "PT5M";
    /** PT1H */
    KnownWafMetricsResponseGranularity["PT1H"] = "PT1H";
    /** P1D */
    KnownWafMetricsResponseGranularity["P1D"] = "P1D";
})(KnownWafMetricsResponseGranularity || (KnownWafMetricsResponseGranularity = {}));
/** Known values of {@link WafRankingType} that the service accepts. */
export var KnownWafRankingType;
(function (KnownWafRankingType) {
    /** Action */
    KnownWafRankingType["Action"] = "action";
    /** RuleGroup */
    KnownWafRankingType["RuleGroup"] = "ruleGroup";
    /** RuleId */
    KnownWafRankingType["RuleId"] = "ruleId";
    /** UserAgent */
    KnownWafRankingType["UserAgent"] = "userAgent";
    /** ClientIp */
    KnownWafRankingType["ClientIp"] = "clientIp";
    /** Url */
    KnownWafRankingType["Url"] = "url";
    /** CountryOrRegion */
    KnownWafRankingType["CountryOrRegion"] = "countryOrRegion";
    /** RuleType */
    KnownWafRankingType["RuleType"] = "ruleType";
})(KnownWafRankingType || (KnownWafRankingType = {}));
/** Known values of {@link SkuName} that the service accepts. */
export var KnownSkuName;
(function (KnownSkuName) {
    /** StandardVerizon */
    KnownSkuName["StandardVerizon"] = "Standard_Verizon";
    /** PremiumVerizon */
    KnownSkuName["PremiumVerizon"] = "Premium_Verizon";
    /** CustomVerizon */
    KnownSkuName["CustomVerizon"] = "Custom_Verizon";
    /** StandardAkamai */
    KnownSkuName["StandardAkamai"] = "Standard_Akamai";
    /** StandardChinaCdn */
    KnownSkuName["StandardChinaCdn"] = "Standard_ChinaCdn";
    /** StandardMicrosoft */
    KnownSkuName["StandardMicrosoft"] = "Standard_Microsoft";
    /** StandardAzureFrontDoor */
    KnownSkuName["StandardAzureFrontDoor"] = "Standard_AzureFrontDoor";
    /** PremiumAzureFrontDoor */
    KnownSkuName["PremiumAzureFrontDoor"] = "Premium_AzureFrontDoor";
    /** Standard955BandWidthChinaCdn */
    KnownSkuName["Standard955BandWidthChinaCdn"] = "Standard_955BandWidth_ChinaCdn";
    /** StandardAvgBandWidthChinaCdn */
    KnownSkuName["StandardAvgBandWidthChinaCdn"] = "Standard_AvgBandWidth_ChinaCdn";
    /** StandardPlusChinaCdn */
    KnownSkuName["StandardPlusChinaCdn"] = "StandardPlus_ChinaCdn";
    /** StandardPlus955BandWidthChinaCdn */
    KnownSkuName["StandardPlus955BandWidthChinaCdn"] = "StandardPlus_955BandWidth_ChinaCdn";
    /** StandardPlusAvgBandWidthChinaCdn */
    KnownSkuName["StandardPlusAvgBandWidthChinaCdn"] = "StandardPlus_AvgBandWidth_ChinaCdn";
})(KnownSkuName || (KnownSkuName = {}));
/** Known values of {@link ProfileResourceState} that the service accepts. */
export var KnownProfileResourceState;
(function (KnownProfileResourceState) {
    /** Creating */
    KnownProfileResourceState["Creating"] = "Creating";
    /** Active */
    KnownProfileResourceState["Active"] = "Active";
    /** Deleting */
    KnownProfileResourceState["Deleting"] = "Deleting";
    /** Disabled */
    KnownProfileResourceState["Disabled"] = "Disabled";
})(KnownProfileResourceState || (KnownProfileResourceState = {}));
/** Known values of {@link ProfileProvisioningState} that the service accepts. */
export var KnownProfileProvisioningState;
(function (KnownProfileProvisioningState) {
    /** Succeeded */
    KnownProfileProvisioningState["Succeeded"] = "Succeeded";
    /** Failed */
    KnownProfileProvisioningState["Failed"] = "Failed";
    /** Updating */
    KnownProfileProvisioningState["Updating"] = "Updating";
    /** Deleting */
    KnownProfileProvisioningState["Deleting"] = "Deleting";
    /** Creating */
    KnownProfileProvisioningState["Creating"] = "Creating";
})(KnownProfileProvisioningState || (KnownProfileProvisioningState = {}));
/** Known values of {@link OptimizationType} that the service accepts. */
export var KnownOptimizationType;
(function (KnownOptimizationType) {
    /** GeneralWebDelivery */
    KnownOptimizationType["GeneralWebDelivery"] = "GeneralWebDelivery";
    /** GeneralMediaStreaming */
    KnownOptimizationType["GeneralMediaStreaming"] = "GeneralMediaStreaming";
    /** VideoOnDemandMediaStreaming */
    KnownOptimizationType["VideoOnDemandMediaStreaming"] = "VideoOnDemandMediaStreaming";
    /** LargeFileDownload */
    KnownOptimizationType["LargeFileDownload"] = "LargeFileDownload";
    /** DynamicSiteAcceleration */
    KnownOptimizationType["DynamicSiteAcceleration"] = "DynamicSiteAcceleration";
})(KnownOptimizationType || (KnownOptimizationType = {}));
/** Known values of {@link ResourceUsageUnit} that the service accepts. */
export var KnownResourceUsageUnit;
(function (KnownResourceUsageUnit) {
    /** Count */
    KnownResourceUsageUnit["Count"] = "count";
})(KnownResourceUsageUnit || (KnownResourceUsageUnit = {}));
/** Known values of {@link PrivateEndpointStatus} that the service accepts. */
export var KnownPrivateEndpointStatus;
(function (KnownPrivateEndpointStatus) {
    /** Pending */
    KnownPrivateEndpointStatus["Pending"] = "Pending";
    /** Approved */
    KnownPrivateEndpointStatus["Approved"] = "Approved";
    /** Rejected */
    KnownPrivateEndpointStatus["Rejected"] = "Rejected";
    /** Disconnected */
    KnownPrivateEndpointStatus["Disconnected"] = "Disconnected";
    /** Timeout */
    KnownPrivateEndpointStatus["Timeout"] = "Timeout";
})(KnownPrivateEndpointStatus || (KnownPrivateEndpointStatus = {}));
/** Known values of {@link EndpointResourceState} that the service accepts. */
export var KnownEndpointResourceState;
(function (KnownEndpointResourceState) {
    /** Creating */
    KnownEndpointResourceState["Creating"] = "Creating";
    /** Deleting */
    KnownEndpointResourceState["Deleting"] = "Deleting";
    /** Running */
    KnownEndpointResourceState["Running"] = "Running";
    /** Starting */
    KnownEndpointResourceState["Starting"] = "Starting";
    /** Stopped */
    KnownEndpointResourceState["Stopped"] = "Stopped";
    /** Stopping */
    KnownEndpointResourceState["Stopping"] = "Stopping";
})(KnownEndpointResourceState || (KnownEndpointResourceState = {}));
/** Known values of {@link EndpointProvisioningState} that the service accepts. */
export var KnownEndpointProvisioningState;
(function (KnownEndpointProvisioningState) {
    /** Succeeded */
    KnownEndpointProvisioningState["Succeeded"] = "Succeeded";
    /** Failed */
    KnownEndpointProvisioningState["Failed"] = "Failed";
    /** Updating */
    KnownEndpointProvisioningState["Updating"] = "Updating";
    /** Deleting */
    KnownEndpointProvisioningState["Deleting"] = "Deleting";
    /** Creating */
    KnownEndpointProvisioningState["Creating"] = "Creating";
})(KnownEndpointProvisioningState || (KnownEndpointProvisioningState = {}));
/** Known values of {@link OriginResourceState} that the service accepts. */
export var KnownOriginResourceState;
(function (KnownOriginResourceState) {
    /** Creating */
    KnownOriginResourceState["Creating"] = "Creating";
    /** Active */
    KnownOriginResourceState["Active"] = "Active";
    /** Deleting */
    KnownOriginResourceState["Deleting"] = "Deleting";
})(KnownOriginResourceState || (KnownOriginResourceState = {}));
/** Known values of {@link OriginProvisioningState} that the service accepts. */
export var KnownOriginProvisioningState;
(function (KnownOriginProvisioningState) {
    /** Succeeded */
    KnownOriginProvisioningState["Succeeded"] = "Succeeded";
    /** Failed */
    KnownOriginProvisioningState["Failed"] = "Failed";
    /** Updating */
    KnownOriginProvisioningState["Updating"] = "Updating";
    /** Deleting */
    KnownOriginProvisioningState["Deleting"] = "Deleting";
    /** Creating */
    KnownOriginProvisioningState["Creating"] = "Creating";
})(KnownOriginProvisioningState || (KnownOriginProvisioningState = {}));
/** Known values of {@link OriginGroupResourceState} that the service accepts. */
export var KnownOriginGroupResourceState;
(function (KnownOriginGroupResourceState) {
    /** Creating */
    KnownOriginGroupResourceState["Creating"] = "Creating";
    /** Active */
    KnownOriginGroupResourceState["Active"] = "Active";
    /** Deleting */
    KnownOriginGroupResourceState["Deleting"] = "Deleting";
})(KnownOriginGroupResourceState || (KnownOriginGroupResourceState = {}));
/** Known values of {@link OriginGroupProvisioningState} that the service accepts. */
export var KnownOriginGroupProvisioningState;
(function (KnownOriginGroupProvisioningState) {
    /** Succeeded */
    KnownOriginGroupProvisioningState["Succeeded"] = "Succeeded";
    /** Failed */
    KnownOriginGroupProvisioningState["Failed"] = "Failed";
    /** Updating */
    KnownOriginGroupProvisioningState["Updating"] = "Updating";
    /** Deleting */
    KnownOriginGroupProvisioningState["Deleting"] = "Deleting";
    /** Creating */
    KnownOriginGroupProvisioningState["Creating"] = "Creating";
})(KnownOriginGroupProvisioningState || (KnownOriginGroupProvisioningState = {}));
/** Known values of {@link CustomDomainResourceState} that the service accepts. */
export var KnownCustomDomainResourceState;
(function (KnownCustomDomainResourceState) {
    /** Creating */
    KnownCustomDomainResourceState["Creating"] = "Creating";
    /** Active */
    KnownCustomDomainResourceState["Active"] = "Active";
    /** Deleting */
    KnownCustomDomainResourceState["Deleting"] = "Deleting";
})(KnownCustomDomainResourceState || (KnownCustomDomainResourceState = {}));
/** Known values of {@link CustomHttpsProvisioningState} that the service accepts. */
export var KnownCustomHttpsProvisioningState;
(function (KnownCustomHttpsProvisioningState) {
    /** Enabling */
    KnownCustomHttpsProvisioningState["Enabling"] = "Enabling";
    /** Enabled */
    KnownCustomHttpsProvisioningState["Enabled"] = "Enabled";
    /** Disabling */
    KnownCustomHttpsProvisioningState["Disabling"] = "Disabling";
    /** Disabled */
    KnownCustomHttpsProvisioningState["Disabled"] = "Disabled";
    /** Failed */
    KnownCustomHttpsProvisioningState["Failed"] = "Failed";
})(KnownCustomHttpsProvisioningState || (KnownCustomHttpsProvisioningState = {}));
/** Known values of {@link CustomHttpsProvisioningSubstate} that the service accepts. */
export var KnownCustomHttpsProvisioningSubstate;
(function (KnownCustomHttpsProvisioningSubstate) {
    /** SubmittingDomainControlValidationRequest */
    KnownCustomHttpsProvisioningSubstate["SubmittingDomainControlValidationRequest"] = "SubmittingDomainControlValidationRequest";
    /** PendingDomainControlValidationREquestApproval */
    KnownCustomHttpsProvisioningSubstate["PendingDomainControlValidationREquestApproval"] = "PendingDomainControlValidationREquestApproval";
    /** DomainControlValidationRequestApproved */
    KnownCustomHttpsProvisioningSubstate["DomainControlValidationRequestApproved"] = "DomainControlValidationRequestApproved";
    /** DomainControlValidationRequestRejected */
    KnownCustomHttpsProvisioningSubstate["DomainControlValidationRequestRejected"] = "DomainControlValidationRequestRejected";
    /** DomainControlValidationRequestTimedOut */
    KnownCustomHttpsProvisioningSubstate["DomainControlValidationRequestTimedOut"] = "DomainControlValidationRequestTimedOut";
    /** IssuingCertificate */
    KnownCustomHttpsProvisioningSubstate["IssuingCertificate"] = "IssuingCertificate";
    /** DeployingCertificate */
    KnownCustomHttpsProvisioningSubstate["DeployingCertificate"] = "DeployingCertificate";
    /** CertificateDeployed */
    KnownCustomHttpsProvisioningSubstate["CertificateDeployed"] = "CertificateDeployed";
    /** DeletingCertificate */
    KnownCustomHttpsProvisioningSubstate["DeletingCertificate"] = "DeletingCertificate";
    /** CertificateDeleted */
    KnownCustomHttpsProvisioningSubstate["CertificateDeleted"] = "CertificateDeleted";
})(KnownCustomHttpsProvisioningSubstate || (KnownCustomHttpsProvisioningSubstate = {}));
/** Known values of {@link CertificateSource} that the service accepts. */
export var KnownCertificateSource;
(function (KnownCertificateSource) {
    /** AzureKeyVault */
    KnownCertificateSource["AzureKeyVault"] = "AzureKeyVault";
    /** Cdn */
    KnownCertificateSource["Cdn"] = "Cdn";
})(KnownCertificateSource || (KnownCertificateSource = {}));
/** Known values of {@link ProtocolType} that the service accepts. */
export var KnownProtocolType;
(function (KnownProtocolType) {
    /** ServerNameIndication */
    KnownProtocolType["ServerNameIndication"] = "ServerNameIndication";
    /** IPBased */
    KnownProtocolType["IPBased"] = "IPBased";
})(KnownProtocolType || (KnownProtocolType = {}));
/** Known values of {@link PolicyEnabledState} that the service accepts. */
export var KnownPolicyEnabledState;
(function (KnownPolicyEnabledState) {
    /** Disabled */
    KnownPolicyEnabledState["Disabled"] = "Disabled";
    /** Enabled */
    KnownPolicyEnabledState["Enabled"] = "Enabled";
})(KnownPolicyEnabledState || (KnownPolicyEnabledState = {}));
/** Known values of {@link PolicyMode} that the service accepts. */
export var KnownPolicyMode;
(function (KnownPolicyMode) {
    /** Prevention */
    KnownPolicyMode["Prevention"] = "Prevention";
    /** Detection */
    KnownPolicyMode["Detection"] = "Detection";
})(KnownPolicyMode || (KnownPolicyMode = {}));
/** Known values of {@link PolicySettingsDefaultCustomBlockResponseStatusCode} that the service accepts. */
export var KnownPolicySettingsDefaultCustomBlockResponseStatusCode;
(function (KnownPolicySettingsDefaultCustomBlockResponseStatusCode) {
    /** TwoHundred */
    KnownPolicySettingsDefaultCustomBlockResponseStatusCode[KnownPolicySettingsDefaultCustomBlockResponseStatusCode["TwoHundred"] = 200] = "TwoHundred";
    /** FourHundredThree */
    KnownPolicySettingsDefaultCustomBlockResponseStatusCode[KnownPolicySettingsDefaultCustomBlockResponseStatusCode["FourHundredThree"] = 403] = "FourHundredThree";
    /** FourHundredFive */
    KnownPolicySettingsDefaultCustomBlockResponseStatusCode[KnownPolicySettingsDefaultCustomBlockResponseStatusCode["FourHundredFive"] = 405] = "FourHundredFive";
    /** FourHundredSix */
    KnownPolicySettingsDefaultCustomBlockResponseStatusCode[KnownPolicySettingsDefaultCustomBlockResponseStatusCode["FourHundredSix"] = 406] = "FourHundredSix";
    /** FourHundredTwentyNine */
    KnownPolicySettingsDefaultCustomBlockResponseStatusCode[KnownPolicySettingsDefaultCustomBlockResponseStatusCode["FourHundredTwentyNine"] = 429] = "FourHundredTwentyNine";
})(KnownPolicySettingsDefaultCustomBlockResponseStatusCode || (KnownPolicySettingsDefaultCustomBlockResponseStatusCode = {}));
/** Known values of {@link CustomRuleEnabledState} that the service accepts. */
export var KnownCustomRuleEnabledState;
(function (KnownCustomRuleEnabledState) {
    /** Disabled */
    KnownCustomRuleEnabledState["Disabled"] = "Disabled";
    /** Enabled */
    KnownCustomRuleEnabledState["Enabled"] = "Enabled";
})(KnownCustomRuleEnabledState || (KnownCustomRuleEnabledState = {}));
/** Known values of {@link WafMatchVariable} that the service accepts. */
export var KnownWafMatchVariable;
(function (KnownWafMatchVariable) {
    /** RemoteAddr */
    KnownWafMatchVariable["RemoteAddr"] = "RemoteAddr";
    /** SocketAddr */
    KnownWafMatchVariable["SocketAddr"] = "SocketAddr";
    /** RequestMethod */
    KnownWafMatchVariable["RequestMethod"] = "RequestMethod";
    /** RequestHeader */
    KnownWafMatchVariable["RequestHeader"] = "RequestHeader";
    /** RequestUri */
    KnownWafMatchVariable["RequestUri"] = "RequestUri";
    /** QueryString */
    KnownWafMatchVariable["QueryString"] = "QueryString";
    /** RequestBody */
    KnownWafMatchVariable["RequestBody"] = "RequestBody";
    /** Cookies */
    KnownWafMatchVariable["Cookies"] = "Cookies";
    /** PostArgs */
    KnownWafMatchVariable["PostArgs"] = "PostArgs";
})(KnownWafMatchVariable || (KnownWafMatchVariable = {}));
/** Known values of {@link Operator} that the service accepts. */
export var KnownOperator;
(function (KnownOperator) {
    /** Any */
    KnownOperator["Any"] = "Any";
    /** IPMatch */
    KnownOperator["IPMatch"] = "IPMatch";
    /** GeoMatch */
    KnownOperator["GeoMatch"] = "GeoMatch";
    /** Equal */
    KnownOperator["Equal"] = "Equal";
    /** Contains */
    KnownOperator["Contains"] = "Contains";
    /** LessThan */
    KnownOperator["LessThan"] = "LessThan";
    /** GreaterThan */
    KnownOperator["GreaterThan"] = "GreaterThan";
    /** LessThanOrEqual */
    KnownOperator["LessThanOrEqual"] = "LessThanOrEqual";
    /** GreaterThanOrEqual */
    KnownOperator["GreaterThanOrEqual"] = "GreaterThanOrEqual";
    /** BeginsWith */
    KnownOperator["BeginsWith"] = "BeginsWith";
    /** EndsWith */
    KnownOperator["EndsWith"] = "EndsWith";
    /** RegEx */
    KnownOperator["RegEx"] = "RegEx";
})(KnownOperator || (KnownOperator = {}));
/** Known values of {@link TransformType} that the service accepts. */
export var KnownTransformType;
(function (KnownTransformType) {
    /** Lowercase */
    KnownTransformType["Lowercase"] = "Lowercase";
    /** Uppercase */
    KnownTransformType["Uppercase"] = "Uppercase";
    /** Trim */
    KnownTransformType["Trim"] = "Trim";
    /** UrlDecode */
    KnownTransformType["UrlDecode"] = "UrlDecode";
    /** UrlEncode */
    KnownTransformType["UrlEncode"] = "UrlEncode";
    /** RemoveNulls */
    KnownTransformType["RemoveNulls"] = "RemoveNulls";
})(KnownTransformType || (KnownTransformType = {}));
/** Known values of {@link ActionType} that the service accepts. */
export var KnownActionType;
(function (KnownActionType) {
    /** Allow */
    KnownActionType["Allow"] = "Allow";
    /** Block */
    KnownActionType["Block"] = "Block";
    /** Log */
    KnownActionType["Log"] = "Log";
    /** Redirect */
    KnownActionType["Redirect"] = "Redirect";
})(KnownActionType || (KnownActionType = {}));
/** Known values of {@link ManagedRuleEnabledState} that the service accepts. */
export var KnownManagedRuleEnabledState;
(function (KnownManagedRuleEnabledState) {
    /** Disabled */
    KnownManagedRuleEnabledState["Disabled"] = "Disabled";
    /** Enabled */
    KnownManagedRuleEnabledState["Enabled"] = "Enabled";
})(KnownManagedRuleEnabledState || (KnownManagedRuleEnabledState = {}));
/** Known values of {@link ProvisioningState} that the service accepts. */
export var KnownProvisioningState;
(function (KnownProvisioningState) {
    /** Creating */
    KnownProvisioningState["Creating"] = "Creating";
    /** Succeeded */
    KnownProvisioningState["Succeeded"] = "Succeeded";
    /** Failed */
    KnownProvisioningState["Failed"] = "Failed";
})(KnownProvisioningState || (KnownProvisioningState = {}));
/** Known values of {@link PolicyResourceState} that the service accepts. */
export var KnownPolicyResourceState;
(function (KnownPolicyResourceState) {
    /** Creating */
    KnownPolicyResourceState["Creating"] = "Creating";
    /** Enabling */
    KnownPolicyResourceState["Enabling"] = "Enabling";
    /** Enabled */
    KnownPolicyResourceState["Enabled"] = "Enabled";
    /** Disabling */
    KnownPolicyResourceState["Disabling"] = "Disabling";
    /** Disabled */
    KnownPolicyResourceState["Disabled"] = "Disabled";
    /** Deleting */
    KnownPolicyResourceState["Deleting"] = "Deleting";
})(KnownPolicyResourceState || (KnownPolicyResourceState = {}));
/** Known values of {@link RemoteAddressOperator} that the service accepts. */
export var KnownRemoteAddressOperator;
(function (KnownRemoteAddressOperator) {
    /** Any */
    KnownRemoteAddressOperator["Any"] = "Any";
    /** IPMatch */
    KnownRemoteAddressOperator["IPMatch"] = "IPMatch";
    /** GeoMatch */
    KnownRemoteAddressOperator["GeoMatch"] = "GeoMatch";
})(KnownRemoteAddressOperator || (KnownRemoteAddressOperator = {}));
/** Known values of {@link Transform} that the service accepts. */
export var KnownTransform;
(function (KnownTransform) {
    /** Lowercase */
    KnownTransform["Lowercase"] = "Lowercase";
    /** Uppercase */
    KnownTransform["Uppercase"] = "Uppercase";
    /** Trim */
    KnownTransform["Trim"] = "Trim";
    /** UrlDecode */
    KnownTransform["UrlDecode"] = "UrlDecode";
    /** UrlEncode */
    KnownTransform["UrlEncode"] = "UrlEncode";
    /** RemoveNulls */
    KnownTransform["RemoveNulls"] = "RemoveNulls";
})(KnownTransform || (KnownTransform = {}));
/** Known values of {@link RequestMethodOperator} that the service accepts. */
export var KnownRequestMethodOperator;
(function (KnownRequestMethodOperator) {
    /** Equal */
    KnownRequestMethodOperator["Equal"] = "Equal";
})(KnownRequestMethodOperator || (KnownRequestMethodOperator = {}));
/** Known values of {@link RequestMethodMatchConditionParametersMatchValuesItem} that the service accepts. */
export var KnownRequestMethodMatchConditionParametersMatchValuesItem;
(function (KnownRequestMethodMatchConditionParametersMatchValuesItem) {
    /** GET */
    KnownRequestMethodMatchConditionParametersMatchValuesItem["GET"] = "GET";
    /** Head */
    KnownRequestMethodMatchConditionParametersMatchValuesItem["Head"] = "HEAD";
    /** Post */
    KnownRequestMethodMatchConditionParametersMatchValuesItem["Post"] = "POST";
    /** PUT */
    KnownRequestMethodMatchConditionParametersMatchValuesItem["PUT"] = "PUT";
    /** Delete */
    KnownRequestMethodMatchConditionParametersMatchValuesItem["Delete"] = "DELETE";
    /** Options */
    KnownRequestMethodMatchConditionParametersMatchValuesItem["Options"] = "OPTIONS";
    /** Trace */
    KnownRequestMethodMatchConditionParametersMatchValuesItem["Trace"] = "TRACE";
})(KnownRequestMethodMatchConditionParametersMatchValuesItem || (KnownRequestMethodMatchConditionParametersMatchValuesItem = {}));
/** Known values of {@link QueryStringOperator} that the service accepts. */
export var KnownQueryStringOperator;
(function (KnownQueryStringOperator) {
    /** Any */
    KnownQueryStringOperator["Any"] = "Any";
    /** Equal */
    KnownQueryStringOperator["Equal"] = "Equal";
    /** Contains */
    KnownQueryStringOperator["Contains"] = "Contains";
    /** BeginsWith */
    KnownQueryStringOperator["BeginsWith"] = "BeginsWith";
    /** EndsWith */
    KnownQueryStringOperator["EndsWith"] = "EndsWith";
    /** LessThan */
    KnownQueryStringOperator["LessThan"] = "LessThan";
    /** LessThanOrEqual */
    KnownQueryStringOperator["LessThanOrEqual"] = "LessThanOrEqual";
    /** GreaterThan */
    KnownQueryStringOperator["GreaterThan"] = "GreaterThan";
    /** GreaterThanOrEqual */
    KnownQueryStringOperator["GreaterThanOrEqual"] = "GreaterThanOrEqual";
    /** RegEx */
    KnownQueryStringOperator["RegEx"] = "RegEx";
})(KnownQueryStringOperator || (KnownQueryStringOperator = {}));
/** Known values of {@link PostArgsOperator} that the service accepts. */
export var KnownPostArgsOperator;
(function (KnownPostArgsOperator) {
    /** Any */
    KnownPostArgsOperator["Any"] = "Any";
    /** Equal */
    KnownPostArgsOperator["Equal"] = "Equal";
    /** Contains */
    KnownPostArgsOperator["Contains"] = "Contains";
    /** BeginsWith */
    KnownPostArgsOperator["BeginsWith"] = "BeginsWith";
    /** EndsWith */
    KnownPostArgsOperator["EndsWith"] = "EndsWith";
    /** LessThan */
    KnownPostArgsOperator["LessThan"] = "LessThan";
    /** LessThanOrEqual */
    KnownPostArgsOperator["LessThanOrEqual"] = "LessThanOrEqual";
    /** GreaterThan */
    KnownPostArgsOperator["GreaterThan"] = "GreaterThan";
    /** GreaterThanOrEqual */
    KnownPostArgsOperator["GreaterThanOrEqual"] = "GreaterThanOrEqual";
    /** RegEx */
    KnownPostArgsOperator["RegEx"] = "RegEx";
})(KnownPostArgsOperator || (KnownPostArgsOperator = {}));
/** Known values of {@link RequestUriOperator} that the service accepts. */
export var KnownRequestUriOperator;
(function (KnownRequestUriOperator) {
    /** Any */
    KnownRequestUriOperator["Any"] = "Any";
    /** Equal */
    KnownRequestUriOperator["Equal"] = "Equal";
    /** Contains */
    KnownRequestUriOperator["Contains"] = "Contains";
    /** BeginsWith */
    KnownRequestUriOperator["BeginsWith"] = "BeginsWith";
    /** EndsWith */
    KnownRequestUriOperator["EndsWith"] = "EndsWith";
    /** LessThan */
    KnownRequestUriOperator["LessThan"] = "LessThan";
    /** LessThanOrEqual */
    KnownRequestUriOperator["LessThanOrEqual"] = "LessThanOrEqual";
    /** GreaterThan */
    KnownRequestUriOperator["GreaterThan"] = "GreaterThan";
    /** GreaterThanOrEqual */
    KnownRequestUriOperator["GreaterThanOrEqual"] = "GreaterThanOrEqual";
    /** RegEx */
    KnownRequestUriOperator["RegEx"] = "RegEx";
})(KnownRequestUriOperator || (KnownRequestUriOperator = {}));
/** Known values of {@link RequestHeaderOperator} that the service accepts. */
export var KnownRequestHeaderOperator;
(function (KnownRequestHeaderOperator) {
    /** Any */
    KnownRequestHeaderOperator["Any"] = "Any";
    /** Equal */
    KnownRequestHeaderOperator["Equal"] = "Equal";
    /** Contains */
    KnownRequestHeaderOperator["Contains"] = "Contains";
    /** BeginsWith */
    KnownRequestHeaderOperator["BeginsWith"] = "BeginsWith";
    /** EndsWith */
    KnownRequestHeaderOperator["EndsWith"] = "EndsWith";
    /** LessThan */
    KnownRequestHeaderOperator["LessThan"] = "LessThan";
    /** LessThanOrEqual */
    KnownRequestHeaderOperator["LessThanOrEqual"] = "LessThanOrEqual";
    /** GreaterThan */
    KnownRequestHeaderOperator["GreaterThan"] = "GreaterThan";
    /** GreaterThanOrEqual */
    KnownRequestHeaderOperator["GreaterThanOrEqual"] = "GreaterThanOrEqual";
    /** RegEx */
    KnownRequestHeaderOperator["RegEx"] = "RegEx";
})(KnownRequestHeaderOperator || (KnownRequestHeaderOperator = {}));
/** Known values of {@link RequestBodyOperator} that the service accepts. */
export var KnownRequestBodyOperator;
(function (KnownRequestBodyOperator) {
    /** Any */
    KnownRequestBodyOperator["Any"] = "Any";
    /** Equal */
    KnownRequestBodyOperator["Equal"] = "Equal";
    /** Contains */
    KnownRequestBodyOperator["Contains"] = "Contains";
    /** BeginsWith */
    KnownRequestBodyOperator["BeginsWith"] = "BeginsWith";
    /** EndsWith */
    KnownRequestBodyOperator["EndsWith"] = "EndsWith";
    /** LessThan */
    KnownRequestBodyOperator["LessThan"] = "LessThan";
    /** LessThanOrEqual */
    KnownRequestBodyOperator["LessThanOrEqual"] = "LessThanOrEqual";
    /** GreaterThan */
    KnownRequestBodyOperator["GreaterThan"] = "GreaterThan";
    /** GreaterThanOrEqual */
    KnownRequestBodyOperator["GreaterThanOrEqual"] = "GreaterThanOrEqual";
    /** RegEx */
    KnownRequestBodyOperator["RegEx"] = "RegEx";
})(KnownRequestBodyOperator || (KnownRequestBodyOperator = {}));
/** Known values of {@link RequestSchemeMatchConditionParametersMatchValuesItem} that the service accepts. */
export var KnownRequestSchemeMatchConditionParametersMatchValuesItem;
(function (KnownRequestSchemeMatchConditionParametersMatchValuesItem) {
    /** Http */
    KnownRequestSchemeMatchConditionParametersMatchValuesItem["Http"] = "HTTP";
    /** Https */
    KnownRequestSchemeMatchConditionParametersMatchValuesItem["Https"] = "HTTPS";
})(KnownRequestSchemeMatchConditionParametersMatchValuesItem || (KnownRequestSchemeMatchConditionParametersMatchValuesItem = {}));
/** Known values of {@link UrlPathOperator} that the service accepts. */
export var KnownUrlPathOperator;
(function (KnownUrlPathOperator) {
    /** Any */
    KnownUrlPathOperator["Any"] = "Any";
    /** Equal */
    KnownUrlPathOperator["Equal"] = "Equal";
    /** Contains */
    KnownUrlPathOperator["Contains"] = "Contains";
    /** BeginsWith */
    KnownUrlPathOperator["BeginsWith"] = "BeginsWith";
    /** EndsWith */
    KnownUrlPathOperator["EndsWith"] = "EndsWith";
    /** LessThan */
    KnownUrlPathOperator["LessThan"] = "LessThan";
    /** LessThanOrEqual */
    KnownUrlPathOperator["LessThanOrEqual"] = "LessThanOrEqual";
    /** GreaterThan */
    KnownUrlPathOperator["GreaterThan"] = "GreaterThan";
    /** GreaterThanOrEqual */
    KnownUrlPathOperator["GreaterThanOrEqual"] = "GreaterThanOrEqual";
    /** Wildcard */
    KnownUrlPathOperator["Wildcard"] = "Wildcard";
    /** RegEx */
    KnownUrlPathOperator["RegEx"] = "RegEx";
})(KnownUrlPathOperator || (KnownUrlPathOperator = {}));
/** Known values of {@link UrlFileExtensionOperator} that the service accepts. */
export var KnownUrlFileExtensionOperator;
(function (KnownUrlFileExtensionOperator) {
    /** Any */
    KnownUrlFileExtensionOperator["Any"] = "Any";
    /** Equal */
    KnownUrlFileExtensionOperator["Equal"] = "Equal";
    /** Contains */
    KnownUrlFileExtensionOperator["Contains"] = "Contains";
    /** BeginsWith */
    KnownUrlFileExtensionOperator["BeginsWith"] = "BeginsWith";
    /** EndsWith */
    KnownUrlFileExtensionOperator["EndsWith"] = "EndsWith";
    /** LessThan */
    KnownUrlFileExtensionOperator["LessThan"] = "LessThan";
    /** LessThanOrEqual */
    KnownUrlFileExtensionOperator["LessThanOrEqual"] = "LessThanOrEqual";
    /** GreaterThan */
    KnownUrlFileExtensionOperator["GreaterThan"] = "GreaterThan";
    /** GreaterThanOrEqual */
    KnownUrlFileExtensionOperator["GreaterThanOrEqual"] = "GreaterThanOrEqual";
    /** RegEx */
    KnownUrlFileExtensionOperator["RegEx"] = "RegEx";
})(KnownUrlFileExtensionOperator || (KnownUrlFileExtensionOperator = {}));
/** Known values of {@link UrlFileNameOperator} that the service accepts. */
export var KnownUrlFileNameOperator;
(function (KnownUrlFileNameOperator) {
    /** Any */
    KnownUrlFileNameOperator["Any"] = "Any";
    /** Equal */
    KnownUrlFileNameOperator["Equal"] = "Equal";
    /** Contains */
    KnownUrlFileNameOperator["Contains"] = "Contains";
    /** BeginsWith */
    KnownUrlFileNameOperator["BeginsWith"] = "BeginsWith";
    /** EndsWith */
    KnownUrlFileNameOperator["EndsWith"] = "EndsWith";
    /** LessThan */
    KnownUrlFileNameOperator["LessThan"] = "LessThan";
    /** LessThanOrEqual */
    KnownUrlFileNameOperator["LessThanOrEqual"] = "LessThanOrEqual";
    /** GreaterThan */
    KnownUrlFileNameOperator["GreaterThan"] = "GreaterThan";
    /** GreaterThanOrEqual */
    KnownUrlFileNameOperator["GreaterThanOrEqual"] = "GreaterThanOrEqual";
    /** RegEx */
    KnownUrlFileNameOperator["RegEx"] = "RegEx";
})(KnownUrlFileNameOperator || (KnownUrlFileNameOperator = {}));
/** Known values of {@link HttpVersionOperator} that the service accepts. */
export var KnownHttpVersionOperator;
(function (KnownHttpVersionOperator) {
    /** Equal */
    KnownHttpVersionOperator["Equal"] = "Equal";
})(KnownHttpVersionOperator || (KnownHttpVersionOperator = {}));
/** Known values of {@link CookiesOperator} that the service accepts. */
export var KnownCookiesOperator;
(function (KnownCookiesOperator) {
    /** Any */
    KnownCookiesOperator["Any"] = "Any";
    /** Equal */
    KnownCookiesOperator["Equal"] = "Equal";
    /** Contains */
    KnownCookiesOperator["Contains"] = "Contains";
    /** BeginsWith */
    KnownCookiesOperator["BeginsWith"] = "BeginsWith";
    /** EndsWith */
    KnownCookiesOperator["EndsWith"] = "EndsWith";
    /** LessThan */
    KnownCookiesOperator["LessThan"] = "LessThan";
    /** LessThanOrEqual */
    KnownCookiesOperator["LessThanOrEqual"] = "LessThanOrEqual";
    /** GreaterThan */
    KnownCookiesOperator["GreaterThan"] = "GreaterThan";
    /** GreaterThanOrEqual */
    KnownCookiesOperator["GreaterThanOrEqual"] = "GreaterThanOrEqual";
    /** RegEx */
    KnownCookiesOperator["RegEx"] = "RegEx";
})(KnownCookiesOperator || (KnownCookiesOperator = {}));
/** Known values of {@link IsDeviceOperator} that the service accepts. */
export var KnownIsDeviceOperator;
(function (KnownIsDeviceOperator) {
    /** Equal */
    KnownIsDeviceOperator["Equal"] = "Equal";
})(KnownIsDeviceOperator || (KnownIsDeviceOperator = {}));
/** Known values of {@link IsDeviceMatchConditionParametersMatchValuesItem} that the service accepts. */
export var KnownIsDeviceMatchConditionParametersMatchValuesItem;
(function (KnownIsDeviceMatchConditionParametersMatchValuesItem) {
    /** Mobile */
    KnownIsDeviceMatchConditionParametersMatchValuesItem["Mobile"] = "Mobile";
    /** Desktop */
    KnownIsDeviceMatchConditionParametersMatchValuesItem["Desktop"] = "Desktop";
})(KnownIsDeviceMatchConditionParametersMatchValuesItem || (KnownIsDeviceMatchConditionParametersMatchValuesItem = {}));
/** Known values of {@link SocketAddrOperator} that the service accepts. */
export var KnownSocketAddrOperator;
(function (KnownSocketAddrOperator) {
    /** Any */
    KnownSocketAddrOperator["Any"] = "Any";
    /** IPMatch */
    KnownSocketAddrOperator["IPMatch"] = "IPMatch";
})(KnownSocketAddrOperator || (KnownSocketAddrOperator = {}));
/** Known values of {@link ClientPortOperator} that the service accepts. */
export var KnownClientPortOperator;
(function (KnownClientPortOperator) {
    /** Any */
    KnownClientPortOperator["Any"] = "Any";
    /** Equal */
    KnownClientPortOperator["Equal"] = "Equal";
    /** Contains */
    KnownClientPortOperator["Contains"] = "Contains";
    /** BeginsWith */
    KnownClientPortOperator["BeginsWith"] = "BeginsWith";
    /** EndsWith */
    KnownClientPortOperator["EndsWith"] = "EndsWith";
    /** LessThan */
    KnownClientPortOperator["LessThan"] = "LessThan";
    /** LessThanOrEqual */
    KnownClientPortOperator["LessThanOrEqual"] = "LessThanOrEqual";
    /** GreaterThan */
    KnownClientPortOperator["GreaterThan"] = "GreaterThan";
    /** GreaterThanOrEqual */
    KnownClientPortOperator["GreaterThanOrEqual"] = "GreaterThanOrEqual";
    /** RegEx */
    KnownClientPortOperator["RegEx"] = "RegEx";
})(KnownClientPortOperator || (KnownClientPortOperator = {}));
/** Known values of {@link ServerPortOperator} that the service accepts. */
export var KnownServerPortOperator;
(function (KnownServerPortOperator) {
    /** Any */
    KnownServerPortOperator["Any"] = "Any";
    /** Equal */
    KnownServerPortOperator["Equal"] = "Equal";
    /** Contains */
    KnownServerPortOperator["Contains"] = "Contains";
    /** BeginsWith */
    KnownServerPortOperator["BeginsWith"] = "BeginsWith";
    /** EndsWith */
    KnownServerPortOperator["EndsWith"] = "EndsWith";
    /** LessThan */
    KnownServerPortOperator["LessThan"] = "LessThan";
    /** LessThanOrEqual */
    KnownServerPortOperator["LessThanOrEqual"] = "LessThanOrEqual";
    /** GreaterThan */
    KnownServerPortOperator["GreaterThan"] = "GreaterThan";
    /** GreaterThanOrEqual */
    KnownServerPortOperator["GreaterThanOrEqual"] = "GreaterThanOrEqual";
    /** RegEx */
    KnownServerPortOperator["RegEx"] = "RegEx";
})(KnownServerPortOperator || (KnownServerPortOperator = {}));
/** Known values of {@link HostNameOperator} that the service accepts. */
export var KnownHostNameOperator;
(function (KnownHostNameOperator) {
    /** Any */
    KnownHostNameOperator["Any"] = "Any";
    /** Equal */
    KnownHostNameOperator["Equal"] = "Equal";
    /** Contains */
    KnownHostNameOperator["Contains"] = "Contains";
    /** BeginsWith */
    KnownHostNameOperator["BeginsWith"] = "BeginsWith";
    /** EndsWith */
    KnownHostNameOperator["EndsWith"] = "EndsWith";
    /** LessThan */
    KnownHostNameOperator["LessThan"] = "LessThan";
    /** LessThanOrEqual */
    KnownHostNameOperator["LessThanOrEqual"] = "LessThanOrEqual";
    /** GreaterThan */
    KnownHostNameOperator["GreaterThan"] = "GreaterThan";
    /** GreaterThanOrEqual */
    KnownHostNameOperator["GreaterThanOrEqual"] = "GreaterThanOrEqual";
    /** RegEx */
    KnownHostNameOperator["RegEx"] = "RegEx";
})(KnownHostNameOperator || (KnownHostNameOperator = {}));
/** Known values of {@link SslProtocolOperator} that the service accepts. */
export var KnownSslProtocolOperator;
(function (KnownSslProtocolOperator) {
    /** Equal */
    KnownSslProtocolOperator["Equal"] = "Equal";
})(KnownSslProtocolOperator || (KnownSslProtocolOperator = {}));
/** Known values of {@link SslProtocol} that the service accepts. */
export var KnownSslProtocol;
(function (KnownSslProtocol) {
    /** TLSv1 */
    KnownSslProtocol["TLSv1"] = "TLSv1";
    /** TLSv11 */
    KnownSslProtocol["TLSv11"] = "TLSv1.1";
    /** TLSv12 */
    KnownSslProtocol["TLSv12"] = "TLSv1.2";
})(KnownSslProtocol || (KnownSslProtocol = {}));
/** Known values of {@link RedirectType} that the service accepts. */
export var KnownRedirectType;
(function (KnownRedirectType) {
    /** Moved */
    KnownRedirectType["Moved"] = "Moved";
    /** Found */
    KnownRedirectType["Found"] = "Found";
    /** TemporaryRedirect */
    KnownRedirectType["TemporaryRedirect"] = "TemporaryRedirect";
    /** PermanentRedirect */
    KnownRedirectType["PermanentRedirect"] = "PermanentRedirect";
})(KnownRedirectType || (KnownRedirectType = {}));
/** Known values of {@link DestinationProtocol} that the service accepts. */
export var KnownDestinationProtocol;
(function (KnownDestinationProtocol) {
    /** MatchRequest */
    KnownDestinationProtocol["MatchRequest"] = "MatchRequest";
    /** Http */
    KnownDestinationProtocol["Http"] = "Http";
    /** Https */
    KnownDestinationProtocol["Https"] = "Https";
})(KnownDestinationProtocol || (KnownDestinationProtocol = {}));
/** Known values of {@link Algorithm} that the service accepts. */
export var KnownAlgorithm;
(function (KnownAlgorithm) {
    /** SHA256 */
    KnownAlgorithm["SHA256"] = "SHA256";
})(KnownAlgorithm || (KnownAlgorithm = {}));
/** Known values of {@link ParamIndicator} that the service accepts. */
export var KnownParamIndicator;
(function (KnownParamIndicator) {
    /** Expires */
    KnownParamIndicator["Expires"] = "Expires";
    /** KeyId */
    KnownParamIndicator["KeyId"] = "KeyId";
    /** Signature */
    KnownParamIndicator["Signature"] = "Signature";
})(KnownParamIndicator || (KnownParamIndicator = {}));
/** Known values of {@link HeaderAction} that the service accepts. */
export var KnownHeaderAction;
(function (KnownHeaderAction) {
    /** Append */
    KnownHeaderAction["Append"] = "Append";
    /** Overwrite */
    KnownHeaderAction["Overwrite"] = "Overwrite";
    /** Delete */
    KnownHeaderAction["Delete"] = "Delete";
})(KnownHeaderAction || (KnownHeaderAction = {}));
/** Known values of {@link CacheBehavior} that the service accepts. */
export var KnownCacheBehavior;
(function (KnownCacheBehavior) {
    /** BypassCache */
    KnownCacheBehavior["BypassCache"] = "BypassCache";
    /** Override */
    KnownCacheBehavior["Override"] = "Override";
    /** SetIfMissing */
    KnownCacheBehavior["SetIfMissing"] = "SetIfMissing";
})(KnownCacheBehavior || (KnownCacheBehavior = {}));
/** Known values of {@link CacheType} that the service accepts. */
export var KnownCacheType;
(function (KnownCacheType) {
    /** All */
    KnownCacheType["All"] = "All";
})(KnownCacheType || (KnownCacheType = {}));
/** Known values of {@link QueryStringBehavior} that the service accepts. */
export var KnownQueryStringBehavior;
(function (KnownQueryStringBehavior) {
    /** Include */
    KnownQueryStringBehavior["Include"] = "Include";
    /** IncludeAll */
    KnownQueryStringBehavior["IncludeAll"] = "IncludeAll";
    /** Exclude */
    KnownQueryStringBehavior["Exclude"] = "Exclude";
    /** ExcludeAll */
    KnownQueryStringBehavior["ExcludeAll"] = "ExcludeAll";
})(KnownQueryStringBehavior || (KnownQueryStringBehavior = {}));
/** Known values of {@link RuleQueryStringCachingBehavior} that the service accepts. */
export var KnownRuleQueryStringCachingBehavior;
(function (KnownRuleQueryStringCachingBehavior) {
    /** IgnoreQueryString */
    KnownRuleQueryStringCachingBehavior["IgnoreQueryString"] = "IgnoreQueryString";
    /** UseQueryString */
    KnownRuleQueryStringCachingBehavior["UseQueryString"] = "UseQueryString";
    /** IgnoreSpecifiedQueryStrings */
    KnownRuleQueryStringCachingBehavior["IgnoreSpecifiedQueryStrings"] = "IgnoreSpecifiedQueryStrings";
    /** IncludeSpecifiedQueryStrings */
    KnownRuleQueryStringCachingBehavior["IncludeSpecifiedQueryStrings"] = "IncludeSpecifiedQueryStrings";
})(KnownRuleQueryStringCachingBehavior || (KnownRuleQueryStringCachingBehavior = {}));
/** Known values of {@link RuleIsCompressionEnabled} that the service accepts. */
export var KnownRuleIsCompressionEnabled;
(function (KnownRuleIsCompressionEnabled) {
    /** Enabled */
    KnownRuleIsCompressionEnabled["Enabled"] = "Enabled";
    /** Disabled */
    KnownRuleIsCompressionEnabled["Disabled"] = "Disabled";
})(KnownRuleIsCompressionEnabled || (KnownRuleIsCompressionEnabled = {}));
/** Known values of {@link RuleCacheBehavior} that the service accepts. */
export var KnownRuleCacheBehavior;
(function (KnownRuleCacheBehavior) {
    /** HonorOrigin */
    KnownRuleCacheBehavior["HonorOrigin"] = "HonorOrigin";
    /** OverrideAlways */
    KnownRuleCacheBehavior["OverrideAlways"] = "OverrideAlways";
    /** OverrideIfOriginMissing */
    KnownRuleCacheBehavior["OverrideIfOriginMissing"] = "OverrideIfOriginMissing";
})(KnownRuleCacheBehavior || (KnownRuleCacheBehavior = {}));
/** Known values of {@link CertificateType} that the service accepts. */
export var KnownCertificateType;
(function (KnownCertificateType) {
    /** Shared */
    KnownCertificateType["Shared"] = "Shared";
    /** Dedicated */
    KnownCertificateType["Dedicated"] = "Dedicated";
})(KnownCertificateType || (KnownCertificateType = {}));
/** Known values of {@link UpdateRule} that the service accepts. */
export var KnownUpdateRule;
(function (KnownUpdateRule) {
    /** NoAction */
    KnownUpdateRule["NoAction"] = "NoAction";
})(KnownUpdateRule || (KnownUpdateRule = {}));
/** Known values of {@link DeleteRule} that the service accepts. */
export var KnownDeleteRule;
(function (KnownDeleteRule) {
    /** NoAction */
    KnownDeleteRule["NoAction"] = "NoAction";
})(KnownDeleteRule || (KnownDeleteRule = {}));
//# sourceMappingURL=index.js.map