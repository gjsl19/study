{"version":3,"file":"index.js","sources":["../src/pagingHelper.ts","../src/models/index.ts","../src/models/mappers.ts","../src/models/parameters.ts","../src/operations/afdProfiles.ts","../src/lroImpl.ts","../src/operations/afdCustomDomains.ts","../src/operations/afdEndpoints.ts","../src/operations/afdOriginGroups.ts","../src/operations/afdOrigins.ts","../src/operations/routes.ts","../src/operations/ruleSets.ts","../src/operations/rules.ts","../src/operations/securityPolicies.ts","../src/operations/secrets.ts","../src/operations/validate.ts","../src/operations/logAnalytics.ts","../src/operations/profiles.ts","../src/operations/endpoints.ts","../src/operations/origins.ts","../src/operations/originGroups.ts","../src/operations/customDomains.ts","../src/operations/resourceUsageOperations.ts","../src/operations/operations.ts","../src/operations/edgeNodes.ts","../src/operations/policies.ts","../src/operations/managedRuleSets.ts","../src/cdnManagementClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport interface PageInfo {\n  continuationToken?: string;\n}\n\nconst pageMap = new WeakMap<object, PageInfo>();\n\n/**\n * Given a result page from a pageable operation, returns a\n * continuation token that can be used to begin paging from\n * that point later.\n * @param page A result object from calling .byPage() on a paged operation.\n * @returns The continuation token that can be passed into byPage().\n */\nexport function getContinuationToken(page: unknown): string | undefined {\n  if (typeof page !== \"object\" || page === null) {\n    return undefined;\n  }\n  return pageMap.get(page)?.continuationToken;\n}\n\nexport function setContinuationToken(\n  page: unknown,\n  continuationToken: string | undefined\n): void {\n  if (typeof page !== \"object\" || page === null || !continuationToken) {\n    return;\n  }\n  const pageInfo = pageMap.get(page) ?? {};\n  pageInfo.continuationToken = continuationToken;\n  pageMap.set(page, pageInfo);\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport type DeliveryRuleConditionUnion =\n  | DeliveryRuleCondition\n  | DeliveryRuleRemoteAddressCondition\n  | DeliveryRuleRequestMethodCondition\n  | DeliveryRuleQueryStringCondition\n  | DeliveryRulePostArgsCondition\n  | DeliveryRuleRequestUriCondition\n  | DeliveryRuleRequestHeaderCondition\n  | DeliveryRuleRequestBodyCondition\n  | DeliveryRuleRequestSchemeCondition\n  | DeliveryRuleUrlPathCondition\n  | DeliveryRuleUrlFileExtensionCondition\n  | DeliveryRuleUrlFileNameCondition\n  | DeliveryRuleHttpVersionCondition\n  | DeliveryRuleCookiesCondition\n  | DeliveryRuleIsDeviceCondition\n  | DeliveryRuleSocketAddrCondition\n  | DeliveryRuleClientPortCondition\n  | DeliveryRuleServerPortCondition\n  | DeliveryRuleHostNameCondition\n  | DeliveryRuleSslProtocolCondition;\nexport type DeliveryRuleActionAutoGeneratedUnion =\n  | DeliveryRuleActionAutoGenerated\n  | UrlRedirectAction\n  | UrlSigningAction\n  | OriginGroupOverrideAction\n  | UrlRewriteAction\n  | DeliveryRuleRequestHeaderAction\n  | DeliveryRuleResponseHeaderAction\n  | DeliveryRuleCacheExpirationAction\n  | DeliveryRuleCacheKeyQueryStringAction\n  | DeliveryRuleRouteConfigurationOverrideAction;\nexport type SecurityPolicyPropertiesParametersUnion =\n  | SecurityPolicyPropertiesParameters\n  | SecurityPolicyWebApplicationFirewallParameters;\nexport type SecretParametersUnion =\n  | SecretParameters\n  | UrlSigningKeyParameters\n  | ManagedCertificateParameters\n  | CustomerCertificateParameters\n  | AzureFirstPartyManagedCertificateParameters;\nexport type CustomDomainHttpsParametersUnion =\n  | CustomDomainHttpsParameters\n  | CdnManagedHttpsParameters\n  | UserManagedHttpsParameters;\n\n/** Input of CheckNameAvailability API. */\nexport interface CheckEndpointNameAvailabilityInput {\n  /** The resource name to validate. */\n  name: string;\n  /** The type of the resource whose name is to be validated. */\n  type: ResourceType;\n  /** Indicates the endpoint name reuse scope. The default value is TenantReuse. */\n  autoGeneratedDomainNameLabelScope?: AutoGeneratedDomainNameLabelScope;\n}\n\n/** Output of check name availability API. */\nexport interface CheckEndpointNameAvailabilityOutput {\n  /**\n   * Indicates whether the name is available.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nameAvailable?: boolean;\n  /**\n   * Returns the available hostname generated based on the AutoGeneratedDomainNameLabelScope when the name is available, otherwise it returns empty string\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly availableHostname?: string;\n  /**\n   * The reason why the name is not available.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reason?: string;\n  /**\n   * The detailed error message describing why the name is not available.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n}\n\n/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */\nexport interface AfdErrorResponse {\n  /** The error object. */\n  error?: ErrorDetail;\n}\n\n/** The error detail. */\nexport interface ErrorDetail {\n  /**\n   * The error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * The error message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * The error target.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly target?: string;\n  /**\n   * The error details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly details?: ErrorDetail[];\n  /**\n   * The error additional info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly additionalInfo?: ErrorAdditionalInfo[];\n}\n\n/** The resource management error additional info. */\nexport interface ErrorAdditionalInfo {\n  /**\n   * The additional info type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The additional info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly info?: Record<string, unknown>;\n}\n\n/** The list usages operation response. */\nexport interface UsagesListResult {\n  /** The list of resource usages. */\n  value?: Usage[];\n  /** URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Describes resource usage. */\nexport interface Usage {\n  /**\n   * Resource identifier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /** An enum describing the unit of measurement. */\n  unit: UsageUnit;\n  /** The current value of the usage. */\n  currentValue: number;\n  /** The limit of usage. */\n  limit: number;\n  /** The name of the type of usage. */\n  name: UsageName;\n}\n\n/** The usage names. */\nexport interface UsageName {\n  /** A string describing the resource name. */\n  value?: string;\n  /** A localized string describing the resource name. */\n  localizedValue?: string;\n}\n\n/** Input of CheckHostNameAvailability API. */\nexport interface CheckHostNameAvailabilityInput {\n  /** The host name to validate. */\n  hostName: string;\n}\n\n/** Output of check name availability API. */\nexport interface CheckNameAvailabilityOutput {\n  /**\n   * Indicates whether the name is available.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nameAvailable?: boolean;\n  /**\n   * The reason why the name is not available.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reason?: string;\n  /**\n   * The detailed error message describing why the name is not available.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n}\n\n/** Result of the request to list domains. It contains a list of domain objects and a URL link to get the next set of results. */\nexport interface AFDDomainListResult {\n  /**\n   * List of AzureFrontDoor domains within a profile.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: AFDDomain[];\n  /** URL to get the next set of domain objects if there are any. */\n  nextLink?: string;\n}\n\n/** The JSON object that contains the properties to validate a domain. */\nexport interface DomainValidationProperties {\n  /**\n   * Challenge used for DNS TXT record or file based validation\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly validationToken?: string;\n  /**\n   * The date time that the token expires\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly expirationDate?: string;\n}\n\n/** The JSON object that contains the properties of the domain to create. */\nexport interface AFDDomainUpdatePropertiesParameters {\n  /**\n   * The name of the profile which holds the domain.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly profileName?: string;\n  /** The configuration specifying how to enable HTTPS for the domain - using AzureFrontDoor managed certificate or user's own certificate. If not specified, enabling ssl uses AzureFrontDoor managed certificate by default. */\n  tlsSettings?: AFDDomainHttpsParameters;\n  /** Resource reference to the Azure DNS zone */\n  azureDnsZone?: ResourceReference;\n  /** Resource reference to the Azure resource where custom domain ownership was prevalidated */\n  preValidatedCustomDomainResourceId?: ResourceReference;\n}\n\n/** The JSON object that contains the properties to secure a domain. */\nexport interface AFDDomainHttpsParameters {\n  /** Defines the source of the SSL certificate. */\n  certificateType: AfdCertificateType;\n  /** TLS protocol version that will be used for Https */\n  minimumTlsVersion?: AfdMinimumTlsVersion;\n  /** Resource reference to the secret. ie. subs/rg/profile/secret */\n  secret?: ResourceReference;\n}\n\n/** Reference to another resource. */\nexport interface ResourceReference {\n  /** Resource ID. */\n  id?: string;\n}\n\n/** The tracking states for afd resources. */\nexport interface AFDStateProperties {\n  /**\n   * Provisioning status\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: AfdProvisioningState;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly deploymentStatus?: DeploymentStatus;\n}\n\n/** The core properties of ARM resources */\nexport interface Resource {\n  /**\n   * Resource ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Resource name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * Read only system data\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n}\n\n/** Read only system data */\nexport interface SystemData {\n  /** An identifier for the identity that created the resource */\n  createdBy?: string;\n  /** The type of identity that created the resource */\n  createdByType?: IdentityType;\n  /** The timestamp of resource creation (UTC) */\n  createdAt?: Date;\n  /** An identifier for the identity that last modified the resource */\n  lastModifiedBy?: string;\n  /** The type of identity that last modified the resource */\n  lastModifiedByType?: IdentityType;\n  /** The timestamp of resource last modification (UTC) */\n  lastModifiedAt?: Date;\n}\n\n/** The domain JSON object required for domain creation or update. */\nexport interface AFDDomainUpdateParameters {\n  /**\n   * The name of the profile which holds the domain.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly profileName?: string;\n  /** The configuration specifying how to enable HTTPS for the domain - using AzureFrontDoor managed certificate or user's own certificate. If not specified, enabling ssl uses AzureFrontDoor managed certificate by default. */\n  tlsSettings?: AFDDomainHttpsParameters;\n  /** Resource reference to the Azure DNS zone */\n  azureDnsZone?: ResourceReference;\n  /** Resource reference to the Azure resource where custom domain ownership was prevalidated */\n  preValidatedCustomDomainResourceId?: ResourceReference;\n}\n\n/** Result of the request to list endpoints. It contains a list of endpoint objects and a URL link to get the next set of results. */\nexport interface AFDEndpointListResult {\n  /**\n   * List of AzureFrontDoor endpoints within a profile\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: AFDEndpoint[];\n  /** URL to get the next set of endpoint objects if there is any. */\n  nextLink?: string;\n}\n\n/** The JSON object containing endpoint update parameters. */\nexport interface AFDEndpointPropertiesUpdateParameters {\n  /**\n   * The name of the profile which holds the endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly profileName?: string;\n  /** Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled' */\n  enabledState?: EnabledState;\n}\n\n/** Properties required to create or update an endpoint. */\nexport interface AFDEndpointUpdateParameters {\n  /** Endpoint tags. */\n  tags?: { [propertyName: string]: string };\n  /**\n   * The name of the profile which holds the endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly profileName?: string;\n  /** Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled' */\n  enabledState?: EnabledState;\n}\n\n/** Parameters required for content purge. */\nexport interface AfdPurgeParameters {\n  /** The path to the content to be purged. Can describe a file path or a wild card directory. */\n  contentPaths: string[];\n  /** List of domains. */\n  domains?: string[];\n}\n\n/** Input of the custom domain to be validated for DNS mapping. */\nexport interface ValidateCustomDomainInput {\n  /** The host name of the custom domain. Must be a domain name. */\n  hostName: string;\n}\n\n/** Output of custom domain validation. */\nexport interface ValidateCustomDomainOutput {\n  /**\n   * Indicates whether the custom domain is valid or not.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly customDomainValidated?: boolean;\n  /**\n   * The reason why the custom domain is not valid.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reason?: string;\n  /**\n   * Error message describing why the custom domain is not valid.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n}\n\n/** Result of the request to list origin groups. It contains a list of origin groups objects and a URL link to get the next set of results. */\nexport interface AFDOriginGroupListResult {\n  /**\n   * List of CDN origin groups within an endpoint\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: AFDOriginGroup[];\n  /** URL to get the next set of origin objects if there are any. */\n  nextLink?: string;\n}\n\n/** The JSON object that contains the properties of the origin group. */\nexport interface AFDOriginGroupUpdatePropertiesParameters {\n  /**\n   * The name of the profile which holds the origin group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly profileName?: string;\n  /** Load balancing settings for a backend pool */\n  loadBalancingSettings?: LoadBalancingSettingsParameters;\n  /** Health probe settings to the origin that is used to determine the health of the origin. */\n  healthProbeSettings?: HealthProbeParameters;\n  /** Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported. */\n  trafficRestorationTimeToHealedOrNewEndpointsInMinutes?: number;\n  /** Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled' */\n  sessionAffinityState?: EnabledState;\n}\n\n/** Round-Robin load balancing settings for a backend pool */\nexport interface LoadBalancingSettingsParameters {\n  /** The number of samples to consider for load balancing decisions */\n  sampleSize?: number;\n  /** The number of samples within the sample period that must succeed */\n  successfulSamplesRequired?: number;\n  /** The additional latency in milliseconds for probes to fall into the lowest latency bucket */\n  additionalLatencyInMilliseconds?: number;\n}\n\n/** The JSON object that contains the properties to send health probes to origin. */\nexport interface HealthProbeParameters {\n  /** The path relative to the origin that is used to determine the health of the origin. */\n  probePath?: string;\n  /** The type of health probe request that is made. */\n  probeRequestType?: HealthProbeRequestType;\n  /** Protocol to use for health probe. */\n  probeProtocol?: ProbeProtocol;\n  /** The number of seconds between health probes.Default is 240sec. */\n  probeIntervalInSeconds?: number;\n}\n\n/** AFDOrigin group properties needed for origin group creation or update. */\nexport interface AFDOriginGroupUpdateParameters {\n  /**\n   * The name of the profile which holds the origin group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly profileName?: string;\n  /** Load balancing settings for a backend pool */\n  loadBalancingSettings?: LoadBalancingSettingsParameters;\n  /** Health probe settings to the origin that is used to determine the health of the origin. */\n  healthProbeSettings?: HealthProbeParameters;\n  /** Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported. */\n  trafficRestorationTimeToHealedOrNewEndpointsInMinutes?: number;\n  /** Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled' */\n  sessionAffinityState?: EnabledState;\n}\n\n/** Result of the request to list origins. It contains a list of origin objects and a URL link to get the next set of results. */\nexport interface AFDOriginListResult {\n  /**\n   * List of CDN origins within an endpoint\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: AFDOrigin[];\n  /** URL to get the next set of origin objects if there are any. */\n  nextLink?: string;\n}\n\n/** The JSON object that contains the properties of the origin. */\nexport interface AFDOriginUpdatePropertiesParameters {\n  /**\n   * The name of the origin group which contains this origin.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly originGroupName?: string;\n  /** Resource reference to the Azure origin resource. */\n  azureOrigin?: ResourceReference;\n  /** The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint. */\n  hostName?: string;\n  /** The value of the HTTP port. Must be between 1 and 65535. */\n  httpPort?: number;\n  /** The value of the HTTPS port. Must be between 1 and 65535. */\n  httpsPort?: number;\n  /** The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint */\n  originHostHeader?: string;\n  /** Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5 */\n  priority?: number;\n  /** Weight of the origin in given origin group for load balancing. Must be between 1 and 1000 */\n  weight?: number;\n  /** The properties of the private link resource for private origin. */\n  sharedPrivateLinkResource?: SharedPrivateLinkResourceProperties;\n  /** Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool. */\n  enabledState?: EnabledState;\n  /** Whether to enable certificate name check at origin level */\n  enforceCertificateNameCheck?: boolean;\n}\n\n/** Describes the properties of an existing Shared Private Link Resource to use when connecting to a private origin. */\nexport interface SharedPrivateLinkResourceProperties {\n  /** The resource id of the resource the shared private link resource is for. */\n  privateLink?: ResourceReference;\n  /** The location of the shared private link resource */\n  privateLinkLocation?: string;\n  /** The group id from the provider of resource the shared private link resource is for. */\n  groupId?: string;\n  /** The request message for requesting approval of the shared private link resource. */\n  requestMessage?: string;\n  /** Status of the shared private link resource. Can be Pending, Approved, Rejected, Disconnected, or Timeout. */\n  status?: SharedPrivateLinkResourceStatus;\n}\n\n/** AFDOrigin properties needed for origin update. */\nexport interface AFDOriginUpdateParameters {\n  /**\n   * The name of the origin group which contains this origin.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly originGroupName?: string;\n  /** Resource reference to the Azure origin resource. */\n  azureOrigin?: ResourceReference;\n  /** The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint. */\n  hostName?: string;\n  /** The value of the HTTP port. Must be between 1 and 65535. */\n  httpPort?: number;\n  /** The value of the HTTPS port. Must be between 1 and 65535. */\n  httpsPort?: number;\n  /** The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint */\n  originHostHeader?: string;\n  /** Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5 */\n  priority?: number;\n  /** Weight of the origin in given origin group for load balancing. Must be between 1 and 1000 */\n  weight?: number;\n  /** The properties of the private link resource for private origin. */\n  sharedPrivateLinkResource?: SharedPrivateLinkResourceProperties;\n  /** Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool. */\n  enabledState?: EnabledState;\n  /** Whether to enable certificate name check at origin level */\n  enforceCertificateNameCheck?: boolean;\n}\n\n/** Result of the request to list routes. It contains a list of route objects and a URL link to get the next set of results. */\nexport interface RouteListResult {\n  /**\n   * List of AzureFrontDoor routes within a profile.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Route[];\n  /** URL to get the next set of route objects if there are any. */\n  nextLink?: string;\n}\n\n/** The JSON object that contains the properties of the domain to create. */\nexport interface RouteUpdatePropertiesParameters {\n  /**\n   * The name of the endpoint which holds the route.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly endpointName?: string;\n  /** Domains referenced by this endpoint. */\n  customDomains?: ActivatedResourceReference[];\n  /** A reference to the origin group. */\n  originGroup?: ResourceReference;\n  /** A directory path on the origin that AzureFrontDoor can use to retrieve content from, e.g. contoso.cloudapp.net/originpath. */\n  originPath?: string;\n  /** rule sets referenced by this endpoint. */\n  ruleSets?: ResourceReference[];\n  /** List of supported protocols for this route. */\n  supportedProtocols?: AFDEndpointProtocols[];\n  /** The route patterns of the rule. */\n  patternsToMatch?: string[];\n  /** The caching configuration for this route. To disable caching, do not provide a cacheConfiguration object. */\n  cacheConfiguration?: AfdRouteCacheConfiguration;\n  /** Protocol this rule will use when forwarding traffic to backends. */\n  forwardingProtocol?: ForwardingProtocol;\n  /** whether this route will be linked to the default endpoint domain. */\n  linkToDefaultDomain?: LinkToDefaultDomain;\n  /** Whether to automatically redirect HTTP traffic to HTTPS traffic. Note that this is a easy way to set up this rule and it will be the first rule that gets executed. */\n  httpsRedirect?: HttpsRedirect;\n  /** Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled' */\n  enabledState?: EnabledState;\n}\n\n/** Reference to another resource along with its state. */\nexport interface ActivatedResourceReference {\n  /** Resource ID. */\n  id?: string;\n  /**\n   * Whether the resource is active or inactive\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isActive?: boolean;\n}\n\n/** Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object. */\nexport interface AfdRouteCacheConfiguration {\n  /** Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore specific query strings, cache every request with a unique URL, or cache specific query strings. */\n  queryStringCachingBehavior?: AfdQueryStringCachingBehavior;\n  /** query parameters to include or exclude (comma separated). */\n  queryParameters?: string;\n  /** compression settings. */\n  compressionSettings?: CompressionSettings;\n}\n\n/** settings for compression. */\nexport interface CompressionSettings {\n  /** List of content types on which compression applies. The value should be a valid MIME type. */\n  contentTypesToCompress?: string[];\n  /** Indicates whether content compression is enabled on AzureFrontDoor. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB. */\n  isCompressionEnabled?: boolean;\n}\n\n/** The domain JSON object required for domain creation or update. */\nexport interface RouteUpdateParameters {\n  /**\n   * The name of the endpoint which holds the route.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly endpointName?: string;\n  /** Domains referenced by this endpoint. */\n  customDomains?: ActivatedResourceReference[];\n  /** A reference to the origin group. */\n  originGroup?: ResourceReference;\n  /** A directory path on the origin that AzureFrontDoor can use to retrieve content from, e.g. contoso.cloudapp.net/originpath. */\n  originPath?: string;\n  /** rule sets referenced by this endpoint. */\n  ruleSets?: ResourceReference[];\n  /** List of supported protocols for this route. */\n  supportedProtocols?: AFDEndpointProtocols[];\n  /** The route patterns of the rule. */\n  patternsToMatch?: string[];\n  /** The caching configuration for this route. To disable caching, do not provide a cacheConfiguration object. */\n  cacheConfiguration?: AfdRouteCacheConfiguration;\n  /** Protocol this rule will use when forwarding traffic to backends. */\n  forwardingProtocol?: ForwardingProtocol;\n  /** whether this route will be linked to the default endpoint domain. */\n  linkToDefaultDomain?: LinkToDefaultDomain;\n  /** Whether to automatically redirect HTTP traffic to HTTPS traffic. Note that this is a easy way to set up this rule and it will be the first rule that gets executed. */\n  httpsRedirect?: HttpsRedirect;\n  /** Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled' */\n  enabledState?: EnabledState;\n}\n\n/** Result of the request to list rule sets. It contains a list of rule set objects and a URL link to get the next set of results. */\nexport interface RuleSetListResult {\n  /**\n   * List of AzureFrontDoor rule sets within a profile.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: RuleSet[];\n  /** URL to get the next set of rule set objects if there are any. */\n  nextLink?: string;\n}\n\n/** Result of the request to list rules. It contains a list of rule objects and a URL link to get the next set of results. */\nexport interface RuleListResult {\n  /**\n   * List of AzureFrontDoor rules within a rule set.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Rule[];\n  /** URL to get the next set of rule objects if there are any. */\n  nextLink?: string;\n}\n\n/** The JSON object that contains the properties of the rule to update. */\nexport interface RuleUpdatePropertiesParameters {\n  /**\n   * The name of the rule set containing the rule.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ruleSetName?: string;\n  /** The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied. */\n  order?: number;\n  /** A list of conditions that must be matched for the actions to be executed */\n  conditions?: DeliveryRuleConditionUnion[];\n  /** A list of actions that are executed when all the conditions of a rule are satisfied. */\n  actions?: DeliveryRuleActionAutoGeneratedUnion[];\n  /** If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue. */\n  matchProcessingBehavior?: MatchProcessingBehavior;\n}\n\n/** A condition for the delivery rule. */\nexport interface DeliveryRuleCondition {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  name:\n    | \"RemoteAddress\"\n    | \"RequestMethod\"\n    | \"QueryString\"\n    | \"PostArgs\"\n    | \"RequestUri\"\n    | \"RequestHeader\"\n    | \"RequestBody\"\n    | \"RequestScheme\"\n    | \"UrlPath\"\n    | \"UrlFileExtension\"\n    | \"UrlFileName\"\n    | \"HttpVersion\"\n    | \"Cookies\"\n    | \"IsDevice\"\n    | \"SocketAddr\"\n    | \"ClientPort\"\n    | \"ServerPort\"\n    | \"HostName\"\n    | \"SslProtocol\";\n}\n\n/** An action for the delivery rule. */\nexport interface DeliveryRuleActionAutoGenerated {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  name:\n    | \"UrlRedirect\"\n    | \"UrlSigning\"\n    | \"OriginGroupOverride\"\n    | \"UrlRewrite\"\n    | \"ModifyRequestHeader\"\n    | \"ModifyResponseHeader\"\n    | \"CacheExpiration\"\n    | \"CacheKeyQueryString\"\n    | \"RouteConfigurationOverride\";\n}\n\n/** The domain JSON object required for domain creation or update. */\nexport interface RuleUpdateParameters {\n  /**\n   * The name of the rule set containing the rule.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ruleSetName?: string;\n  /** The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied. */\n  order?: number;\n  /** A list of conditions that must be matched for the actions to be executed */\n  conditions?: DeliveryRuleConditionUnion[];\n  /** A list of actions that are executed when all the conditions of a rule are satisfied. */\n  actions?: DeliveryRuleActionAutoGeneratedUnion[];\n  /** If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue. */\n  matchProcessingBehavior?: MatchProcessingBehavior;\n}\n\n/** Result of the request to list security policies. It contains a list of security policy objects and a URL link to get the next set of results. */\nexport interface SecurityPolicyListResult {\n  /**\n   * List of Security policies within a profile\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: SecurityPolicy[];\n  /** URL to get the next set of security policy objects if there is any. */\n  nextLink?: string;\n}\n\n/** The json object containing security policy parameters */\nexport interface SecurityPolicyPropertiesParameters {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"WebApplicationFirewall\";\n}\n\n/** The JSON object containing security policy update parameters. */\nexport interface SecurityPolicyUpdateParameters {\n  /** object which contains security policy parameters */\n  parameters?: SecurityPolicyPropertiesParametersUnion;\n}\n\n/** Result of the request to list secrets. It contains a list of Secret objects and a URL link to get the next set of results. */\nexport interface SecretListResult {\n  /**\n   * List of AzureFrontDoor secrets within a profile.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Secret[];\n  /** URL to get the next set of Secret objects if there are any. */\n  nextLink?: string;\n}\n\n/** The json object containing secret parameters */\nexport interface SecretParameters {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type:\n    | \"UrlSigningKey\"\n    | \"ManagedCertificate\"\n    | \"CustomerCertificate\"\n    | \"AzureFirstPartyManagedCertificate\";\n}\n\n/** Input of the secret to be validated. */\nexport interface ValidateSecretInput {\n  /** The secret type. */\n  secretType: SecretType;\n  /** Resource reference to the Azure Key Vault secret. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{secretName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​ */\n  secretSource: ResourceReference;\n  /** Secret version, if customer is using a specific version. */\n  secretVersion?: string;\n}\n\n/** Output of the validated secret. */\nexport interface ValidateSecretOutput {\n  /** The validation status. */\n  status?: Status;\n  /** Detailed error message */\n  message?: string;\n}\n\n/** Metrics Response */\nexport interface MetricsResponse {\n  dateTimeBegin?: Date;\n  dateTimeEnd?: Date;\n  granularity?: MetricsResponseGranularity;\n  series?: MetricsResponseSeriesItem[];\n}\n\nexport interface MetricsResponseSeriesItem {\n  metric?: string;\n  unit?: MetricsResponseSeriesItemUnit;\n  groups?: MetricsResponseSeriesPropertiesItemsItem[];\n  data?: Components1Gs0LlpSchemasMetricsresponsePropertiesSeriesItemsPropertiesDataItems[];\n}\n\nexport interface MetricsResponseSeriesPropertiesItemsItem {\n  name?: string;\n  value?: string;\n}\n\nexport interface Components1Gs0LlpSchemasMetricsresponsePropertiesSeriesItemsPropertiesDataItems {\n  dateTime?: Date;\n  value?: number;\n}\n\n/** Rankings Response */\nexport interface RankingsResponse {\n  dateTimeBegin?: Date;\n  dateTimeEnd?: Date;\n  tables?: RankingsResponseTablesItem[];\n}\n\nexport interface RankingsResponseTablesItem {\n  ranking?: string;\n  data?: RankingsResponseTablesPropertiesItemsItem[];\n}\n\nexport interface RankingsResponseTablesPropertiesItemsItem {\n  name?: string;\n  metrics?: RankingsResponseTablesPropertiesItemsMetricsItem[];\n}\n\nexport interface RankingsResponseTablesPropertiesItemsMetricsItem {\n  metric?: string;\n  value?: number;\n  percentage?: number;\n}\n\n/** Continents Response */\nexport interface ContinentsResponse {\n  continents?: ContinentsResponseContinentsItem[];\n  countryOrRegions?: ContinentsResponseCountryOrRegionsItem[];\n}\n\nexport interface ContinentsResponseContinentsItem {\n  id?: string;\n}\n\nexport interface ContinentsResponseCountryOrRegionsItem {\n  id?: string;\n  continentId?: string;\n}\n\n/** Resources Response */\nexport interface ResourcesResponse {\n  endpoints?: ResourcesResponseEndpointsItem[];\n  customDomains?: ResourcesResponseCustomDomainsItem[];\n}\n\nexport interface ResourcesResponseEndpointsItem {\n  id?: string;\n  name?: string;\n  history?: boolean;\n  customDomains?: ResourcesResponseEndpointsPropertiesItemsItem[];\n}\n\nexport interface ResourcesResponseEndpointsPropertiesItemsItem {\n  id?: string;\n  name?: string;\n  endpointId?: string;\n  history?: boolean;\n}\n\nexport interface ResourcesResponseCustomDomainsItem {\n  id?: string;\n  name?: string;\n  endpointId?: string;\n  history?: boolean;\n}\n\n/** Waf Metrics Response */\nexport interface WafMetricsResponse {\n  dateTimeBegin?: Date;\n  dateTimeEnd?: Date;\n  granularity?: WafMetricsResponseGranularity;\n  series?: WafMetricsResponseSeriesItem[];\n}\n\nexport interface WafMetricsResponseSeriesItem {\n  metric?: string;\n  unit?: \"count\";\n  groups?: WafMetricsResponseSeriesPropertiesItemsItem[];\n  data?: Components18OrqelSchemasWafmetricsresponsePropertiesSeriesItemsPropertiesDataItems[];\n}\n\nexport interface WafMetricsResponseSeriesPropertiesItemsItem {\n  name?: string;\n  value?: string;\n}\n\nexport interface Components18OrqelSchemasWafmetricsresponsePropertiesSeriesItemsPropertiesDataItems {\n  dateTime?: Date;\n  value?: number;\n}\n\n/** Waf Rankings Response */\nexport interface WafRankingsResponse {\n  dateTimeBegin?: Date;\n  dateTimeEnd?: Date;\n  groups?: string[];\n  data?: WafRankingsResponseDataItem[];\n}\n\nexport interface WafRankingsResponseDataItem {\n  groupValues?: string[];\n  metrics?: ComponentsKpo1PjSchemasWafrankingsresponsePropertiesDataItemsPropertiesMetricsItems[];\n}\n\nexport interface ComponentsKpo1PjSchemasWafrankingsresponsePropertiesDataItemsPropertiesMetricsItems {\n  metric?: string;\n  value?: number;\n  percentage?: number;\n}\n\n/** Result of the request to list profiles. It contains a list of profile objects and a URL link to get the next set of results. */\nexport interface ProfileListResult {\n  /**\n   * List of CDN profiles within a resource group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Profile[];\n  /** URL to get the next set of profile objects if there are any. */\n  nextLink?: string;\n}\n\n/**\n * Standard_Verizon = The SKU name for a Standard Verizon CDN profile.\n * Premium_Verizon = The SKU name for a Premium Verizon CDN profile.\n * Custom_Verizon = The SKU name for a Custom Verizon CDN profile.\n * Standard_Akamai = The SKU name for an Akamai CDN profile.\n * Standard_ChinaCdn = The SKU name for a China CDN profile for VOD, Web and download scenarios using GB based billing model.\n * Standard_Microsoft = The SKU name for a Standard Microsoft CDN profile.\n * Standard_AzureFrontDoor =  The SKU name for an Azure Front Door Standard profile.\n * Premium_AzureFrontDoor = The SKU name for an Azure Front Door Premium profile.\n * Standard_955BandWidth_ChinaCdn = The SKU name for a China CDN profile for VOD, Web and download scenarios using 95-5 peak bandwidth billing model.\n * Standard_AvgBandWidth_ChinaCdn = The SKU name for a China CDN profile for VOD, Web and download scenarios using monthly average peak bandwidth billing model.\n * StandardPlus_ChinaCdn = The SKU name for a China CDN profile for live-streaming using GB based billing model.\n * StandardPlus_955BandWidth_ChinaCdn = The SKU name for a China CDN live-streaming profile using 95-5 peak bandwidth billing model.\n * StandardPlus_AvgBandWidth_ChinaCdn = The SKU name for a China CDN live-streaming profile using monthly average peak bandwidth billing model.\n *\n */\nexport interface Sku {\n  /** Name of the pricing tier. */\n  name?: SkuName;\n}\n\n/** Error response indicates Azure Front Door Standard or Azure Front Door Premium or CDN service is not able to process the incoming request. The reason is provided in the error message. */\nexport interface ErrorResponse {\n  /** The error object. */\n  error?: ErrorDetail;\n}\n\n/** Properties required to update a profile. */\nexport interface ProfileUpdateParameters {\n  /** Profile tags */\n  tags?: { [propertyName: string]: string };\n  /** Send and receive timeout on forwarding request to the origin. When timeout is reached, the request fails and returns. */\n  originResponseTimeoutSeconds?: number;\n}\n\n/** The URI required to login to the supplemental portal from the Azure portal. */\nexport interface SsoUri {\n  /**\n   * The URI used to login to the supplemental portal.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ssoUriValue?: string;\n}\n\n/** The result of the GetSupportedOptimizationTypes API */\nexport interface SupportedOptimizationTypesListResult {\n  /**\n   * Supported optimization types for a profile.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly supportedOptimizationTypes?: OptimizationType[];\n}\n\n/** Output of check resource usage API. */\nexport interface ResourceUsageListResult {\n  /**\n   * List of resource usages.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ResourceUsage[];\n  /** URL to get the next set of custom domain objects if there are any. */\n  nextLink?: string;\n}\n\n/** Output of check resource usage API. */\nexport interface ResourceUsage {\n  /**\n   * Resource type for which the usage is provided.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceType?: string;\n  /**\n   * Unit of the usage. e.g. count.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unit?: ResourceUsageUnit;\n  /**\n   * Actual value of usage on the specified resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentValue?: number;\n  /**\n   * Quota of the specified resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly limit?: number;\n}\n\n/** Result of the request to list endpoints. It contains a list of endpoint objects and a URL link to get the next set of results. */\nexport interface EndpointListResult {\n  /**\n   * List of CDN endpoints within a profile\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Endpoint[];\n  /** URL to get the next set of endpoint objects if there is any. */\n  nextLink?: string;\n}\n\n/** The main origin of CDN content which is added when creating a CDN endpoint. */\nexport interface DeepCreatedOrigin {\n  /** Origin name which must be unique within the endpoint. */\n  name: string;\n  /** The address of the origin. It can be a domain name, IPv4 address, or IPv6 address. This should be unique across all origins in an endpoint. */\n  hostName?: string;\n  /** The value of the HTTP port. Must be between 1 and 65535. */\n  httpPort?: number;\n  /** The value of the HTTPS port. Must be between 1 and 65535. */\n  httpsPort?: number;\n  /** The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. */\n  originHostHeader?: string;\n  /** Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5. */\n  priority?: number;\n  /** Weight of the origin in given origin group for load balancing. Must be between 1 and 1000 */\n  weight?: number;\n  /** Origin is enabled for load balancing or not. By default, origin is always enabled. */\n  enabled?: boolean;\n  /** The Alias of the Private Link resource. Populating this optional field indicates that this origin is 'Private' */\n  privateLinkAlias?: string;\n  /** The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private' */\n  privateLinkResourceId?: string;\n  /** The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated */\n  privateLinkLocation?: string;\n  /** A custom message to be included in the approval request to connect to the Private Link. */\n  privateLinkApprovalMessage?: string;\n  /**\n   * The approval status for the connection to the Private Link\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateEndpointStatus?: PrivateEndpointStatus;\n}\n\n/** The origin group for CDN content which is added when creating a CDN endpoint. Traffic is sent to the origins within the origin group based on origin health. */\nexport interface DeepCreatedOriginGroup {\n  /** Origin group name which must be unique within the endpoint. */\n  name: string;\n  /** Health probe settings to the origin that is used to determine the health of the origin. */\n  healthProbeSettings?: HealthProbeParameters;\n  /** The source of the content being delivered via CDN within given origin group. */\n  origins?: ResourceReference[];\n  /** Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported. */\n  trafficRestorationTimeToHealedOrNewEndpointsInMinutes?: number;\n  /** The JSON object that contains the properties to determine origin health using real requests/responses.This property is currently not supported. */\n  responseBasedOriginErrorDetectionSettings?: ResponseBasedOriginErrorDetectionParameters;\n}\n\n/** The JSON object that contains the properties to determine origin health using real requests/responses. */\nexport interface ResponseBasedOriginErrorDetectionParameters {\n  /** Type of response errors for real user requests for which origin will be deemed unhealthy */\n  responseBasedDetectedErrorTypes?: ResponseBasedDetectedErrorTypes;\n  /** The percentage of failed requests in the sample where failover should trigger. */\n  responseBasedFailoverThresholdPercentage?: number;\n  /** The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy. */\n  httpErrorRanges?: HttpErrorRangeParameters[];\n}\n\n/** The JSON object that represents the range for http status codes */\nexport interface HttpErrorRangeParameters {\n  /** The inclusive start of the http status code range. */\n  begin?: number;\n  /** The inclusive end of the http status code range. */\n  end?: number;\n}\n\n/** Custom domains created on the CDN endpoint. */\nexport interface DeepCreatedCustomDomain {\n  /** Custom domain name. */\n  name: string;\n  /** The host name of the custom domain. Must be a domain name. */\n  hostName?: string;\n  /** Special validation or data may be required when delivering CDN to some regions due to local compliance reasons. E.g. ICP license number of a custom domain is required to deliver content in China. */\n  validationData?: string;\n}\n\n/** The JSON object containing endpoint update parameters. */\nexport interface EndpointPropertiesUpdateParameters {\n  /** A directory path on the origin that CDN can use to retrieve content from, e.g. contoso.cloudapp.net/originpath. */\n  originPath?: string;\n  /** List of content types on which compression applies. The value should be a valid MIME type. */\n  contentTypesToCompress?: string[];\n  /** The host header value sent to the origin with each request. This property at Endpoint is only allowed when endpoint uses single origin and can be overridden by the same property specified at origin.If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. */\n  originHostHeader?: string;\n  /** Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content is smaller than 1 byte or larger than 1 MB. */\n  isCompressionEnabled?: boolean;\n  /** Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed. */\n  isHttpAllowed?: boolean;\n  /** Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed. */\n  isHttpsAllowed?: boolean;\n  /** Defines how CDN caches requests that include query strings. You can ignore any query strings when caching, bypass caching to prevent requests that contain query strings from being cached, or cache every request with a unique URL. */\n  queryStringCachingBehavior?: QueryStringCachingBehavior;\n  /** Specifies what scenario the customer wants this CDN endpoint to optimize for, e.g. Download, Media services. With this information, CDN can apply scenario driven optimization. */\n  optimizationType?: OptimizationType;\n  /** Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the origin path. This property is only relevant when using a single origin. */\n  probePath?: string;\n  /** List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule to a specified path or content, e.g. block APAC for path /pictures/ */\n  geoFilters?: GeoFilter[];\n  /** A reference to the origin group. */\n  defaultOriginGroup?: ResourceReference;\n  /** List of keys used to validate the signed URL hashes. */\n  urlSigningKeys?: UrlSigningKey[];\n  /** A policy that specifies the delivery rules to be used for an endpoint. */\n  deliveryPolicy?: EndpointPropertiesUpdateParametersDeliveryPolicy;\n  /** Defines the Web Application Firewall policy for the endpoint (if applicable) */\n  webApplicationFirewallPolicyLink?: EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink;\n}\n\n/** Rules defining user's geo access within a CDN endpoint. */\nexport interface GeoFilter {\n  /** Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.) */\n  relativePath: string;\n  /** Action of the geo filter, i.e. allow or block access. */\n  action: GeoFilterActions;\n  /** Two letter country or region codes defining user country or region access in a geo filter, e.g. AU, MX, US. */\n  countryCodes: string[];\n}\n\n/** Url signing key */\nexport interface UrlSigningKey {\n  /** Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash. */\n  keyId: string;\n  /** Defines the parameters for using customer key vault for Url Signing Key. */\n  keySourceParameters: KeyVaultSigningKeyParameters;\n}\n\n/** Describes the parameters for using a user's KeyVault for URL Signing Key. */\nexport interface KeyVaultSigningKeyParameters {\n  typeName: \"KeyVaultSigningKeyParameters\";\n  /** Subscription Id of the user's Key Vault containing the secret */\n  subscriptionId: string;\n  /** Resource group of the user's Key Vault containing the secret */\n  resourceGroupName: string;\n  /** The name of the user's Key Vault containing the secret */\n  vaultName: string;\n  /** The name of secret in Key Vault. */\n  secretName: string;\n  /** The version(GUID) of secret in Key Vault. */\n  secretVersion: string;\n}\n\n/** A policy that specifies the delivery rules to be used for an endpoint. */\nexport interface EndpointPropertiesUpdateParametersDeliveryPolicy {\n  /** User-friendly description of the policy. */\n  description?: string;\n  /** A list of the delivery rules. */\n  rules: DeliveryRule[];\n}\n\n/** A rule that specifies a set of actions and conditions */\nexport interface DeliveryRule {\n  /** Name of the rule */\n  name?: string;\n  /** The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied. */\n  order: number;\n  /** A list of conditions that must be matched for the actions to be executed */\n  conditions?: DeliveryRuleConditionUnion[];\n  /** A list of actions that are executed when all the conditions of a rule are satisfied. */\n  actions: DeliveryRuleActionAutoGeneratedUnion[];\n}\n\n/** Defines the Web Application Firewall policy for the endpoint (if applicable) */\nexport interface EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink {\n  /** Resource ID. */\n  id?: string;\n}\n\n/** Properties required to create or update an endpoint. */\nexport interface EndpointUpdateParameters {\n  /** Endpoint tags. */\n  tags?: { [propertyName: string]: string };\n  /** A directory path on the origin that CDN can use to retrieve content from, e.g. contoso.cloudapp.net/originpath. */\n  originPath?: string;\n  /** List of content types on which compression applies. The value should be a valid MIME type. */\n  contentTypesToCompress?: string[];\n  /** The host header value sent to the origin with each request. This property at Endpoint is only allowed when endpoint uses single origin and can be overridden by the same property specified at origin.If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. */\n  originHostHeader?: string;\n  /** Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content is smaller than 1 byte or larger than 1 MB. */\n  isCompressionEnabled?: boolean;\n  /** Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed. */\n  isHttpAllowed?: boolean;\n  /** Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed. */\n  isHttpsAllowed?: boolean;\n  /** Defines how CDN caches requests that include query strings. You can ignore any query strings when caching, bypass caching to prevent requests that contain query strings from being cached, or cache every request with a unique URL. */\n  queryStringCachingBehavior?: QueryStringCachingBehavior;\n  /** Specifies what scenario the customer wants this CDN endpoint to optimize for, e.g. Download, Media services. With this information, CDN can apply scenario driven optimization. */\n  optimizationType?: OptimizationType;\n  /** Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the origin path. This property is only relevant when using a single origin. */\n  probePath?: string;\n  /** List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule to a specified path or content, e.g. block APAC for path /pictures/ */\n  geoFilters?: GeoFilter[];\n  /** A reference to the origin group. */\n  defaultOriginGroup?: ResourceReference;\n  /** List of keys used to validate the signed URL hashes. */\n  urlSigningKeys?: UrlSigningKey[];\n  /** A policy that specifies the delivery rules to be used for an endpoint. */\n  deliveryPolicy?: EndpointPropertiesUpdateParametersDeliveryPolicy;\n  /** Defines the Web Application Firewall policy for the endpoint (if applicable) */\n  webApplicationFirewallPolicyLink?: EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink;\n}\n\n/** Parameters required for content purge. */\nexport interface PurgeParameters {\n  /** The path to the content to be purged. Can describe a file path or a wild card directory. */\n  contentPaths: string[];\n}\n\n/** Parameters required for content load. */\nexport interface LoadParameters {\n  /** The path to the content to be loaded. Path should be a relative file URL of the origin. */\n  contentPaths: string[];\n}\n\n/** Result of the request to list origins. It contains a list of origin objects and a URL link to get the next set of results. */\nexport interface OriginListResult {\n  /**\n   * List of CDN origins within an endpoint\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Origin[];\n  /** URL to get the next set of origin objects if there are any. */\n  nextLink?: string;\n}\n\n/** The JSON object that contains the properties of the origin. */\nexport interface OriginUpdatePropertiesParameters {\n  /** The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint. */\n  hostName?: string;\n  /** The value of the HTTP port. Must be between 1 and 65535. */\n  httpPort?: number;\n  /** The value of the HTTPS port. Must be between 1 and 65535. */\n  httpsPort?: number;\n  /** The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint */\n  originHostHeader?: string;\n  /** Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5 */\n  priority?: number;\n  /** Weight of the origin in given origin group for load balancing. Must be between 1 and 1000 */\n  weight?: number;\n  /** Origin is enabled for load balancing or not */\n  enabled?: boolean;\n  /** The Alias of the Private Link resource. Populating this optional field indicates that this origin is 'Private' */\n  privateLinkAlias?: string;\n  /** The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private' */\n  privateLinkResourceId?: string;\n  /** The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated */\n  privateLinkLocation?: string;\n  /** A custom message to be included in the approval request to connect to the Private Link. */\n  privateLinkApprovalMessage?: string;\n}\n\n/** Origin properties needed for origin update. */\nexport interface OriginUpdateParameters {\n  /** The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint. */\n  hostName?: string;\n  /** The value of the HTTP port. Must be between 1 and 65535. */\n  httpPort?: number;\n  /** The value of the HTTPS port. Must be between 1 and 65535. */\n  httpsPort?: number;\n  /** The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint */\n  originHostHeader?: string;\n  /** Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5 */\n  priority?: number;\n  /** Weight of the origin in given origin group for load balancing. Must be between 1 and 1000 */\n  weight?: number;\n  /** Origin is enabled for load balancing or not */\n  enabled?: boolean;\n  /** The Alias of the Private Link resource. Populating this optional field indicates that this origin is 'Private' */\n  privateLinkAlias?: string;\n  /** The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private' */\n  privateLinkResourceId?: string;\n  /** The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated */\n  privateLinkLocation?: string;\n  /** A custom message to be included in the approval request to connect to the Private Link. */\n  privateLinkApprovalMessage?: string;\n}\n\n/** Result of the request to list origin groups. It contains a list of origin groups objects and a URL link to get the next set of results. */\nexport interface OriginGroupListResult {\n  /**\n   * List of CDN origin groups within an endpoint\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: OriginGroup[];\n  /** URL to get the next set of origin objects if there are any. */\n  nextLink?: string;\n}\n\n/** The JSON object that contains the properties of the origin group. */\nexport interface OriginGroupUpdatePropertiesParameters {\n  /** Health probe settings to the origin that is used to determine the health of the origin. */\n  healthProbeSettings?: HealthProbeParameters;\n  /** The source of the content being delivered via CDN within given origin group. */\n  origins?: ResourceReference[];\n  /** Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported. */\n  trafficRestorationTimeToHealedOrNewEndpointsInMinutes?: number;\n  /** The JSON object that contains the properties to determine origin health using real requests/responses. This property is currently not supported. */\n  responseBasedOriginErrorDetectionSettings?: ResponseBasedOriginErrorDetectionParameters;\n}\n\n/** Origin group properties needed for origin group creation or update. */\nexport interface OriginGroupUpdateParameters {\n  /** Health probe settings to the origin that is used to determine the health of the origin. */\n  healthProbeSettings?: HealthProbeParameters;\n  /** The source of the content being delivered via CDN within given origin group. */\n  origins?: ResourceReference[];\n  /** Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported. */\n  trafficRestorationTimeToHealedOrNewEndpointsInMinutes?: number;\n  /** The JSON object that contains the properties to determine origin health using real requests/responses. This property is currently not supported. */\n  responseBasedOriginErrorDetectionSettings?: ResponseBasedOriginErrorDetectionParameters;\n}\n\n/** Result of the request to list custom domains. It contains a list of custom domain objects and a URL link to get the next set of results. */\nexport interface CustomDomainListResult {\n  /**\n   * List of CDN CustomDomains within an endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: CustomDomain[];\n  /** URL to get the next set of custom domain objects if there are any. */\n  nextLink?: string;\n}\n\n/** The JSON object that contains the properties to secure a custom domain. */\nexport interface CustomDomainHttpsParameters {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  certificateSource: \"Cdn\" | \"AzureKeyVault\";\n  /** Defines the TLS extension protocol that is used for secure delivery. */\n  protocolType: ProtocolType;\n  /** TLS protocol version that will be used for Https */\n  minimumTlsVersion?: MinimumTlsVersion;\n}\n\n/** The customDomain JSON object required for custom domain creation or update. */\nexport interface CustomDomainParameters {\n  /** The host name of the custom domain. Must be a domain name. */\n  hostName?: string;\n}\n\n/** Input of CheckNameAvailability API. */\nexport interface CheckNameAvailabilityInput {\n  /** The resource name to validate. */\n  name: string;\n  /** The type of the resource whose name is to be validated. */\n  type: ResourceType;\n}\n\n/** Input of the validate probe API. */\nexport interface ValidateProbeInput {\n  /** The probe URL to validate. */\n  probeURL: string;\n}\n\n/** Output of the validate probe API. */\nexport interface ValidateProbeOutput {\n  /**\n   * Indicates whether the probe URL is accepted or not.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isValid?: boolean;\n  /**\n   * Specifies the error code when the probe url is not accepted.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorCode?: string;\n  /**\n   * The detailed error message describing why the probe URL is not accepted.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n}\n\n/** Result of the request to list CDN operations. It contains a list of operations and a URL link to get the next set of results. */\nexport interface OperationsListResult {\n  /** List of CDN operations supported by the CDN resource provider. */\n  value?: Operation[];\n  /** URL to get the next set of operation list results if there are any. */\n  nextLink?: string;\n}\n\n/** CDN REST API operation */\nexport interface Operation {\n  /**\n   * Operation name: {provider}/{resource}/{operation}\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /** Indicates whether the operation is a data action */\n  isDataAction?: boolean;\n  /** The object that represents the operation. */\n  display?: OperationDisplay;\n  /**\n   * The origin of operations.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly origin?: string;\n  /** One property of operation, include metric specifications. */\n  serviceSpecification?: ServiceSpecification;\n}\n\n/** The object that represents the operation. */\nexport interface OperationDisplay {\n  /**\n   * Service provider: Microsoft.Cdn\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provider?: string;\n  /**\n   * Resource on which the operation is performed: Profile, endpoint, etc.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resource?: string;\n  /**\n   * Operation type: Read, write, delete, etc.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operation?: string;\n  /**\n   * Description of operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly description?: string;\n}\n\n/** One property of operation, include log specifications. */\nexport interface ServiceSpecification {\n  /** Log specifications of operation. */\n  logSpecifications?: LogSpecification[];\n  /** Metric specifications of operation. */\n  metricSpecifications?: MetricSpecification[];\n}\n\n/** Log specification of operation. */\nexport interface LogSpecification {\n  /** Name of log specification. */\n  name?: string;\n  /** Display name of log specification. */\n  displayName?: string;\n  /** Blob duration of specification. */\n  blobDuration?: string;\n  /** Pattern to filter based on name */\n  logFilterPattern?: string;\n}\n\n/** Metric specification of operation. */\nexport interface MetricSpecification {\n  /** Name of metric specification. */\n  name?: string;\n  /** Display name of metric specification. */\n  displayName?: string;\n  /** Display description of metric specification. */\n  displayDescription?: string;\n  /** The metric unit. Possible values include: 'Bytes', 'Count', 'Milliseconds'. */\n  unit?: string;\n  /** The metric aggregation type. Possible values include: 'Average', 'Count', 'Total'. */\n  aggregationType?: string;\n  /** Retention policies of a resource metric. */\n  availabilities?: MetricAvailability[];\n  /** The supported time grain types for the metrics. */\n  supportedTimeGrainTypes?: string[];\n  /** The dimensions of metric */\n  dimensions?: DimensionProperties[];\n  /** Property to specify whether to fill gap with zero. */\n  fillGapWithZero?: boolean;\n  /** Pattern to filter based on name */\n  metricFilterPattern?: string;\n  /** Property to specify metric is internal or not. */\n  isInternal?: boolean;\n}\n\n/** Retention policy of a resource metric. */\nexport interface MetricAvailability {\n  timeGrain?: string;\n  blobDuration?: string;\n}\n\n/** Type of operation: get, read, delete, etc. */\nexport interface DimensionProperties {\n  /** Name of dimension. */\n  name?: string;\n  /** Display name of dimension. */\n  displayName?: string;\n  /** Internal name of dimension. */\n  internalName?: string;\n}\n\n/** Result of the request to list CDN edgenodes. It contains a list of ip address group and a URL link to get the next set of results. */\nexport interface EdgenodeResult {\n  /**\n   * Edge node of CDN service.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: EdgeNode[];\n  /** URL to get the next set of edgenode list results if there are any. */\n  nextLink?: string;\n}\n\n/** CDN Ip address group */\nexport interface IpAddressGroup {\n  /** The delivery region of the ip address group */\n  deliveryRegion?: string;\n  /** The list of ip v4 addresses. */\n  ipv4Addresses?: CidrIpAddress[];\n  /** The list of ip v6 addresses. */\n  ipv6Addresses?: CidrIpAddress[];\n}\n\n/** CIDR Ip address */\nexport interface CidrIpAddress {\n  /** Ip address itself. */\n  baseIpAddress?: string;\n  /** The length of the prefix of the ip address. */\n  prefixLength?: number;\n}\n\n/** Defines a list of WebApplicationFirewallPolicies for Azure CDN. It contains a list of WebApplicationFirewallPolicy objects and a URL link to get the next set of results. */\nexport interface CdnWebApplicationFirewallPolicyList {\n  /**\n   * List of Azure CDN WebApplicationFirewallPolicies within a resource group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: CdnWebApplicationFirewallPolicy[];\n  /** URL to get the next set of WebApplicationFirewallPolicy objects if there are any. */\n  nextLink?: string;\n}\n\n/** Defines contents of a web application firewall global configuration */\nexport interface PolicySettings {\n  /** describes if the policy is in enabled state or disabled state */\n  enabledState?: PolicyEnabledState;\n  /** Describes if it is in detection mode or prevention mode at policy level. */\n  mode?: PolicyMode;\n  /** If action type is redirect, this field represents the default redirect URL for the client. */\n  defaultRedirectUrl?: string;\n  /** If the action type is block, this field defines the default customer overridable http response status code. */\n  defaultCustomBlockResponseStatusCode?: PolicySettingsDefaultCustomBlockResponseStatusCode;\n  /** If the action type is block, customer can override the response body. The body must be specified in base64 encoding. */\n  defaultCustomBlockResponseBody?: string;\n}\n\n/** Defines contents of rate limit rules */\nexport interface RateLimitRuleList {\n  /** List of rules */\n  rules?: RateLimitRule[];\n}\n\n/** Defines the common attributes for a custom rule that can be included in a waf policy */\nexport interface CustomRule {\n  /** Defines the name of the custom rule */\n  name: string;\n  /** Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified. */\n  enabledState?: CustomRuleEnabledState;\n  /** Defines in what order this rule be evaluated in the overall list of custom rules */\n  priority: number;\n  /** List of match conditions. */\n  matchConditions: MatchCondition[];\n  /** Describes what action to be applied when rule matches */\n  action: ActionType;\n}\n\n/** Define match conditions */\nexport interface MatchCondition {\n  /** Match variable to compare against. */\n  matchVariable: WafMatchVariable;\n  /** Selector can used to match a specific key for QueryString, Cookies, RequestHeader or PostArgs. */\n  selector?: string;\n  /** Describes operator to be matched */\n  operator: Operator;\n  /** Describes if the result of this condition should be negated. */\n  negateCondition?: boolean;\n  /** List of possible match values. */\n  matchValue: string[];\n  /** List of transforms. */\n  transforms?: TransformType[];\n}\n\n/** Defines contents of custom rules */\nexport interface CustomRuleList {\n  /** List of rules */\n  rules?: CustomRule[];\n}\n\n/** Defines the list of managed rule sets for the policy. */\nexport interface ManagedRuleSetList {\n  /** List of rule sets. */\n  managedRuleSets?: ManagedRuleSet[];\n}\n\n/** Defines a managed rule set. */\nexport interface ManagedRuleSet {\n  /** Defines the rule set type to use. */\n  ruleSetType: string;\n  /** Defines the version of the rule set to use. */\n  ruleSetVersion: string;\n  /** Verizon only : If the rule set supports anomaly detection mode, this describes the threshold for blocking requests. */\n  anomalyScore?: number;\n  /** Defines the rule overrides to apply to the rule set. */\n  ruleGroupOverrides?: ManagedRuleGroupOverride[];\n}\n\n/** Defines a managed rule group override setting. */\nexport interface ManagedRuleGroupOverride {\n  /** Describes the managed rule group within the rule set to override */\n  ruleGroupName: string;\n  /** List of rules that will be enabled. If none specified, all rules in the group will be disabled. */\n  rules?: ManagedRuleOverride[];\n}\n\n/** Defines a managed rule group override setting. */\nexport interface ManagedRuleOverride {\n  /** Identifier for the managed rule. */\n  ruleId: string;\n  /** Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified. */\n  enabledState?: ManagedRuleEnabledState;\n  /** Describes the override action to be applied when rule matches. */\n  action?: ActionType;\n}\n\n/** Defines the ARM Resource ID for the linked endpoints */\nexport interface CdnEndpoint {\n  /** ARM Resource ID string. */\n  id?: string;\n}\n\n/** Properties required to update a CdnWebApplicationFirewallPolicy. */\nexport interface CdnWebApplicationFirewallPolicyPatchParameters {\n  /** CdnWebApplicationFirewallPolicy tags */\n  tags?: { [propertyName: string]: string };\n}\n\n/** List of managed rule set definitions available for use in a policy. */\nexport interface ManagedRuleSetDefinitionList {\n  /**\n   * List of managed rule set definitions.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ManagedRuleSetDefinition[];\n  /** URL to retrieve next set of managed rule set definitions. */\n  nextLink?: string;\n}\n\n/** Describes a managed rule group. */\nexport interface ManagedRuleGroupDefinition {\n  /**\n   * Name of the managed rule group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ruleGroupName?: string;\n  /**\n   * Description of the managed rule group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly description?: string;\n  /**\n   * List of rules within the managed rule group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly rules?: ManagedRuleDefinition[];\n}\n\n/** Describes a managed rule definition. */\nexport interface ManagedRuleDefinition {\n  /**\n   * Identifier for the managed rule.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ruleId?: string;\n  /**\n   * Describes the functionality of the managed rule.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly description?: string;\n}\n\n/** Certificate used for https */\nexport interface Certificate {\n  /** The type of the secret resource. */\n  type?: SecretType;\n  /**\n   * Subject name in the certificate.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subject?: string;\n  /**\n   * Certificate expiration date.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly expirationDate?: string;\n}\n\n/** settings for security policy patterns to match */\nexport interface SecurityPolicyWebApplicationFirewallAssociation {\n  /** List of domains. */\n  domains?: ActivatedResourceReference[];\n  /** List of paths */\n  patternsToMatch?: string[];\n}\n\n/** The validation token. */\nexport interface ValidationToken {\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly token?: string;\n}\n\n/** Defines the parameters for RemoteAddress match conditions */\nexport interface RemoteAddressMatchConditionParameters {\n  typeName: \"DeliveryRuleRemoteAddressConditionParameters\";\n  /** Describes operator to be matched */\n  operator: RemoteAddressOperator;\n  /** Describes if this is negate condition or not */\n  negateCondition?: boolean;\n  /** Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match. */\n  matchValues?: string[];\n  /** List of transforms */\n  transforms?: Transform[];\n}\n\n/** Defines the parameters for RequestMethod match conditions */\nexport interface RequestMethodMatchConditionParameters {\n  typeName: \"DeliveryRuleRequestMethodConditionParameters\";\n  /** Describes operator to be matched */\n  operator: RequestMethodOperator;\n  /** Describes if this is negate condition or not */\n  negateCondition?: boolean;\n  /** List of transforms */\n  transforms?: Transform[];\n  /** The match value for the condition of the delivery rule */\n  matchValues?: RequestMethodMatchConditionParametersMatchValuesItem[];\n}\n\n/** Defines the parameters for QueryString match conditions */\nexport interface QueryStringMatchConditionParameters {\n  typeName: \"DeliveryRuleQueryStringConditionParameters\";\n  /** Describes operator to be matched */\n  operator: QueryStringOperator;\n  /** Describes if this is negate condition or not */\n  negateCondition?: boolean;\n  /** The match value for the condition of the delivery rule */\n  matchValues?: string[];\n  /** List of transforms */\n  transforms?: Transform[];\n}\n\n/** Defines the parameters for PostArgs match conditions */\nexport interface PostArgsMatchConditionParameters {\n  typeName: \"DeliveryRulePostArgsConditionParameters\";\n  /** Name of PostArg to be matched */\n  selector?: string;\n  /** Describes operator to be matched */\n  operator: PostArgsOperator;\n  /** Describes if this is negate condition or not */\n  negateCondition?: boolean;\n  /** The match value for the condition of the delivery rule */\n  matchValues?: string[];\n  /** List of transforms */\n  transforms?: Transform[];\n}\n\n/** Defines the parameters for RequestUri match conditions */\nexport interface RequestUriMatchConditionParameters {\n  typeName: \"DeliveryRuleRequestUriConditionParameters\";\n  /** Describes operator to be matched */\n  operator: RequestUriOperator;\n  /** Describes if this is negate condition or not */\n  negateCondition?: boolean;\n  /** The match value for the condition of the delivery rule */\n  matchValues?: string[];\n  /** List of transforms */\n  transforms?: Transform[];\n}\n\n/** Defines the parameters for RequestHeader match conditions */\nexport interface RequestHeaderMatchConditionParameters {\n  typeName: \"DeliveryRuleRequestHeaderConditionParameters\";\n  /** Name of Header to be matched */\n  selector?: string;\n  /** Describes operator to be matched */\n  operator: RequestHeaderOperator;\n  /** Describes if this is negate condition or not */\n  negateCondition?: boolean;\n  /** The match value for the condition of the delivery rule */\n  matchValues?: string[];\n  /** List of transforms */\n  transforms?: Transform[];\n}\n\n/** Defines the parameters for RequestBody match conditions */\nexport interface RequestBodyMatchConditionParameters {\n  typeName: \"DeliveryRuleRequestBodyConditionParameters\";\n  /** Describes operator to be matched */\n  operator: RequestBodyOperator;\n  /** Describes if this is negate condition or not */\n  negateCondition?: boolean;\n  /** The match value for the condition of the delivery rule */\n  matchValues?: string[];\n  /** List of transforms */\n  transforms?: Transform[];\n}\n\n/** Defines the parameters for RequestScheme match conditions */\nexport interface RequestSchemeMatchConditionParameters {\n  typeName: \"DeliveryRuleRequestSchemeConditionParameters\";\n  /** Describes operator to be matched */\n  operator: \"Equal\";\n  /** Describes if this is negate condition or not */\n  negateCondition?: boolean;\n  /** List of transforms */\n  transforms?: Transform[];\n  /** The match value for the condition of the delivery rule */\n  matchValues?: RequestSchemeMatchConditionParametersMatchValuesItem[];\n}\n\n/** Defines the parameters for UrlPath match conditions */\nexport interface UrlPathMatchConditionParameters {\n  typeName: \"DeliveryRuleUrlPathMatchConditionParameters\";\n  /** Describes operator to be matched */\n  operator: UrlPathOperator;\n  /** Describes if this is negate condition or not */\n  negateCondition?: boolean;\n  /** The match value for the condition of the delivery rule */\n  matchValues?: string[];\n  /** List of transforms */\n  transforms?: Transform[];\n}\n\n/** Defines the parameters for UrlFileExtension match conditions */\nexport interface UrlFileExtensionMatchConditionParameters {\n  typeName: \"DeliveryRuleUrlFileExtensionMatchConditionParameters\";\n  /** Describes operator to be matched */\n  operator: UrlFileExtensionOperator;\n  /** Describes if this is negate condition or not */\n  negateCondition?: boolean;\n  /** The match value for the condition of the delivery rule */\n  matchValues?: string[];\n  /** List of transforms */\n  transforms?: Transform[];\n}\n\n/** Defines the parameters for UrlFilename match conditions */\nexport interface UrlFileNameMatchConditionParameters {\n  typeName: \"DeliveryRuleUrlFilenameConditionParameters\";\n  /** Describes operator to be matched */\n  operator: UrlFileNameOperator;\n  /** Describes if this is negate condition or not */\n  negateCondition?: boolean;\n  /** The match value for the condition of the delivery rule */\n  matchValues?: string[];\n  /** List of transforms */\n  transforms?: Transform[];\n}\n\n/** Defines the parameters for HttpVersion match conditions */\nexport interface HttpVersionMatchConditionParameters {\n  typeName: \"DeliveryRuleHttpVersionConditionParameters\";\n  /** Describes operator to be matched */\n  operator: HttpVersionOperator;\n  /** Describes if this is negate condition or not */\n  negateCondition?: boolean;\n  /** The match value for the condition of the delivery rule */\n  matchValues?: string[];\n  /** List of transforms */\n  transforms?: Transform[];\n}\n\n/** Defines the parameters for Cookies match conditions */\nexport interface CookiesMatchConditionParameters {\n  typeName: \"DeliveryRuleCookiesConditionParameters\";\n  /** Name of Cookies to be matched */\n  selector?: string;\n  /** Describes operator to be matched */\n  operator: CookiesOperator;\n  /** Describes if this is negate condition or not */\n  negateCondition?: boolean;\n  /** The match value for the condition of the delivery rule */\n  matchValues?: string[];\n  /** List of transforms */\n  transforms?: Transform[];\n}\n\n/** Defines the parameters for IsDevice match conditions */\nexport interface IsDeviceMatchConditionParameters {\n  typeName: \"DeliveryRuleIsDeviceConditionParameters\";\n  /** Describes operator to be matched */\n  operator: IsDeviceOperator;\n  /** Describes if this is negate condition or not */\n  negateCondition?: boolean;\n  /** The match value for the condition of the delivery rule */\n  matchValues?: IsDeviceMatchConditionParametersMatchValuesItem[];\n  /** List of transforms */\n  transforms?: Transform[];\n}\n\n/** Defines the parameters for SocketAddress match conditions */\nexport interface SocketAddrMatchConditionParameters {\n  typeName: \"DeliveryRuleSocketAddrConditionParameters\";\n  /** Describes operator to be matched */\n  operator: SocketAddrOperator;\n  /** Describes if this is negate condition or not */\n  negateCondition?: boolean;\n  /** The match value for the condition of the delivery rule */\n  matchValues?: string[];\n  /** List of transforms */\n  transforms?: Transform[];\n}\n\n/** Defines the parameters for ClientPort match conditions */\nexport interface ClientPortMatchConditionParameters {\n  typeName: \"DeliveryRuleClientPortConditionParameters\";\n  /** Describes operator to be matched */\n  operator: ClientPortOperator;\n  /** Describes if this is negate condition or not */\n  negateCondition?: boolean;\n  /** The match value for the condition of the delivery rule */\n  matchValues?: string[];\n  /** List of transforms */\n  transforms?: Transform[];\n}\n\n/** Defines the parameters for ServerPort match conditions */\nexport interface ServerPortMatchConditionParameters {\n  typeName: \"DeliveryRuleServerPortConditionParameters\";\n  /** Describes operator to be matched */\n  operator: ServerPortOperator;\n  /** Describes if this is negate condition or not */\n  negateCondition?: boolean;\n  /** The match value for the condition of the delivery rule */\n  matchValues?: string[];\n  /** List of transforms */\n  transforms?: Transform[];\n}\n\n/** Defines the parameters for HostName match conditions */\nexport interface HostNameMatchConditionParameters {\n  typeName: \"DeliveryRuleHostNameConditionParameters\";\n  /** Describes operator to be matched */\n  operator: HostNameOperator;\n  /** Describes if this is negate condition or not */\n  negateCondition?: boolean;\n  /** The match value for the condition of the delivery rule */\n  matchValues?: string[];\n  /** List of transforms */\n  transforms?: Transform[];\n}\n\n/** Defines the parameters for SslProtocol match conditions */\nexport interface SslProtocolMatchConditionParameters {\n  typeName: \"DeliveryRuleSslProtocolConditionParameters\";\n  /** Describes operator to be matched */\n  operator: SslProtocolOperator;\n  /** Describes if this is negate condition or not */\n  negateCondition?: boolean;\n  /** The match value for the condition of the delivery rule */\n  matchValues?: SslProtocol[];\n  /** List of transforms */\n  transforms?: Transform[];\n}\n\n/** Defines the parameters for the url redirect action. */\nexport interface UrlRedirectActionParameters {\n  typeName: \"DeliveryRuleUrlRedirectActionParameters\";\n  /** The redirect type the rule will use when redirecting traffic. */\n  redirectType: RedirectType;\n  /** Protocol to use for the redirect. The default value is MatchRequest */\n  destinationProtocol?: DestinationProtocol;\n  /** The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path. */\n  customPath?: string;\n  /** Host to redirect. Leave empty to use the incoming host as the destination host. */\n  customHostname?: string;\n  /** The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added automatically so do not include them. */\n  customQueryString?: string;\n  /** Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #. */\n  customFragment?: string;\n}\n\n/** Defines the parameters for the Url Signing action. */\nexport interface UrlSigningActionParameters {\n  typeName: \"DeliveryRuleUrlSigningActionParameters\";\n  /** Algorithm to use for URL signing */\n  algorithm?: Algorithm;\n  /** Defines which query string parameters in the url to be considered for expires, key id etc. */\n  parameterNameOverride?: UrlSigningParamIdentifier[];\n}\n\n/** Defines how to identify a parameter for a specific purpose e.g. expires */\nexport interface UrlSigningParamIdentifier {\n  /** Indicates the purpose of the parameter */\n  paramIndicator: ParamIndicator;\n  /** Parameter name */\n  paramName: string;\n}\n\n/** Defines the parameters for the origin group override action. */\nexport interface OriginGroupOverrideActionParameters {\n  typeName: \"DeliveryRuleOriginGroupOverrideActionParameters\";\n  /** defines the OriginGroup that would override the DefaultOriginGroup. */\n  originGroup: ResourceReference;\n}\n\n/** Defines the parameters for the url rewrite action. */\nexport interface UrlRewriteActionParameters {\n  typeName: \"DeliveryRuleUrlRewriteActionParameters\";\n  /** define a request URI pattern that identifies the type of requests that may be rewritten. If value is blank, all strings are matched. */\n  sourcePattern: string;\n  /** Define the relative URL to which the above requests will be rewritten by. */\n  destination: string;\n  /** Whether to preserve unmatched path. Default value is true. */\n  preserveUnmatchedPath?: boolean;\n}\n\n/** Defines the parameters for the request header action. */\nexport interface HeaderActionParameters {\n  typeName: \"DeliveryRuleHeaderActionParameters\";\n  /** Action to perform */\n  headerAction: HeaderAction;\n  /** Name of the header to modify */\n  headerName: string;\n  /** Value for the specified action */\n  value?: string;\n}\n\n/** Defines the parameters for the cache expiration action. */\nexport interface CacheExpirationActionParameters {\n  typeName: \"DeliveryRuleCacheExpirationActionParameters\";\n  /** Caching behavior for the requests */\n  cacheBehavior: CacheBehavior;\n  /** The level at which the content needs to be cached. */\n  cacheType: CacheType;\n  /** The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss */\n  cacheDuration?: string;\n}\n\n/** Defines the parameters for the cache-key query string action. */\nexport interface CacheKeyQueryStringActionParameters {\n  typeName: \"DeliveryRuleCacheKeyQueryStringBehaviorActionParameters\";\n  /** Caching behavior for the requests */\n  queryStringBehavior: QueryStringBehavior;\n  /** query parameters to include or exclude (comma separated). */\n  queryParameters?: string;\n}\n\n/** Defines the parameters for the route configuration override action. */\nexport interface RouteConfigurationOverrideActionParameters {\n  typeName: \"DeliveryRuleRouteConfigurationOverrideActionParameters\";\n  /** A reference to the origin group override configuration. Leave empty to use the default origin group on route. */\n  originGroupOverride?: OriginGroupOverride;\n  /** The caching configuration associated with this rule. To disable caching, do not provide a cacheConfiguration object. */\n  cacheConfiguration?: CacheConfiguration;\n}\n\n/** Defines the parameters for the origin group override configuration. */\nexport interface OriginGroupOverride {\n  /** defines the OriginGroup that would override the DefaultOriginGroup on route. */\n  originGroup?: ResourceReference;\n  /** Protocol this rule will use when forwarding traffic to backends. */\n  forwardingProtocol?: ForwardingProtocol;\n}\n\n/** Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object. */\nexport interface CacheConfiguration {\n  /** Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore specific query strings, cache every request with a unique URL, or cache specific query strings. */\n  queryStringCachingBehavior?: RuleQueryStringCachingBehavior;\n  /** query parameters to include or exclude (comma separated). */\n  queryParameters?: string;\n  /** Indicates whether content compression is enabled. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB. */\n  isCompressionEnabled?: RuleIsCompressionEnabled;\n  /** Caching behavior for the requests */\n  cacheBehavior?: RuleCacheBehavior;\n  /** The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss */\n  cacheDuration?: string;\n}\n\n/** Defines the parameters for using CDN managed certificate for securing custom domain. */\nexport interface CdnCertificateSourceParameters {\n  typeName: \"CdnCertificateSourceParameters\";\n  /** Type of certificate used */\n  certificateType: CertificateType;\n}\n\n/** Describes the parameters for using a user's KeyVault certificate for securing custom domain. */\nexport interface KeyVaultCertificateSourceParameters {\n  typeName: \"KeyVaultCertificateSourceParameters\";\n  /** Subscription Id of the user's Key Vault containing the SSL certificate */\n  subscriptionId: string;\n  /** Resource group of the user's Key Vault containing the SSL certificate */\n  resourceGroupName: string;\n  /** The name of the user's Key Vault containing the SSL certificate */\n  vaultName: string;\n  /** The name of Key Vault Secret (representing the full certificate PFX) in Key Vault. */\n  secretName: string;\n  /** The version(GUID) of Key Vault Secret in Key Vault. */\n  secretVersion?: string;\n  /** Describes the action that shall be taken when the certificate is updated in Key Vault. */\n  updateRule: UpdateRule;\n  /** Describes the action that shall be taken when the certificate is removed from Key Vault. */\n  deleteRule: DeleteRule;\n}\n\n/** The JSON object that contains the properties of the domain to create. */\nexport interface AFDDomainProperties\n  extends AFDDomainUpdatePropertiesParameters,\n    AFDStateProperties {\n  /**\n   * Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step. DCV stands for DomainControlValidation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly domainValidationState?: DomainValidationState;\n  /** The host name of the domain. Must be a domain name. */\n  hostName: string;\n  /**\n   * Values the customer needs to validate domain ownership\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly validationProperties?: DomainValidationProperties;\n}\n\n/** The JSON object that contains the properties required to create an endpoint. */\nexport interface AFDEndpointProperties\n  extends AFDEndpointPropertiesUpdateParameters,\n    AFDStateProperties {\n  /**\n   * The host name of the endpoint structured as {endpointName}.{DNSZone}, e.g. contoso.azureedge.net\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hostName?: string;\n  /** Indicates the endpoint name reuse scope. The default value is TenantReuse. */\n  autoGeneratedDomainNameLabelScope?: AutoGeneratedDomainNameLabelScope;\n}\n\n/** The JSON object that contains the properties of the origin group. */\nexport interface AFDOriginGroupProperties\n  extends AFDOriginGroupUpdatePropertiesParameters,\n    AFDStateProperties {}\n\n/** The JSON object that contains the properties of the origin. */\nexport interface AFDOriginProperties\n  extends AFDOriginUpdatePropertiesParameters,\n    AFDStateProperties {}\n\n/** The JSON object that contains the properties of the Routes to create. */\nexport interface RouteProperties\n  extends RouteUpdatePropertiesParameters,\n    AFDStateProperties {}\n\n/** The JSON object that contains the properties of the Rule Set to create. */\nexport interface RuleSetProperties extends AFDStateProperties {\n  /**\n   * The name of the profile which holds the rule set.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly profileName?: string;\n}\n\n/** The JSON object that contains the properties of the Rules to create. */\nexport interface RuleProperties\n  extends RuleUpdatePropertiesParameters,\n    AFDStateProperties {}\n\n/** The json object that contains properties required to create a security policy */\nexport interface SecurityPolicyProperties extends AFDStateProperties {\n  /**\n   * The name of the profile which holds the security policy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly profileName?: string;\n  /** object which contains security policy parameters */\n  parameters?: SecurityPolicyPropertiesParametersUnion;\n}\n\n/** The JSON object that contains the properties of the Secret to create. */\nexport interface SecretProperties extends AFDStateProperties {\n  /**\n   * The name of the profile which holds the secret.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly profileName?: string;\n  /** object which contains secret parameters */\n  parameters?: SecretParametersUnion;\n}\n\n/** The resource model definition for a ARM proxy resource. It will have everything other than required location and tags */\nexport interface ProxyResource extends Resource {}\n\n/** The resource model definition for a ARM tracked top level resource. */\nexport interface TrackedResource extends Resource {\n  /** Resource location. */\n  location: string;\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Describes a managed rule set definition. */\nexport interface ManagedRuleSetDefinition extends Resource {\n  /** The pricing tier (defines a CDN provider, feature list and rate) of the CdnWebApplicationFirewallPolicy. */\n  sku?: Sku;\n  /**\n   * Provisioning state of the managed rule set.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /**\n   * Type of the managed rule set.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ruleSetType?: string;\n  /**\n   * Version of the managed rule set type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ruleSetVersion?: string;\n  /**\n   * Rule groups of the managed rule set.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ruleGroups?: ManagedRuleGroupDefinition[];\n}\n\n/** Defines the RemoteAddress condition for the delivery rule. */\nexport interface DeliveryRuleRemoteAddressCondition\n  extends DeliveryRuleCondition {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  name: \"RemoteAddress\";\n  /** Defines the parameters for the condition. */\n  parameters: RemoteAddressMatchConditionParameters;\n}\n\n/** Defines the RequestMethod condition for the delivery rule. */\nexport interface DeliveryRuleRequestMethodCondition\n  extends DeliveryRuleCondition {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  name: \"RequestMethod\";\n  /** Defines the parameters for the condition. */\n  parameters: RequestMethodMatchConditionParameters;\n}\n\n/** Defines the QueryString condition for the delivery rule. */\nexport interface DeliveryRuleQueryStringCondition\n  extends DeliveryRuleCondition {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  name: \"QueryString\";\n  /** Defines the parameters for the condition. */\n  parameters: QueryStringMatchConditionParameters;\n}\n\n/** Defines the PostArgs condition for the delivery rule. */\nexport interface DeliveryRulePostArgsCondition extends DeliveryRuleCondition {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  name: \"PostArgs\";\n  /** Defines the parameters for the condition. */\n  parameters: PostArgsMatchConditionParameters;\n}\n\n/** Defines the RequestUri condition for the delivery rule. */\nexport interface DeliveryRuleRequestUriCondition extends DeliveryRuleCondition {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  name: \"RequestUri\";\n  /** Defines the parameters for the condition. */\n  parameters: RequestUriMatchConditionParameters;\n}\n\n/** Defines the RequestHeader condition for the delivery rule. */\nexport interface DeliveryRuleRequestHeaderCondition\n  extends DeliveryRuleCondition {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  name: \"RequestHeader\";\n  /** Defines the parameters for the condition. */\n  parameters: RequestHeaderMatchConditionParameters;\n}\n\n/** Defines the RequestBody condition for the delivery rule. */\nexport interface DeliveryRuleRequestBodyCondition\n  extends DeliveryRuleCondition {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  name: \"RequestBody\";\n  /** Defines the parameters for the condition. */\n  parameters: RequestBodyMatchConditionParameters;\n}\n\n/** Defines the RequestScheme condition for the delivery rule. */\nexport interface DeliveryRuleRequestSchemeCondition\n  extends DeliveryRuleCondition {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  name: \"RequestScheme\";\n  /** Defines the parameters for the condition. */\n  parameters: RequestSchemeMatchConditionParameters;\n}\n\n/** Defines the UrlPath condition for the delivery rule. */\nexport interface DeliveryRuleUrlPathCondition extends DeliveryRuleCondition {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  name: \"UrlPath\";\n  /** Defines the parameters for the condition. */\n  parameters: UrlPathMatchConditionParameters;\n}\n\n/** Defines the UrlFileExtension condition for the delivery rule. */\nexport interface DeliveryRuleUrlFileExtensionCondition\n  extends DeliveryRuleCondition {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  name: \"UrlFileExtension\";\n  /** Defines the parameters for the condition. */\n  parameters: UrlFileExtensionMatchConditionParameters;\n}\n\n/** Defines the UrlFileName condition for the delivery rule. */\nexport interface DeliveryRuleUrlFileNameCondition\n  extends DeliveryRuleCondition {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  name: \"UrlFileName\";\n  /** Defines the parameters for the condition. */\n  parameters: UrlFileNameMatchConditionParameters;\n}\n\n/** Defines the HttpVersion condition for the delivery rule. */\nexport interface DeliveryRuleHttpVersionCondition\n  extends DeliveryRuleCondition {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  name: \"HttpVersion\";\n  /** Defines the parameters for the condition. */\n  parameters: HttpVersionMatchConditionParameters;\n}\n\n/** Defines the Cookies condition for the delivery rule. */\nexport interface DeliveryRuleCookiesCondition extends DeliveryRuleCondition {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  name: \"Cookies\";\n  /** Defines the parameters for the condition. */\n  parameters: CookiesMatchConditionParameters;\n}\n\n/** Defines the IsDevice condition for the delivery rule. */\nexport interface DeliveryRuleIsDeviceCondition extends DeliveryRuleCondition {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  name: \"IsDevice\";\n  /** Defines the parameters for the condition. */\n  parameters: IsDeviceMatchConditionParameters;\n}\n\n/** Defines the SocketAddress condition for the delivery rule. */\nexport interface DeliveryRuleSocketAddrCondition extends DeliveryRuleCondition {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  name: \"SocketAddr\";\n  /** Defines the parameters for the condition. */\n  parameters: SocketAddrMatchConditionParameters;\n}\n\n/** Defines the ClientPort condition for the delivery rule. */\nexport interface DeliveryRuleClientPortCondition extends DeliveryRuleCondition {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  name: \"ClientPort\";\n  /** Defines the parameters for the condition. */\n  parameters: ClientPortMatchConditionParameters;\n}\n\n/** Defines the ServerPort condition for the delivery rule. */\nexport interface DeliveryRuleServerPortCondition extends DeliveryRuleCondition {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  name: \"ServerPort\";\n  /** Defines the parameters for the condition. */\n  parameters: ServerPortMatchConditionParameters;\n}\n\n/** Defines the HostName condition for the delivery rule. */\nexport interface DeliveryRuleHostNameCondition extends DeliveryRuleCondition {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  name: \"HostName\";\n  /** Defines the parameters for the condition. */\n  parameters: HostNameMatchConditionParameters;\n}\n\n/** Defines the SslProtocol condition for the delivery rule. */\nexport interface DeliveryRuleSslProtocolCondition\n  extends DeliveryRuleCondition {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  name: \"SslProtocol\";\n  /** Defines the parameters for the condition. */\n  parameters: SslProtocolMatchConditionParameters;\n}\n\n/** Defines the url redirect action for the delivery rule. */\nexport interface UrlRedirectAction extends DeliveryRuleActionAutoGenerated {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  name: \"UrlRedirect\";\n  /** Defines the parameters for the action. */\n  parameters: UrlRedirectActionParameters;\n}\n\n/** Defines the url signing action for the delivery rule. */\nexport interface UrlSigningAction extends DeliveryRuleActionAutoGenerated {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  name: \"UrlSigning\";\n  /** Defines the parameters for the action. */\n  parameters: UrlSigningActionParameters;\n}\n\n/** Defines the origin group override action for the delivery rule. */\nexport interface OriginGroupOverrideAction\n  extends DeliveryRuleActionAutoGenerated {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  name: \"OriginGroupOverride\";\n  /** Defines the parameters for the action. */\n  parameters: OriginGroupOverrideActionParameters;\n}\n\n/** Defines the url rewrite action for the delivery rule. */\nexport interface UrlRewriteAction extends DeliveryRuleActionAutoGenerated {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  name: \"UrlRewrite\";\n  /** Defines the parameters for the action. */\n  parameters: UrlRewriteActionParameters;\n}\n\n/** Defines the request header action for the delivery rule. */\nexport interface DeliveryRuleRequestHeaderAction\n  extends DeliveryRuleActionAutoGenerated {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  name: \"ModifyRequestHeader\";\n  /** Defines the parameters for the action. */\n  parameters: HeaderActionParameters;\n}\n\n/** Defines the response header action for the delivery rule. */\nexport interface DeliveryRuleResponseHeaderAction\n  extends DeliveryRuleActionAutoGenerated {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  name: \"ModifyResponseHeader\";\n  /** Defines the parameters for the action. */\n  parameters: HeaderActionParameters;\n}\n\n/** Defines the cache expiration action for the delivery rule. */\nexport interface DeliveryRuleCacheExpirationAction\n  extends DeliveryRuleActionAutoGenerated {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  name: \"CacheExpiration\";\n  /** Defines the parameters for the action. */\n  parameters: CacheExpirationActionParameters;\n}\n\n/** Defines the cache-key query string action for the delivery rule. */\nexport interface DeliveryRuleCacheKeyQueryStringAction\n  extends DeliveryRuleActionAutoGenerated {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  name: \"CacheKeyQueryString\";\n  /** Defines the parameters for the action. */\n  parameters: CacheKeyQueryStringActionParameters;\n}\n\n/** Defines the route configuration override action for the delivery rule. Only applicable to Frontdoor Standard/Premium Profiles. */\nexport interface DeliveryRuleRouteConfigurationOverrideAction\n  extends DeliveryRuleActionAutoGenerated {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  name: \"RouteConfigurationOverride\";\n  /** Defines the parameters for the action. */\n  parameters: RouteConfigurationOverrideActionParameters;\n}\n\n/** The json object containing security policy waf parameters */\nexport interface SecurityPolicyWebApplicationFirewallParameters\n  extends SecurityPolicyPropertiesParameters {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"WebApplicationFirewall\";\n  /** Resource ID. */\n  wafPolicy?: ResourceReference;\n  /** Waf associations */\n  associations?: SecurityPolicyWebApplicationFirewallAssociation[];\n}\n\n/** Url signing key parameters */\nexport interface UrlSigningKeyParameters extends SecretParameters {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"UrlSigningKey\";\n  /** Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash. */\n  keyId: string;\n  /** Resource reference to the Azure Key Vault secret. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{secretName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​ */\n  secretSource: ResourceReference;\n  /** Version of the secret to be used */\n  secretVersion?: string;\n}\n\n/** Managed Certificate used for https */\nexport interface ManagedCertificateParameters extends SecretParameters {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"ManagedCertificate\";\n  /**\n   * Subject name in the certificate.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subject?: string;\n  /**\n   * Certificate expiration date.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly expirationDate?: string;\n}\n\n/** Customer Certificate used for https */\nexport interface CustomerCertificateParameters extends SecretParameters {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"CustomerCertificate\";\n  /** Resource reference to the Azure Key Vault certificate. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{certificateName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​ */\n  secretSource: ResourceReference;\n  /** Version of the secret to be used */\n  secretVersion?: string;\n  /** Whether to use the latest version for the certificate */\n  useLatestVersion?: boolean;\n  /**\n   * Subject name in the certificate.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subject?: string;\n  /**\n   * Certificate expiration date.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly expirationDate?: string;\n  /**\n   * Certificate issuing authority.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly certificateAuthority?: string;\n  /** The list of SANs. */\n  subjectAlternativeNames?: string[];\n  /**\n   * Certificate thumbprint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly thumbprint?: string;\n}\n\n/** Azure FirstParty Managed Certificate provided by other first party resource providers to enable HTTPS. */\nexport interface AzureFirstPartyManagedCertificateParameters\n  extends SecretParameters {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"AzureFirstPartyManagedCertificate\";\n}\n\n/** The JSON object that contains the properties required to create an endpoint. */\nexport interface EndpointProperties extends EndpointPropertiesUpdateParameters {\n  /**\n   * The host name of the endpoint structured as {endpointName}.{DNSZone}, e.g. contoso.azureedge.net\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hostName?: string;\n  /** The source of the content being delivered via CDN. */\n  origins: DeepCreatedOrigin[];\n  /** The origin groups comprising of origins that are used for load balancing the traffic based on availability. */\n  originGroups?: DeepCreatedOriginGroup[];\n  /**\n   * The custom domains under the endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly customDomains?: DeepCreatedCustomDomain[];\n  /**\n   * Resource status of the endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceState?: EndpointResourceState;\n  /**\n   * Provisioning status of the endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: EndpointProvisioningState;\n}\n\n/** The JSON object that contains the properties of the origin. */\nexport interface OriginProperties extends OriginUpdatePropertiesParameters {\n  /**\n   * Resource status of the origin.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceState?: OriginResourceState;\n  /**\n   * Provisioning status of the origin.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: OriginProvisioningState;\n  /**\n   * The approval status for the connection to the Private Link\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateEndpointStatus?: PrivateEndpointStatus;\n}\n\n/** The JSON object that contains the properties of the origin group. */\nexport interface OriginGroupProperties\n  extends OriginGroupUpdatePropertiesParameters {\n  /**\n   * Resource status of the origin group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceState?: OriginGroupResourceState;\n  /**\n   * Provisioning status of the origin group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: OriginGroupProvisioningState;\n}\n\n/** Defines the certificate source parameters using CDN managed certificate for enabling SSL. */\nexport interface CdnManagedHttpsParameters extends CustomDomainHttpsParameters {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  certificateSource: \"Cdn\";\n  /** Defines the certificate source parameters using CDN managed certificate for enabling SSL. */\n  certificateSourceParameters: CdnCertificateSourceParameters;\n}\n\n/** Defines the certificate source parameters using user's keyvault certificate for enabling SSL. */\nexport interface UserManagedHttpsParameters\n  extends CustomDomainHttpsParameters {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  certificateSource: \"AzureKeyVault\";\n  /** Defines the certificate source parameters using user's keyvault certificate for enabling SSL. */\n  certificateSourceParameters: KeyVaultCertificateSourceParameters;\n}\n\n/** Defines a rate limiting rule that can be included in a waf policy */\nexport interface RateLimitRule extends CustomRule {\n  /** Defines rate limit threshold. */\n  rateLimitThreshold: number;\n  /** Defines rate limit duration. Default is 1 minute. */\n  rateLimitDurationInMinutes: number;\n}\n\n/** Managed Certificate used for https */\nexport interface ManagedCertificate extends Certificate {}\n\n/** Customer Certificate used for https */\nexport interface CustomerCertificate extends Certificate {\n  /** Resource reference to the Azure Key Vault certificate. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{certificateName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​ */\n  secretSource?: ResourceReference;\n  /** Certificate version. */\n  secretVersion?: string;\n  /**\n   * Certificate issuing authority.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly certificateAuthority?: string;\n  /** Whether to use the latest version for the certificate */\n  useLatestVersion?: boolean;\n  /** The list of SANs. */\n  subjectAlternativeNames?: string[];\n  /**\n   * Certificate thumbprint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly thumbprint?: string;\n}\n\n/** Azure FirstParty Managed Certificate provided by other first party resource providers to enable HTTPS. */\nexport interface AzureFirstPartyManagedCertificate extends Certificate {}\n\n/** Friendly domain name mapping to the endpoint hostname that the customer provides for branding purposes, e.g. www.contoso.com. */\nexport interface AFDDomain extends ProxyResource {\n  /**\n   * The name of the profile which holds the domain.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly profileName?: string;\n  /** The configuration specifying how to enable HTTPS for the domain - using AzureFrontDoor managed certificate or user's own certificate. If not specified, enabling ssl uses AzureFrontDoor managed certificate by default. */\n  tlsSettings?: AFDDomainHttpsParameters;\n  /** Resource reference to the Azure DNS zone */\n  azureDnsZone?: ResourceReference;\n  /** Resource reference to the Azure resource where custom domain ownership was prevalidated */\n  preValidatedCustomDomainResourceId?: ResourceReference;\n  /**\n   * Provisioning status\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: AfdProvisioningState;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly deploymentStatus?: DeploymentStatus;\n  /**\n   * Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step. DCV stands for DomainControlValidation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly domainValidationState?: DomainValidationState;\n  /** The host name of the domain. Must be a domain name. */\n  hostName?: string;\n  /**\n   * Values the customer needs to validate domain ownership\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly validationProperties?: DomainValidationProperties;\n}\n\n/** AFDOrigin group comprising of origins is used for load balancing to origins when the content cannot be served from CDN. */\nexport interface AFDOriginGroup extends ProxyResource {\n  /**\n   * The name of the profile which holds the origin group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly profileName?: string;\n  /** Load balancing settings for a backend pool */\n  loadBalancingSettings?: LoadBalancingSettingsParameters;\n  /** Health probe settings to the origin that is used to determine the health of the origin. */\n  healthProbeSettings?: HealthProbeParameters;\n  /** Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported. */\n  trafficRestorationTimeToHealedOrNewEndpointsInMinutes?: number;\n  /** Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled' */\n  sessionAffinityState?: EnabledState;\n  /**\n   * Provisioning status\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: AfdProvisioningState;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly deploymentStatus?: DeploymentStatus;\n}\n\n/** CDN origin is the source of the content being delivered via CDN. When the edge nodes represented by an endpoint do not have the requested content cached, they attempt to fetch it from one or more of the configured origins. */\nexport interface AFDOrigin extends ProxyResource {\n  /**\n   * The name of the origin group which contains this origin.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly originGroupName?: string;\n  /** Resource reference to the Azure origin resource. */\n  azureOrigin?: ResourceReference;\n  /** The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint. */\n  hostName?: string;\n  /** The value of the HTTP port. Must be between 1 and 65535. */\n  httpPort?: number;\n  /** The value of the HTTPS port. Must be between 1 and 65535. */\n  httpsPort?: number;\n  /** The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint */\n  originHostHeader?: string;\n  /** Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5 */\n  priority?: number;\n  /** Weight of the origin in given origin group for load balancing. Must be between 1 and 1000 */\n  weight?: number;\n  /** The properties of the private link resource for private origin. */\n  sharedPrivateLinkResource?: SharedPrivateLinkResourceProperties;\n  /** Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool. */\n  enabledState?: EnabledState;\n  /** Whether to enable certificate name check at origin level */\n  enforceCertificateNameCheck?: boolean;\n  /**\n   * Provisioning status\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: AfdProvisioningState;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly deploymentStatus?: DeploymentStatus;\n}\n\n/** Friendly Routes name mapping to the any Routes or secret related information. */\nexport interface Route extends ProxyResource {\n  /**\n   * The name of the endpoint which holds the route.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly endpointName?: string;\n  /** Domains referenced by this endpoint. */\n  customDomains?: ActivatedResourceReference[];\n  /** A reference to the origin group. */\n  originGroup?: ResourceReference;\n  /** A directory path on the origin that AzureFrontDoor can use to retrieve content from, e.g. contoso.cloudapp.net/originpath. */\n  originPath?: string;\n  /** rule sets referenced by this endpoint. */\n  ruleSets?: ResourceReference[];\n  /** List of supported protocols for this route. */\n  supportedProtocols?: AFDEndpointProtocols[];\n  /** The route patterns of the rule. */\n  patternsToMatch?: string[];\n  /** The caching configuration for this route. To disable caching, do not provide a cacheConfiguration object. */\n  cacheConfiguration?: AfdRouteCacheConfiguration;\n  /** Protocol this rule will use when forwarding traffic to backends. */\n  forwardingProtocol?: ForwardingProtocol;\n  /** whether this route will be linked to the default endpoint domain. */\n  linkToDefaultDomain?: LinkToDefaultDomain;\n  /** Whether to automatically redirect HTTP traffic to HTTPS traffic. Note that this is a easy way to set up this rule and it will be the first rule that gets executed. */\n  httpsRedirect?: HttpsRedirect;\n  /** Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled' */\n  enabledState?: EnabledState;\n  /**\n   * Provisioning status\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: AfdProvisioningState;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly deploymentStatus?: DeploymentStatus;\n}\n\n/** Friendly RuleSet name mapping to the any RuleSet or secret related information. */\nexport interface RuleSet extends ProxyResource {\n  /**\n   * Provisioning status\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: AfdProvisioningState;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly deploymentStatus?: DeploymentStatus;\n  /**\n   * The name of the profile which holds the rule set.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly profileName?: string;\n}\n\n/** Friendly Rules name mapping to the any Rules or secret related information. */\nexport interface Rule extends ProxyResource {\n  /**\n   * The name of the rule set containing the rule.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ruleSetName?: string;\n  /** The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied. */\n  order?: number;\n  /** A list of conditions that must be matched for the actions to be executed */\n  conditions?: DeliveryRuleConditionUnion[];\n  /** A list of actions that are executed when all the conditions of a rule are satisfied. */\n  actions?: DeliveryRuleActionAutoGeneratedUnion[];\n  /** If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue. */\n  matchProcessingBehavior?: MatchProcessingBehavior;\n  /**\n   * Provisioning status\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: AfdProvisioningState;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly deploymentStatus?: DeploymentStatus;\n}\n\n/** SecurityPolicy association for AzureFrontDoor profile */\nexport interface SecurityPolicy extends ProxyResource {\n  /**\n   * Provisioning status\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: AfdProvisioningState;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly deploymentStatus?: DeploymentStatus;\n  /**\n   * The name of the profile which holds the security policy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly profileName?: string;\n  /** object which contains security policy parameters */\n  parameters?: SecurityPolicyPropertiesParametersUnion;\n}\n\n/** Friendly Secret name mapping to the any Secret or secret related information. */\nexport interface Secret extends ProxyResource {\n  /**\n   * Provisioning status\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: AfdProvisioningState;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly deploymentStatus?: DeploymentStatus;\n  /**\n   * The name of the profile which holds the secret.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly profileName?: string;\n  /** object which contains secret parameters */\n  parameters?: SecretParametersUnion;\n}\n\n/** CDN origin is the source of the content being delivered via CDN. When the edge nodes represented by an endpoint do not have the requested content cached, they attempt to fetch it from one or more of the configured origins. */\nexport interface Origin extends ProxyResource {\n  /** The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint. */\n  hostName?: string;\n  /** The value of the HTTP port. Must be between 1 and 65535. */\n  httpPort?: number;\n  /** The value of the HTTPS port. Must be between 1 and 65535. */\n  httpsPort?: number;\n  /** The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint */\n  originHostHeader?: string;\n  /** Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5 */\n  priority?: number;\n  /** Weight of the origin in given origin group for load balancing. Must be between 1 and 1000 */\n  weight?: number;\n  /** Origin is enabled for load balancing or not */\n  enabled?: boolean;\n  /** The Alias of the Private Link resource. Populating this optional field indicates that this origin is 'Private' */\n  privateLinkAlias?: string;\n  /** The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private' */\n  privateLinkResourceId?: string;\n  /** The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated */\n  privateLinkLocation?: string;\n  /** A custom message to be included in the approval request to connect to the Private Link. */\n  privateLinkApprovalMessage?: string;\n  /**\n   * Resource status of the origin.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceState?: OriginResourceState;\n  /**\n   * Provisioning status of the origin.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: OriginProvisioningState;\n  /**\n   * The approval status for the connection to the Private Link\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateEndpointStatus?: PrivateEndpointStatus;\n}\n\n/** Origin group comprising of origins is used for load balancing to origins when the content cannot be served from CDN. */\nexport interface OriginGroup extends ProxyResource {\n  /** Health probe settings to the origin that is used to determine the health of the origin. */\n  healthProbeSettings?: HealthProbeParameters;\n  /** The source of the content being delivered via CDN within given origin group. */\n  origins?: ResourceReference[];\n  /** Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported. */\n  trafficRestorationTimeToHealedOrNewEndpointsInMinutes?: number;\n  /** The JSON object that contains the properties to determine origin health using real requests/responses. This property is currently not supported. */\n  responseBasedOriginErrorDetectionSettings?: ResponseBasedOriginErrorDetectionParameters;\n  /**\n   * Resource status of the origin group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceState?: OriginGroupResourceState;\n  /**\n   * Provisioning status of the origin group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: OriginGroupProvisioningState;\n}\n\n/** Friendly domain name mapping to the endpoint hostname that the customer provides for branding purposes, e.g. www.contoso.com. */\nexport interface CustomDomain extends ProxyResource {\n  /** The host name of the custom domain. Must be a domain name. */\n  hostName?: string;\n  /**\n   * Resource status of the custom domain.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceState?: CustomDomainResourceState;\n  /**\n   * Provisioning status of the custom domain.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly customHttpsProvisioningState?: CustomHttpsProvisioningState;\n  /**\n   * Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly customHttpsProvisioningSubstate?: CustomHttpsProvisioningSubstate;\n  /** Certificate parameters for securing custom HTTPS */\n  customHttpsParameters?: CustomDomainHttpsParametersUnion;\n  /** Special validation or data may be required when delivering CDN to some regions due to local compliance reasons. E.g. ICP license number of a custom domain is required to deliver content in China. */\n  validationData?: string;\n  /**\n   * Provisioning status of Custom Https of the custom domain.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: CustomHttpsProvisioningState;\n}\n\n/** Edgenode is a global Point of Presence (POP) location used to deliver CDN content to end users. */\nexport interface EdgeNode extends ProxyResource {\n  /** List of ip address groups. */\n  ipAddressGroups?: IpAddressGroup[];\n}\n\n/** CDN endpoint is the entity within a CDN profile containing configuration information such as origin, protocol, content caching and delivery behavior. The AzureFrontDoor endpoint uses the URL format <endpointname>.azureedge.net. */\nexport interface AFDEndpoint extends TrackedResource {\n  /**\n   * The name of the profile which holds the endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly profileName?: string;\n  /** Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled' */\n  enabledState?: EnabledState;\n  /**\n   * Provisioning status\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: AfdProvisioningState;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly deploymentStatus?: DeploymentStatus;\n  /**\n   * The host name of the endpoint structured as {endpointName}.{DNSZone}, e.g. contoso.azureedge.net\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hostName?: string;\n  /** Indicates the endpoint name reuse scope. The default value is TenantReuse. */\n  autoGeneratedDomainNameLabelScope?: AutoGeneratedDomainNameLabelScope;\n}\n\n/** A profile is a logical grouping of endpoints that share the same settings. */\nexport interface Profile extends TrackedResource {\n  /** The pricing tier (defines Azure Front Door Standard or Premium or a CDN provider, feature list and rate) of the profile. */\n  sku: Sku;\n  /**\n   * Kind of the profile. Used by portal to differentiate traditional CDN profile and new AFD profile.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kind?: string;\n  /**\n   * Resource status of the profile.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceState?: ProfileResourceState;\n  /**\n   * Provisioning status of the profile.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProfileProvisioningState;\n  /**\n   * The Id of the frontdoor.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly frontDoorId?: string;\n  /** Send and receive timeout on forwarding request to the origin. When timeout is reached, the request fails and returns. */\n  originResponseTimeoutSeconds?: number;\n}\n\n/** CDN endpoint is the entity within a CDN profile containing configuration information such as origin, protocol, content caching and delivery behavior. The CDN endpoint uses the URL format <endpointname>.azureedge.net. */\nexport interface Endpoint extends TrackedResource {\n  /** A directory path on the origin that CDN can use to retrieve content from, e.g. contoso.cloudapp.net/originpath. */\n  originPath?: string;\n  /** List of content types on which compression applies. The value should be a valid MIME type. */\n  contentTypesToCompress?: string[];\n  /** The host header value sent to the origin with each request. This property at Endpoint is only allowed when endpoint uses single origin and can be overridden by the same property specified at origin.If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. */\n  originHostHeader?: string;\n  /** Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content is smaller than 1 byte or larger than 1 MB. */\n  isCompressionEnabled?: boolean;\n  /** Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed. */\n  isHttpAllowed?: boolean;\n  /** Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed. */\n  isHttpsAllowed?: boolean;\n  /** Defines how CDN caches requests that include query strings. You can ignore any query strings when caching, bypass caching to prevent requests that contain query strings from being cached, or cache every request with a unique URL. */\n  queryStringCachingBehavior?: QueryStringCachingBehavior;\n  /** Specifies what scenario the customer wants this CDN endpoint to optimize for, e.g. Download, Media services. With this information, CDN can apply scenario driven optimization. */\n  optimizationType?: OptimizationType;\n  /** Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the origin path. This property is only relevant when using a single origin. */\n  probePath?: string;\n  /** List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule to a specified path or content, e.g. block APAC for path /pictures/ */\n  geoFilters?: GeoFilter[];\n  /** A reference to the origin group. */\n  defaultOriginGroup?: ResourceReference;\n  /** List of keys used to validate the signed URL hashes. */\n  urlSigningKeys?: UrlSigningKey[];\n  /** A policy that specifies the delivery rules to be used for an endpoint. */\n  deliveryPolicy?: EndpointPropertiesUpdateParametersDeliveryPolicy;\n  /** Defines the Web Application Firewall policy for the endpoint (if applicable) */\n  webApplicationFirewallPolicyLink?: EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink;\n  /**\n   * The host name of the endpoint structured as {endpointName}.{DNSZone}, e.g. contoso.azureedge.net\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hostName?: string;\n  /** The source of the content being delivered via CDN. */\n  origins?: DeepCreatedOrigin[];\n  /** The origin groups comprising of origins that are used for load balancing the traffic based on availability. */\n  originGroups?: DeepCreatedOriginGroup[];\n  /**\n   * The custom domains under the endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly customDomains?: DeepCreatedCustomDomain[];\n  /**\n   * Resource status of the endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceState?: EndpointResourceState;\n  /**\n   * Provisioning status of the endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: EndpointProvisioningState;\n}\n\n/** Defines web application firewall policy for Azure CDN. */\nexport interface CdnWebApplicationFirewallPolicy extends TrackedResource {\n  /** Gets a unique read-only string that changes whenever the resource is updated. */\n  etag?: string;\n  /** The pricing tier (defines a CDN provider, feature list and rate) of the CdnWebApplicationFirewallPolicy. */\n  sku: Sku;\n  /** Describes  policySettings for policy */\n  policySettings?: PolicySettings;\n  /** Describes rate limit rules inside the policy. */\n  rateLimitRules?: RateLimitRuleList;\n  /** Describes custom rules inside the policy. */\n  customRules?: CustomRuleList;\n  /** Describes managed rules inside the policy. */\n  managedRules?: ManagedRuleSetList;\n  /**\n   * Describes Azure CDN endpoints associated with this Web Application Firewall policy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly endpointLinks?: CdnEndpoint[];\n  /**\n   * Provisioning state of the WebApplicationFirewallPolicy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * Resource status of the policy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceState?: PolicyResourceState;\n}\n\n/** Known values of {@link ResourceType} that the service accepts. */\nexport enum KnownResourceType {\n  /** MicrosoftCdnProfilesEndpoints */\n  MicrosoftCdnProfilesEndpoints = \"Microsoft.Cdn/Profiles/Endpoints\",\n  /** MicrosoftCdnProfilesAfdEndpoints */\n  MicrosoftCdnProfilesAfdEndpoints = \"Microsoft.Cdn/Profiles/AfdEndpoints\"\n}\n\n/**\n * Defines values for ResourceType. \\\n * {@link KnownResourceType} can be used interchangeably with ResourceType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Microsoft.Cdn\\/Profiles\\/Endpoints** \\\n * **Microsoft.Cdn\\/Profiles\\/AfdEndpoints**\n */\nexport type ResourceType = string;\n\n/** Known values of {@link AutoGeneratedDomainNameLabelScope} that the service accepts. */\nexport enum KnownAutoGeneratedDomainNameLabelScope {\n  /** TenantReuse */\n  TenantReuse = \"TenantReuse\",\n  /** SubscriptionReuse */\n  SubscriptionReuse = \"SubscriptionReuse\",\n  /** ResourceGroupReuse */\n  ResourceGroupReuse = \"ResourceGroupReuse\",\n  /** NoReuse */\n  NoReuse = \"NoReuse\"\n}\n\n/**\n * Defines values for AutoGeneratedDomainNameLabelScope. \\\n * {@link KnownAutoGeneratedDomainNameLabelScope} can be used interchangeably with AutoGeneratedDomainNameLabelScope,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **TenantReuse** \\\n * **SubscriptionReuse** \\\n * **ResourceGroupReuse** \\\n * **NoReuse**\n */\nexport type AutoGeneratedDomainNameLabelScope = string;\n\n/** Known values of {@link UsageUnit} that the service accepts. */\nexport enum KnownUsageUnit {\n  /** Count */\n  Count = \"Count\"\n}\n\n/**\n * Defines values for UsageUnit. \\\n * {@link KnownUsageUnit} can be used interchangeably with UsageUnit,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Count**\n */\nexport type UsageUnit = string;\n\n/** Known values of {@link DomainValidationState} that the service accepts. */\nexport enum KnownDomainValidationState {\n  /** Unknown */\n  Unknown = \"Unknown\",\n  /** Submitting */\n  Submitting = \"Submitting\",\n  /** Pending */\n  Pending = \"Pending\",\n  /** Rejected */\n  Rejected = \"Rejected\",\n  /** TimedOut */\n  TimedOut = \"TimedOut\",\n  /** PendingRevalidation */\n  PendingRevalidation = \"PendingRevalidation\",\n  /** Approved */\n  Approved = \"Approved\",\n  /** RefreshingValidationToken */\n  RefreshingValidationToken = \"RefreshingValidationToken\",\n  /** InternalError */\n  InternalError = \"InternalError\"\n}\n\n/**\n * Defines values for DomainValidationState. \\\n * {@link KnownDomainValidationState} can be used interchangeably with DomainValidationState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unknown** \\\n * **Submitting** \\\n * **Pending** \\\n * **Rejected** \\\n * **TimedOut** \\\n * **PendingRevalidation** \\\n * **Approved** \\\n * **RefreshingValidationToken** \\\n * **InternalError**\n */\nexport type DomainValidationState = string;\n\n/** Known values of {@link AfdCertificateType} that the service accepts. */\nexport enum KnownAfdCertificateType {\n  /** CustomerCertificate */\n  CustomerCertificate = \"CustomerCertificate\",\n  /** ManagedCertificate */\n  ManagedCertificate = \"ManagedCertificate\",\n  /** AzureFirstPartyManagedCertificate */\n  AzureFirstPartyManagedCertificate = \"AzureFirstPartyManagedCertificate\"\n}\n\n/**\n * Defines values for AfdCertificateType. \\\n * {@link KnownAfdCertificateType} can be used interchangeably with AfdCertificateType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **CustomerCertificate** \\\n * **ManagedCertificate** \\\n * **AzureFirstPartyManagedCertificate**\n */\nexport type AfdCertificateType = string;\n\n/** Known values of {@link AfdProvisioningState} that the service accepts. */\nexport enum KnownAfdProvisioningState {\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Deleting */\n  Deleting = \"Deleting\",\n  /** Creating */\n  Creating = \"Creating\"\n}\n\n/**\n * Defines values for AfdProvisioningState. \\\n * {@link KnownAfdProvisioningState} can be used interchangeably with AfdProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Succeeded** \\\n * **Failed** \\\n * **Updating** \\\n * **Deleting** \\\n * **Creating**\n */\nexport type AfdProvisioningState = string;\n\n/** Known values of {@link DeploymentStatus} that the service accepts. */\nexport enum KnownDeploymentStatus {\n  /** NotStarted */\n  NotStarted = \"NotStarted\",\n  /** InProgress */\n  InProgress = \"InProgress\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\"\n}\n\n/**\n * Defines values for DeploymentStatus. \\\n * {@link KnownDeploymentStatus} can be used interchangeably with DeploymentStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotStarted** \\\n * **InProgress** \\\n * **Succeeded** \\\n * **Failed**\n */\nexport type DeploymentStatus = string;\n\n/** Known values of {@link IdentityType} that the service accepts. */\nexport enum KnownIdentityType {\n  /** User */\n  User = \"user\",\n  /** Application */\n  Application = \"application\",\n  /** ManagedIdentity */\n  ManagedIdentity = \"managedIdentity\",\n  /** Key */\n  Key = \"key\"\n}\n\n/**\n * Defines values for IdentityType. \\\n * {@link KnownIdentityType} can be used interchangeably with IdentityType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **user** \\\n * **application** \\\n * **managedIdentity** \\\n * **key**\n */\nexport type IdentityType = string;\n\n/** Known values of {@link EnabledState} that the service accepts. */\nexport enum KnownEnabledState {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for EnabledState. \\\n * {@link KnownEnabledState} can be used interchangeably with EnabledState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type EnabledState = string;\n\n/** Known values of {@link AFDEndpointProtocols} that the service accepts. */\nexport enum KnownAFDEndpointProtocols {\n  /** Http */\n  Http = \"Http\",\n  /** Https */\n  Https = \"Https\"\n}\n\n/**\n * Defines values for AFDEndpointProtocols. \\\n * {@link KnownAFDEndpointProtocols} can be used interchangeably with AFDEndpointProtocols,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Http** \\\n * **Https**\n */\nexport type AFDEndpointProtocols = string;\n\n/** Known values of {@link AfdQueryStringCachingBehavior} that the service accepts. */\nexport enum KnownAfdQueryStringCachingBehavior {\n  /** IgnoreQueryString */\n  IgnoreQueryString = \"IgnoreQueryString\",\n  /** UseQueryString */\n  UseQueryString = \"UseQueryString\",\n  /** IgnoreSpecifiedQueryStrings */\n  IgnoreSpecifiedQueryStrings = \"IgnoreSpecifiedQueryStrings\",\n  /** IncludeSpecifiedQueryStrings */\n  IncludeSpecifiedQueryStrings = \"IncludeSpecifiedQueryStrings\"\n}\n\n/**\n * Defines values for AfdQueryStringCachingBehavior. \\\n * {@link KnownAfdQueryStringCachingBehavior} can be used interchangeably with AfdQueryStringCachingBehavior,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **IgnoreQueryString** \\\n * **UseQueryString** \\\n * **IgnoreSpecifiedQueryStrings** \\\n * **IncludeSpecifiedQueryStrings**\n */\nexport type AfdQueryStringCachingBehavior = string;\n\n/** Known values of {@link ForwardingProtocol} that the service accepts. */\nexport enum KnownForwardingProtocol {\n  /** HttpOnly */\n  HttpOnly = \"HttpOnly\",\n  /** HttpsOnly */\n  HttpsOnly = \"HttpsOnly\",\n  /** MatchRequest */\n  MatchRequest = \"MatchRequest\"\n}\n\n/**\n * Defines values for ForwardingProtocol. \\\n * {@link KnownForwardingProtocol} can be used interchangeably with ForwardingProtocol,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **HttpOnly** \\\n * **HttpsOnly** \\\n * **MatchRequest**\n */\nexport type ForwardingProtocol = string;\n\n/** Known values of {@link LinkToDefaultDomain} that the service accepts. */\nexport enum KnownLinkToDefaultDomain {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for LinkToDefaultDomain. \\\n * {@link KnownLinkToDefaultDomain} can be used interchangeably with LinkToDefaultDomain,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type LinkToDefaultDomain = string;\n\n/** Known values of {@link HttpsRedirect} that the service accepts. */\nexport enum KnownHttpsRedirect {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for HttpsRedirect. \\\n * {@link KnownHttpsRedirect} can be used interchangeably with HttpsRedirect,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type HttpsRedirect = string;\n\n/** Known values of {@link MatchVariable} that the service accepts. */\nexport enum KnownMatchVariable {\n  /** RemoteAddress */\n  RemoteAddress = \"RemoteAddress\",\n  /** RequestMethod */\n  RequestMethod = \"RequestMethod\",\n  /** QueryString */\n  QueryString = \"QueryString\",\n  /** PostArgs */\n  PostArgs = \"PostArgs\",\n  /** RequestUri */\n  RequestUri = \"RequestUri\",\n  /** RequestHeader */\n  RequestHeader = \"RequestHeader\",\n  /** RequestBody */\n  RequestBody = \"RequestBody\",\n  /** RequestScheme */\n  RequestScheme = \"RequestScheme\",\n  /** UrlPath */\n  UrlPath = \"UrlPath\",\n  /** UrlFileExtension */\n  UrlFileExtension = \"UrlFileExtension\",\n  /** UrlFileName */\n  UrlFileName = \"UrlFileName\",\n  /** HttpVersion */\n  HttpVersion = \"HttpVersion\",\n  /** Cookies */\n  Cookies = \"Cookies\",\n  /** IsDevice */\n  IsDevice = \"IsDevice\",\n  /** SocketAddr */\n  SocketAddr = \"SocketAddr\",\n  /** ClientPort */\n  ClientPort = \"ClientPort\",\n  /** ServerPort */\n  ServerPort = \"ServerPort\",\n  /** HostName */\n  HostName = \"HostName\",\n  /** SslProtocol */\n  SslProtocol = \"SslProtocol\"\n}\n\n/**\n * Defines values for MatchVariable. \\\n * {@link KnownMatchVariable} can be used interchangeably with MatchVariable,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **RemoteAddress** \\\n * **RequestMethod** \\\n * **QueryString** \\\n * **PostArgs** \\\n * **RequestUri** \\\n * **RequestHeader** \\\n * **RequestBody** \\\n * **RequestScheme** \\\n * **UrlPath** \\\n * **UrlFileExtension** \\\n * **UrlFileName** \\\n * **HttpVersion** \\\n * **Cookies** \\\n * **IsDevice** \\\n * **SocketAddr** \\\n * **ClientPort** \\\n * **ServerPort** \\\n * **HostName** \\\n * **SslProtocol**\n */\nexport type MatchVariable = string;\n\n/** Known values of {@link DeliveryRuleAction} that the service accepts. */\nexport enum KnownDeliveryRuleAction {\n  /** CacheExpiration */\n  CacheExpiration = \"CacheExpiration\",\n  /** CacheKeyQueryString */\n  CacheKeyQueryString = \"CacheKeyQueryString\",\n  /** ModifyRequestHeader */\n  ModifyRequestHeader = \"ModifyRequestHeader\",\n  /** ModifyResponseHeader */\n  ModifyResponseHeader = \"ModifyResponseHeader\",\n  /** UrlRedirect */\n  UrlRedirect = \"UrlRedirect\",\n  /** UrlRewrite */\n  UrlRewrite = \"UrlRewrite\",\n  /** UrlSigning */\n  UrlSigning = \"UrlSigning\",\n  /** OriginGroupOverride */\n  OriginGroupOverride = \"OriginGroupOverride\",\n  /** RouteConfigurationOverride */\n  RouteConfigurationOverride = \"RouteConfigurationOverride\"\n}\n\n/**\n * Defines values for DeliveryRuleAction. \\\n * {@link KnownDeliveryRuleAction} can be used interchangeably with DeliveryRuleAction,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **CacheExpiration** \\\n * **CacheKeyQueryString** \\\n * **ModifyRequestHeader** \\\n * **ModifyResponseHeader** \\\n * **UrlRedirect** \\\n * **UrlRewrite** \\\n * **UrlSigning** \\\n * **OriginGroupOverride** \\\n * **RouteConfigurationOverride**\n */\nexport type DeliveryRuleAction = string;\n\n/** Known values of {@link MatchProcessingBehavior} that the service accepts. */\nexport enum KnownMatchProcessingBehavior {\n  /** Continue */\n  Continue = \"Continue\",\n  /** Stop */\n  Stop = \"Stop\"\n}\n\n/**\n * Defines values for MatchProcessingBehavior. \\\n * {@link KnownMatchProcessingBehavior} can be used interchangeably with MatchProcessingBehavior,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Continue** \\\n * **Stop**\n */\nexport type MatchProcessingBehavior = string;\n\n/** Known values of {@link SecurityPolicyType} that the service accepts. */\nexport enum KnownSecurityPolicyType {\n  /** WebApplicationFirewall */\n  WebApplicationFirewall = \"WebApplicationFirewall\"\n}\n\n/**\n * Defines values for SecurityPolicyType. \\\n * {@link KnownSecurityPolicyType} can be used interchangeably with SecurityPolicyType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **WebApplicationFirewall**\n */\nexport type SecurityPolicyType = string;\n\n/** Known values of {@link SecretType} that the service accepts. */\nexport enum KnownSecretType {\n  /** UrlSigningKey */\n  UrlSigningKey = \"UrlSigningKey\",\n  /** CustomerCertificate */\n  CustomerCertificate = \"CustomerCertificate\",\n  /** ManagedCertificate */\n  ManagedCertificate = \"ManagedCertificate\",\n  /** AzureFirstPartyManagedCertificate */\n  AzureFirstPartyManagedCertificate = \"AzureFirstPartyManagedCertificate\"\n}\n\n/**\n * Defines values for SecretType. \\\n * {@link KnownSecretType} can be used interchangeably with SecretType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **UrlSigningKey** \\\n * **CustomerCertificate** \\\n * **ManagedCertificate** \\\n * **AzureFirstPartyManagedCertificate**\n */\nexport type SecretType = string;\n\n/** Known values of {@link Status} that the service accepts. */\nexport enum KnownStatus {\n  /** Valid */\n  Valid = \"Valid\",\n  /** Invalid */\n  Invalid = \"Invalid\",\n  /** AccessDenied */\n  AccessDenied = \"AccessDenied\",\n  /** CertificateExpired */\n  CertificateExpired = \"CertificateExpired\"\n}\n\n/**\n * Defines values for Status. \\\n * {@link KnownStatus} can be used interchangeably with Status,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Valid** \\\n * **Invalid** \\\n * **AccessDenied** \\\n * **CertificateExpired**\n */\nexport type Status = string;\n\n/** Known values of {@link LogMetric} that the service accepts. */\nexport enum KnownLogMetric {\n  /** ClientRequestCount */\n  ClientRequestCount = \"clientRequestCount\",\n  /** ClientRequestTraffic */\n  ClientRequestTraffic = \"clientRequestTraffic\",\n  /** ClientRequestBandwidth */\n  ClientRequestBandwidth = \"clientRequestBandwidth\",\n  /** OriginRequestTraffic */\n  OriginRequestTraffic = \"originRequestTraffic\",\n  /** OriginRequestBandwidth */\n  OriginRequestBandwidth = \"originRequestBandwidth\",\n  /** TotalLatency */\n  TotalLatency = \"totalLatency\"\n}\n\n/**\n * Defines values for LogMetric. \\\n * {@link KnownLogMetric} can be used interchangeably with LogMetric,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **clientRequestCount** \\\n * **clientRequestTraffic** \\\n * **clientRequestBandwidth** \\\n * **originRequestTraffic** \\\n * **originRequestBandwidth** \\\n * **totalLatency**\n */\nexport type LogMetric = string;\n\n/** Known values of {@link LogMetricsGranularity} that the service accepts. */\nexport enum KnownLogMetricsGranularity {\n  /** PT5M */\n  PT5M = \"PT5M\",\n  /** PT1H */\n  PT1H = \"PT1H\",\n  /** P1D */\n  P1D = \"P1D\"\n}\n\n/**\n * Defines values for LogMetricsGranularity. \\\n * {@link KnownLogMetricsGranularity} can be used interchangeably with LogMetricsGranularity,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **PT5M** \\\n * **PT1H** \\\n * **P1D**\n */\nexport type LogMetricsGranularity = string;\n\n/** Known values of {@link LogMetricsGroupBy} that the service accepts. */\nexport enum KnownLogMetricsGroupBy {\n  /** HttpStatusCode */\n  HttpStatusCode = \"httpStatusCode\",\n  /** Protocol */\n  Protocol = \"protocol\",\n  /** CacheStatus */\n  CacheStatus = \"cacheStatus\",\n  /** CountryOrRegion */\n  CountryOrRegion = \"countryOrRegion\",\n  /** CustomDomain */\n  CustomDomain = \"customDomain\"\n}\n\n/**\n * Defines values for LogMetricsGroupBy. \\\n * {@link KnownLogMetricsGroupBy} can be used interchangeably with LogMetricsGroupBy,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **httpStatusCode** \\\n * **protocol** \\\n * **cacheStatus** \\\n * **countryOrRegion** \\\n * **customDomain**\n */\nexport type LogMetricsGroupBy = string;\n\n/** Known values of {@link MetricsResponseGranularity} that the service accepts. */\nexport enum KnownMetricsResponseGranularity {\n  /** PT5M */\n  PT5M = \"PT5M\",\n  /** PT1H */\n  PT1H = \"PT1H\",\n  /** P1D */\n  P1D = \"P1D\"\n}\n\n/**\n * Defines values for MetricsResponseGranularity. \\\n * {@link KnownMetricsResponseGranularity} can be used interchangeably with MetricsResponseGranularity,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **PT5M** \\\n * **PT1H** \\\n * **P1D**\n */\nexport type MetricsResponseGranularity = string;\n\n/** Known values of {@link MetricsResponseSeriesItemUnit} that the service accepts. */\nexport enum KnownMetricsResponseSeriesItemUnit {\n  /** Count */\n  Count = \"count\",\n  /** Bytes */\n  Bytes = \"bytes\",\n  /** BitsPerSecond */\n  BitsPerSecond = \"bitsPerSecond\",\n  /** MilliSeconds */\n  MilliSeconds = \"milliSeconds\"\n}\n\n/**\n * Defines values for MetricsResponseSeriesItemUnit. \\\n * {@link KnownMetricsResponseSeriesItemUnit} can be used interchangeably with MetricsResponseSeriesItemUnit,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **count** \\\n * **bytes** \\\n * **bitsPerSecond** \\\n * **milliSeconds**\n */\nexport type MetricsResponseSeriesItemUnit = string;\n\n/** Known values of {@link LogRanking} that the service accepts. */\nexport enum KnownLogRanking {\n  /** Url */\n  Url = \"url\",\n  /** Referrer */\n  Referrer = \"referrer\",\n  /** Browser */\n  Browser = \"browser\",\n  /** UserAgent */\n  UserAgent = \"userAgent\",\n  /** CountryOrRegion */\n  CountryOrRegion = \"countryOrRegion\"\n}\n\n/**\n * Defines values for LogRanking. \\\n * {@link KnownLogRanking} can be used interchangeably with LogRanking,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **url** \\\n * **referrer** \\\n * **browser** \\\n * **userAgent** \\\n * **countryOrRegion**\n */\nexport type LogRanking = string;\n\n/** Known values of {@link LogRankingMetric} that the service accepts. */\nexport enum KnownLogRankingMetric {\n  /** ClientRequestCount */\n  ClientRequestCount = \"clientRequestCount\",\n  /** ClientRequestTraffic */\n  ClientRequestTraffic = \"clientRequestTraffic\",\n  /** HitCount */\n  HitCount = \"hitCount\",\n  /** MissCount */\n  MissCount = \"missCount\",\n  /** UserErrorCount */\n  UserErrorCount = \"userErrorCount\",\n  /** ErrorCount */\n  ErrorCount = \"errorCount\"\n}\n\n/**\n * Defines values for LogRankingMetric. \\\n * {@link KnownLogRankingMetric} can be used interchangeably with LogRankingMetric,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **clientRequestCount** \\\n * **clientRequestTraffic** \\\n * **hitCount** \\\n * **missCount** \\\n * **userErrorCount** \\\n * **errorCount**\n */\nexport type LogRankingMetric = string;\n\n/** Known values of {@link WafMetric} that the service accepts. */\nexport enum KnownWafMetric {\n  /** ClientRequestCount */\n  ClientRequestCount = \"clientRequestCount\"\n}\n\n/**\n * Defines values for WafMetric. \\\n * {@link KnownWafMetric} can be used interchangeably with WafMetric,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **clientRequestCount**\n */\nexport type WafMetric = string;\n\n/** Known values of {@link WafGranularity} that the service accepts. */\nexport enum KnownWafGranularity {\n  /** PT5M */\n  PT5M = \"PT5M\",\n  /** PT1H */\n  PT1H = \"PT1H\",\n  /** P1D */\n  P1D = \"P1D\"\n}\n\n/**\n * Defines values for WafGranularity. \\\n * {@link KnownWafGranularity} can be used interchangeably with WafGranularity,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **PT5M** \\\n * **PT1H** \\\n * **P1D**\n */\nexport type WafGranularity = string;\n\n/** Known values of {@link WafAction} that the service accepts. */\nexport enum KnownWafAction {\n  /** Allow */\n  Allow = \"allow\",\n  /** Block */\n  Block = \"block\",\n  /** Log */\n  Log = \"log\",\n  /** Redirect */\n  Redirect = \"redirect\"\n}\n\n/**\n * Defines values for WafAction. \\\n * {@link KnownWafAction} can be used interchangeably with WafAction,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **allow** \\\n * **block** \\\n * **log** \\\n * **redirect**\n */\nexport type WafAction = string;\n\n/** Known values of {@link WafRankingGroupBy} that the service accepts. */\nexport enum KnownWafRankingGroupBy {\n  /** HttpStatusCode */\n  HttpStatusCode = \"httpStatusCode\",\n  /** CustomDomain */\n  CustomDomain = \"customDomain\"\n}\n\n/**\n * Defines values for WafRankingGroupBy. \\\n * {@link KnownWafRankingGroupBy} can be used interchangeably with WafRankingGroupBy,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **httpStatusCode** \\\n * **customDomain**\n */\nexport type WafRankingGroupBy = string;\n\n/** Known values of {@link WafRuleType} that the service accepts. */\nexport enum KnownWafRuleType {\n  /** Managed */\n  Managed = \"managed\",\n  /** Custom */\n  Custom = \"custom\",\n  /** Bot */\n  Bot = \"bot\"\n}\n\n/**\n * Defines values for WafRuleType. \\\n * {@link KnownWafRuleType} can be used interchangeably with WafRuleType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **managed** \\\n * **custom** \\\n * **bot**\n */\nexport type WafRuleType = string;\n\n/** Known values of {@link WafMetricsResponseGranularity} that the service accepts. */\nexport enum KnownWafMetricsResponseGranularity {\n  /** PT5M */\n  PT5M = \"PT5M\",\n  /** PT1H */\n  PT1H = \"PT1H\",\n  /** P1D */\n  P1D = \"P1D\"\n}\n\n/**\n * Defines values for WafMetricsResponseGranularity. \\\n * {@link KnownWafMetricsResponseGranularity} can be used interchangeably with WafMetricsResponseGranularity,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **PT5M** \\\n * **PT1H** \\\n * **P1D**\n */\nexport type WafMetricsResponseGranularity = string;\n\n/** Known values of {@link WafRankingType} that the service accepts. */\nexport enum KnownWafRankingType {\n  /** Action */\n  Action = \"action\",\n  /** RuleGroup */\n  RuleGroup = \"ruleGroup\",\n  /** RuleId */\n  RuleId = \"ruleId\",\n  /** UserAgent */\n  UserAgent = \"userAgent\",\n  /** ClientIp */\n  ClientIp = \"clientIp\",\n  /** Url */\n  Url = \"url\",\n  /** CountryOrRegion */\n  CountryOrRegion = \"countryOrRegion\",\n  /** RuleType */\n  RuleType = \"ruleType\"\n}\n\n/**\n * Defines values for WafRankingType. \\\n * {@link KnownWafRankingType} can be used interchangeably with WafRankingType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **action** \\\n * **ruleGroup** \\\n * **ruleId** \\\n * **userAgent** \\\n * **clientIp** \\\n * **url** \\\n * **countryOrRegion** \\\n * **ruleType**\n */\nexport type WafRankingType = string;\n\n/** Known values of {@link SkuName} that the service accepts. */\nexport enum KnownSkuName {\n  /** StandardVerizon */\n  StandardVerizon = \"Standard_Verizon\",\n  /** PremiumVerizon */\n  PremiumVerizon = \"Premium_Verizon\",\n  /** CustomVerizon */\n  CustomVerizon = \"Custom_Verizon\",\n  /** StandardAkamai */\n  StandardAkamai = \"Standard_Akamai\",\n  /** StandardChinaCdn */\n  StandardChinaCdn = \"Standard_ChinaCdn\",\n  /** StandardMicrosoft */\n  StandardMicrosoft = \"Standard_Microsoft\",\n  /** StandardAzureFrontDoor */\n  StandardAzureFrontDoor = \"Standard_AzureFrontDoor\",\n  /** PremiumAzureFrontDoor */\n  PremiumAzureFrontDoor = \"Premium_AzureFrontDoor\",\n  /** Standard955BandWidthChinaCdn */\n  Standard955BandWidthChinaCdn = \"Standard_955BandWidth_ChinaCdn\",\n  /** StandardAvgBandWidthChinaCdn */\n  StandardAvgBandWidthChinaCdn = \"Standard_AvgBandWidth_ChinaCdn\",\n  /** StandardPlusChinaCdn */\n  StandardPlusChinaCdn = \"StandardPlus_ChinaCdn\",\n  /** StandardPlus955BandWidthChinaCdn */\n  StandardPlus955BandWidthChinaCdn = \"StandardPlus_955BandWidth_ChinaCdn\",\n  /** StandardPlusAvgBandWidthChinaCdn */\n  StandardPlusAvgBandWidthChinaCdn = \"StandardPlus_AvgBandWidth_ChinaCdn\"\n}\n\n/**\n * Defines values for SkuName. \\\n * {@link KnownSkuName} can be used interchangeably with SkuName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Standard_Verizon** \\\n * **Premium_Verizon** \\\n * **Custom_Verizon** \\\n * **Standard_Akamai** \\\n * **Standard_ChinaCdn** \\\n * **Standard_Microsoft** \\\n * **Standard_AzureFrontDoor** \\\n * **Premium_AzureFrontDoor** \\\n * **Standard_955BandWidth_ChinaCdn** \\\n * **Standard_AvgBandWidth_ChinaCdn** \\\n * **StandardPlus_ChinaCdn** \\\n * **StandardPlus_955BandWidth_ChinaCdn** \\\n * **StandardPlus_AvgBandWidth_ChinaCdn**\n */\nexport type SkuName = string;\n\n/** Known values of {@link ProfileResourceState} that the service accepts. */\nexport enum KnownProfileResourceState {\n  /** Creating */\n  Creating = \"Creating\",\n  /** Active */\n  Active = \"Active\",\n  /** Deleting */\n  Deleting = \"Deleting\",\n  /** Disabled */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for ProfileResourceState. \\\n * {@link KnownProfileResourceState} can be used interchangeably with ProfileResourceState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Active** \\\n * **Deleting** \\\n * **Disabled**\n */\nexport type ProfileResourceState = string;\n\n/** Known values of {@link ProfileProvisioningState} that the service accepts. */\nexport enum KnownProfileProvisioningState {\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Deleting */\n  Deleting = \"Deleting\",\n  /** Creating */\n  Creating = \"Creating\"\n}\n\n/**\n * Defines values for ProfileProvisioningState. \\\n * {@link KnownProfileProvisioningState} can be used interchangeably with ProfileProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Succeeded** \\\n * **Failed** \\\n * **Updating** \\\n * **Deleting** \\\n * **Creating**\n */\nexport type ProfileProvisioningState = string;\n\n/** Known values of {@link OptimizationType} that the service accepts. */\nexport enum KnownOptimizationType {\n  /** GeneralWebDelivery */\n  GeneralWebDelivery = \"GeneralWebDelivery\",\n  /** GeneralMediaStreaming */\n  GeneralMediaStreaming = \"GeneralMediaStreaming\",\n  /** VideoOnDemandMediaStreaming */\n  VideoOnDemandMediaStreaming = \"VideoOnDemandMediaStreaming\",\n  /** LargeFileDownload */\n  LargeFileDownload = \"LargeFileDownload\",\n  /** DynamicSiteAcceleration */\n  DynamicSiteAcceleration = \"DynamicSiteAcceleration\"\n}\n\n/**\n * Defines values for OptimizationType. \\\n * {@link KnownOptimizationType} can be used interchangeably with OptimizationType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **GeneralWebDelivery** \\\n * **GeneralMediaStreaming** \\\n * **VideoOnDemandMediaStreaming** \\\n * **LargeFileDownload** \\\n * **DynamicSiteAcceleration**\n */\nexport type OptimizationType = string;\n\n/** Known values of {@link ResourceUsageUnit} that the service accepts. */\nexport enum KnownResourceUsageUnit {\n  /** Count */\n  Count = \"count\"\n}\n\n/**\n * Defines values for ResourceUsageUnit. \\\n * {@link KnownResourceUsageUnit} can be used interchangeably with ResourceUsageUnit,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **count**\n */\nexport type ResourceUsageUnit = string;\n\n/** Known values of {@link PrivateEndpointStatus} that the service accepts. */\nexport enum KnownPrivateEndpointStatus {\n  /** Pending */\n  Pending = \"Pending\",\n  /** Approved */\n  Approved = \"Approved\",\n  /** Rejected */\n  Rejected = \"Rejected\",\n  /** Disconnected */\n  Disconnected = \"Disconnected\",\n  /** Timeout */\n  Timeout = \"Timeout\"\n}\n\n/**\n * Defines values for PrivateEndpointStatus. \\\n * {@link KnownPrivateEndpointStatus} can be used interchangeably with PrivateEndpointStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Pending** \\\n * **Approved** \\\n * **Rejected** \\\n * **Disconnected** \\\n * **Timeout**\n */\nexport type PrivateEndpointStatus = string;\n\n/** Known values of {@link EndpointResourceState} that the service accepts. */\nexport enum KnownEndpointResourceState {\n  /** Creating */\n  Creating = \"Creating\",\n  /** Deleting */\n  Deleting = \"Deleting\",\n  /** Running */\n  Running = \"Running\",\n  /** Starting */\n  Starting = \"Starting\",\n  /** Stopped */\n  Stopped = \"Stopped\",\n  /** Stopping */\n  Stopping = \"Stopping\"\n}\n\n/**\n * Defines values for EndpointResourceState. \\\n * {@link KnownEndpointResourceState} can be used interchangeably with EndpointResourceState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Deleting** \\\n * **Running** \\\n * **Starting** \\\n * **Stopped** \\\n * **Stopping**\n */\nexport type EndpointResourceState = string;\n\n/** Known values of {@link EndpointProvisioningState} that the service accepts. */\nexport enum KnownEndpointProvisioningState {\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Deleting */\n  Deleting = \"Deleting\",\n  /** Creating */\n  Creating = \"Creating\"\n}\n\n/**\n * Defines values for EndpointProvisioningState. \\\n * {@link KnownEndpointProvisioningState} can be used interchangeably with EndpointProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Succeeded** \\\n * **Failed** \\\n * **Updating** \\\n * **Deleting** \\\n * **Creating**\n */\nexport type EndpointProvisioningState = string;\n\n/** Known values of {@link OriginResourceState} that the service accepts. */\nexport enum KnownOriginResourceState {\n  /** Creating */\n  Creating = \"Creating\",\n  /** Active */\n  Active = \"Active\",\n  /** Deleting */\n  Deleting = \"Deleting\"\n}\n\n/**\n * Defines values for OriginResourceState. \\\n * {@link KnownOriginResourceState} can be used interchangeably with OriginResourceState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Active** \\\n * **Deleting**\n */\nexport type OriginResourceState = string;\n\n/** Known values of {@link OriginProvisioningState} that the service accepts. */\nexport enum KnownOriginProvisioningState {\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Deleting */\n  Deleting = \"Deleting\",\n  /** Creating */\n  Creating = \"Creating\"\n}\n\n/**\n * Defines values for OriginProvisioningState. \\\n * {@link KnownOriginProvisioningState} can be used interchangeably with OriginProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Succeeded** \\\n * **Failed** \\\n * **Updating** \\\n * **Deleting** \\\n * **Creating**\n */\nexport type OriginProvisioningState = string;\n\n/** Known values of {@link OriginGroupResourceState} that the service accepts. */\nexport enum KnownOriginGroupResourceState {\n  /** Creating */\n  Creating = \"Creating\",\n  /** Active */\n  Active = \"Active\",\n  /** Deleting */\n  Deleting = \"Deleting\"\n}\n\n/**\n * Defines values for OriginGroupResourceState. \\\n * {@link KnownOriginGroupResourceState} can be used interchangeably with OriginGroupResourceState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Active** \\\n * **Deleting**\n */\nexport type OriginGroupResourceState = string;\n\n/** Known values of {@link OriginGroupProvisioningState} that the service accepts. */\nexport enum KnownOriginGroupProvisioningState {\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Deleting */\n  Deleting = \"Deleting\",\n  /** Creating */\n  Creating = \"Creating\"\n}\n\n/**\n * Defines values for OriginGroupProvisioningState. \\\n * {@link KnownOriginGroupProvisioningState} can be used interchangeably with OriginGroupProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Succeeded** \\\n * **Failed** \\\n * **Updating** \\\n * **Deleting** \\\n * **Creating**\n */\nexport type OriginGroupProvisioningState = string;\n\n/** Known values of {@link CustomDomainResourceState} that the service accepts. */\nexport enum KnownCustomDomainResourceState {\n  /** Creating */\n  Creating = \"Creating\",\n  /** Active */\n  Active = \"Active\",\n  /** Deleting */\n  Deleting = \"Deleting\"\n}\n\n/**\n * Defines values for CustomDomainResourceState. \\\n * {@link KnownCustomDomainResourceState} can be used interchangeably with CustomDomainResourceState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Active** \\\n * **Deleting**\n */\nexport type CustomDomainResourceState = string;\n\n/** Known values of {@link CustomHttpsProvisioningState} that the service accepts. */\nexport enum KnownCustomHttpsProvisioningState {\n  /** Enabling */\n  Enabling = \"Enabling\",\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabling */\n  Disabling = \"Disabling\",\n  /** Disabled */\n  Disabled = \"Disabled\",\n  /** Failed */\n  Failed = \"Failed\"\n}\n\n/**\n * Defines values for CustomHttpsProvisioningState. \\\n * {@link KnownCustomHttpsProvisioningState} can be used interchangeably with CustomHttpsProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabling** \\\n * **Enabled** \\\n * **Disabling** \\\n * **Disabled** \\\n * **Failed**\n */\nexport type CustomHttpsProvisioningState = string;\n\n/** Known values of {@link CustomHttpsProvisioningSubstate} that the service accepts. */\nexport enum KnownCustomHttpsProvisioningSubstate {\n  /** SubmittingDomainControlValidationRequest */\n  SubmittingDomainControlValidationRequest = \"SubmittingDomainControlValidationRequest\",\n  /** PendingDomainControlValidationREquestApproval */\n  PendingDomainControlValidationREquestApproval = \"PendingDomainControlValidationREquestApproval\",\n  /** DomainControlValidationRequestApproved */\n  DomainControlValidationRequestApproved = \"DomainControlValidationRequestApproved\",\n  /** DomainControlValidationRequestRejected */\n  DomainControlValidationRequestRejected = \"DomainControlValidationRequestRejected\",\n  /** DomainControlValidationRequestTimedOut */\n  DomainControlValidationRequestTimedOut = \"DomainControlValidationRequestTimedOut\",\n  /** IssuingCertificate */\n  IssuingCertificate = \"IssuingCertificate\",\n  /** DeployingCertificate */\n  DeployingCertificate = \"DeployingCertificate\",\n  /** CertificateDeployed */\n  CertificateDeployed = \"CertificateDeployed\",\n  /** DeletingCertificate */\n  DeletingCertificate = \"DeletingCertificate\",\n  /** CertificateDeleted */\n  CertificateDeleted = \"CertificateDeleted\"\n}\n\n/**\n * Defines values for CustomHttpsProvisioningSubstate. \\\n * {@link KnownCustomHttpsProvisioningSubstate} can be used interchangeably with CustomHttpsProvisioningSubstate,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **SubmittingDomainControlValidationRequest** \\\n * **PendingDomainControlValidationREquestApproval** \\\n * **DomainControlValidationRequestApproved** \\\n * **DomainControlValidationRequestRejected** \\\n * **DomainControlValidationRequestTimedOut** \\\n * **IssuingCertificate** \\\n * **DeployingCertificate** \\\n * **CertificateDeployed** \\\n * **DeletingCertificate** \\\n * **CertificateDeleted**\n */\nexport type CustomHttpsProvisioningSubstate = string;\n\n/** Known values of {@link CertificateSource} that the service accepts. */\nexport enum KnownCertificateSource {\n  /** AzureKeyVault */\n  AzureKeyVault = \"AzureKeyVault\",\n  /** Cdn */\n  Cdn = \"Cdn\"\n}\n\n/**\n * Defines values for CertificateSource. \\\n * {@link KnownCertificateSource} can be used interchangeably with CertificateSource,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AzureKeyVault** \\\n * **Cdn**\n */\nexport type CertificateSource = string;\n\n/** Known values of {@link ProtocolType} that the service accepts. */\nexport enum KnownProtocolType {\n  /** ServerNameIndication */\n  ServerNameIndication = \"ServerNameIndication\",\n  /** IPBased */\n  IPBased = \"IPBased\"\n}\n\n/**\n * Defines values for ProtocolType. \\\n * {@link KnownProtocolType} can be used interchangeably with ProtocolType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **ServerNameIndication** \\\n * **IPBased**\n */\nexport type ProtocolType = string;\n\n/** Known values of {@link PolicyEnabledState} that the service accepts. */\nexport enum KnownPolicyEnabledState {\n  /** Disabled */\n  Disabled = \"Disabled\",\n  /** Enabled */\n  Enabled = \"Enabled\"\n}\n\n/**\n * Defines values for PolicyEnabledState. \\\n * {@link KnownPolicyEnabledState} can be used interchangeably with PolicyEnabledState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Disabled** \\\n * **Enabled**\n */\nexport type PolicyEnabledState = string;\n\n/** Known values of {@link PolicyMode} that the service accepts. */\nexport enum KnownPolicyMode {\n  /** Prevention */\n  Prevention = \"Prevention\",\n  /** Detection */\n  Detection = \"Detection\"\n}\n\n/**\n * Defines values for PolicyMode. \\\n * {@link KnownPolicyMode} can be used interchangeably with PolicyMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Prevention** \\\n * **Detection**\n */\nexport type PolicyMode = string;\n\n/** Known values of {@link PolicySettingsDefaultCustomBlockResponseStatusCode} that the service accepts. */\nexport enum KnownPolicySettingsDefaultCustomBlockResponseStatusCode {\n  /** TwoHundred */\n  TwoHundred = 200,\n  /** FourHundredThree */\n  FourHundredThree = 403,\n  /** FourHundredFive */\n  FourHundredFive = 405,\n  /** FourHundredSix */\n  FourHundredSix = 406,\n  /** FourHundredTwentyNine */\n  FourHundredTwentyNine = 429\n}\n\n/**\n * Defines values for PolicySettingsDefaultCustomBlockResponseStatusCode. \\\n * {@link KnownPolicySettingsDefaultCustomBlockResponseStatusCode} can be used interchangeably with PolicySettingsDefaultCustomBlockResponseStatusCode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **200** \\\n * **403** \\\n * **405** \\\n * **406** \\\n * **429**\n */\nexport type PolicySettingsDefaultCustomBlockResponseStatusCode = number;\n\n/** Known values of {@link CustomRuleEnabledState} that the service accepts. */\nexport enum KnownCustomRuleEnabledState {\n  /** Disabled */\n  Disabled = \"Disabled\",\n  /** Enabled */\n  Enabled = \"Enabled\"\n}\n\n/**\n * Defines values for CustomRuleEnabledState. \\\n * {@link KnownCustomRuleEnabledState} can be used interchangeably with CustomRuleEnabledState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Disabled** \\\n * **Enabled**\n */\nexport type CustomRuleEnabledState = string;\n\n/** Known values of {@link WafMatchVariable} that the service accepts. */\nexport enum KnownWafMatchVariable {\n  /** RemoteAddr */\n  RemoteAddr = \"RemoteAddr\",\n  /** SocketAddr */\n  SocketAddr = \"SocketAddr\",\n  /** RequestMethod */\n  RequestMethod = \"RequestMethod\",\n  /** RequestHeader */\n  RequestHeader = \"RequestHeader\",\n  /** RequestUri */\n  RequestUri = \"RequestUri\",\n  /** QueryString */\n  QueryString = \"QueryString\",\n  /** RequestBody */\n  RequestBody = \"RequestBody\",\n  /** Cookies */\n  Cookies = \"Cookies\",\n  /** PostArgs */\n  PostArgs = \"PostArgs\"\n}\n\n/**\n * Defines values for WafMatchVariable. \\\n * {@link KnownWafMatchVariable} can be used interchangeably with WafMatchVariable,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **RemoteAddr** \\\n * **SocketAddr** \\\n * **RequestMethod** \\\n * **RequestHeader** \\\n * **RequestUri** \\\n * **QueryString** \\\n * **RequestBody** \\\n * **Cookies** \\\n * **PostArgs**\n */\nexport type WafMatchVariable = string;\n\n/** Known values of {@link Operator} that the service accepts. */\nexport enum KnownOperator {\n  /** Any */\n  Any = \"Any\",\n  /** IPMatch */\n  IPMatch = \"IPMatch\",\n  /** GeoMatch */\n  GeoMatch = \"GeoMatch\",\n  /** Equal */\n  Equal = \"Equal\",\n  /** Contains */\n  Contains = \"Contains\",\n  /** LessThan */\n  LessThan = \"LessThan\",\n  /** GreaterThan */\n  GreaterThan = \"GreaterThan\",\n  /** LessThanOrEqual */\n  LessThanOrEqual = \"LessThanOrEqual\",\n  /** GreaterThanOrEqual */\n  GreaterThanOrEqual = \"GreaterThanOrEqual\",\n  /** BeginsWith */\n  BeginsWith = \"BeginsWith\",\n  /** EndsWith */\n  EndsWith = \"EndsWith\",\n  /** RegEx */\n  RegEx = \"RegEx\"\n}\n\n/**\n * Defines values for Operator. \\\n * {@link KnownOperator} can be used interchangeably with Operator,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Any** \\\n * **IPMatch** \\\n * **GeoMatch** \\\n * **Equal** \\\n * **Contains** \\\n * **LessThan** \\\n * **GreaterThan** \\\n * **LessThanOrEqual** \\\n * **GreaterThanOrEqual** \\\n * **BeginsWith** \\\n * **EndsWith** \\\n * **RegEx**\n */\nexport type Operator = string;\n\n/** Known values of {@link TransformType} that the service accepts. */\nexport enum KnownTransformType {\n  /** Lowercase */\n  Lowercase = \"Lowercase\",\n  /** Uppercase */\n  Uppercase = \"Uppercase\",\n  /** Trim */\n  Trim = \"Trim\",\n  /** UrlDecode */\n  UrlDecode = \"UrlDecode\",\n  /** UrlEncode */\n  UrlEncode = \"UrlEncode\",\n  /** RemoveNulls */\n  RemoveNulls = \"RemoveNulls\"\n}\n\n/**\n * Defines values for TransformType. \\\n * {@link KnownTransformType} can be used interchangeably with TransformType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Lowercase** \\\n * **Uppercase** \\\n * **Trim** \\\n * **UrlDecode** \\\n * **UrlEncode** \\\n * **RemoveNulls**\n */\nexport type TransformType = string;\n\n/** Known values of {@link ActionType} that the service accepts. */\nexport enum KnownActionType {\n  /** Allow */\n  Allow = \"Allow\",\n  /** Block */\n  Block = \"Block\",\n  /** Log */\n  Log = \"Log\",\n  /** Redirect */\n  Redirect = \"Redirect\"\n}\n\n/**\n * Defines values for ActionType. \\\n * {@link KnownActionType} can be used interchangeably with ActionType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Allow** \\\n * **Block** \\\n * **Log** \\\n * **Redirect**\n */\nexport type ActionType = string;\n\n/** Known values of {@link ManagedRuleEnabledState} that the service accepts. */\nexport enum KnownManagedRuleEnabledState {\n  /** Disabled */\n  Disabled = \"Disabled\",\n  /** Enabled */\n  Enabled = \"Enabled\"\n}\n\n/**\n * Defines values for ManagedRuleEnabledState. \\\n * {@link KnownManagedRuleEnabledState} can be used interchangeably with ManagedRuleEnabledState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Disabled** \\\n * **Enabled**\n */\nexport type ManagedRuleEnabledState = string;\n\n/** Known values of {@link ProvisioningState} that the service accepts. */\nexport enum KnownProvisioningState {\n  /** Creating */\n  Creating = \"Creating\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\"\n}\n\n/**\n * Defines values for ProvisioningState. \\\n * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Succeeded** \\\n * **Failed**\n */\nexport type ProvisioningState = string;\n\n/** Known values of {@link PolicyResourceState} that the service accepts. */\nexport enum KnownPolicyResourceState {\n  /** Creating */\n  Creating = \"Creating\",\n  /** Enabling */\n  Enabling = \"Enabling\",\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabling */\n  Disabling = \"Disabling\",\n  /** Disabled */\n  Disabled = \"Disabled\",\n  /** Deleting */\n  Deleting = \"Deleting\"\n}\n\n/**\n * Defines values for PolicyResourceState. \\\n * {@link KnownPolicyResourceState} can be used interchangeably with PolicyResourceState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Enabling** \\\n * **Enabled** \\\n * **Disabling** \\\n * **Disabled** \\\n * **Deleting**\n */\nexport type PolicyResourceState = string;\n\n/** Known values of {@link RemoteAddressOperator} that the service accepts. */\nexport enum KnownRemoteAddressOperator {\n  /** Any */\n  Any = \"Any\",\n  /** IPMatch */\n  IPMatch = \"IPMatch\",\n  /** GeoMatch */\n  GeoMatch = \"GeoMatch\"\n}\n\n/**\n * Defines values for RemoteAddressOperator. \\\n * {@link KnownRemoteAddressOperator} can be used interchangeably with RemoteAddressOperator,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Any** \\\n * **IPMatch** \\\n * **GeoMatch**\n */\nexport type RemoteAddressOperator = string;\n\n/** Known values of {@link Transform} that the service accepts. */\nexport enum KnownTransform {\n  /** Lowercase */\n  Lowercase = \"Lowercase\",\n  /** Uppercase */\n  Uppercase = \"Uppercase\",\n  /** Trim */\n  Trim = \"Trim\",\n  /** UrlDecode */\n  UrlDecode = \"UrlDecode\",\n  /** UrlEncode */\n  UrlEncode = \"UrlEncode\",\n  /** RemoveNulls */\n  RemoveNulls = \"RemoveNulls\"\n}\n\n/**\n * Defines values for Transform. \\\n * {@link KnownTransform} can be used interchangeably with Transform,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Lowercase** \\\n * **Uppercase** \\\n * **Trim** \\\n * **UrlDecode** \\\n * **UrlEncode** \\\n * **RemoveNulls**\n */\nexport type Transform = string;\n\n/** Known values of {@link RequestMethodOperator} that the service accepts. */\nexport enum KnownRequestMethodOperator {\n  /** Equal */\n  Equal = \"Equal\"\n}\n\n/**\n * Defines values for RequestMethodOperator. \\\n * {@link KnownRequestMethodOperator} can be used interchangeably with RequestMethodOperator,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Equal**\n */\nexport type RequestMethodOperator = string;\n\n/** Known values of {@link RequestMethodMatchConditionParametersMatchValuesItem} that the service accepts. */\nexport enum KnownRequestMethodMatchConditionParametersMatchValuesItem {\n  /** GET */\n  GET = \"GET\",\n  /** Head */\n  Head = \"HEAD\",\n  /** Post */\n  Post = \"POST\",\n  /** PUT */\n  PUT = \"PUT\",\n  /** Delete */\n  Delete = \"DELETE\",\n  /** Options */\n  Options = \"OPTIONS\",\n  /** Trace */\n  Trace = \"TRACE\"\n}\n\n/**\n * Defines values for RequestMethodMatchConditionParametersMatchValuesItem. \\\n * {@link KnownRequestMethodMatchConditionParametersMatchValuesItem} can be used interchangeably with RequestMethodMatchConditionParametersMatchValuesItem,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **GET** \\\n * **HEAD** \\\n * **POST** \\\n * **PUT** \\\n * **DELETE** \\\n * **OPTIONS** \\\n * **TRACE**\n */\nexport type RequestMethodMatchConditionParametersMatchValuesItem = string;\n\n/** Known values of {@link QueryStringOperator} that the service accepts. */\nexport enum KnownQueryStringOperator {\n  /** Any */\n  Any = \"Any\",\n  /** Equal */\n  Equal = \"Equal\",\n  /** Contains */\n  Contains = \"Contains\",\n  /** BeginsWith */\n  BeginsWith = \"BeginsWith\",\n  /** EndsWith */\n  EndsWith = \"EndsWith\",\n  /** LessThan */\n  LessThan = \"LessThan\",\n  /** LessThanOrEqual */\n  LessThanOrEqual = \"LessThanOrEqual\",\n  /** GreaterThan */\n  GreaterThan = \"GreaterThan\",\n  /** GreaterThanOrEqual */\n  GreaterThanOrEqual = \"GreaterThanOrEqual\",\n  /** RegEx */\n  RegEx = \"RegEx\"\n}\n\n/**\n * Defines values for QueryStringOperator. \\\n * {@link KnownQueryStringOperator} can be used interchangeably with QueryStringOperator,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Any** \\\n * **Equal** \\\n * **Contains** \\\n * **BeginsWith** \\\n * **EndsWith** \\\n * **LessThan** \\\n * **LessThanOrEqual** \\\n * **GreaterThan** \\\n * **GreaterThanOrEqual** \\\n * **RegEx**\n */\nexport type QueryStringOperator = string;\n\n/** Known values of {@link PostArgsOperator} that the service accepts. */\nexport enum KnownPostArgsOperator {\n  /** Any */\n  Any = \"Any\",\n  /** Equal */\n  Equal = \"Equal\",\n  /** Contains */\n  Contains = \"Contains\",\n  /** BeginsWith */\n  BeginsWith = \"BeginsWith\",\n  /** EndsWith */\n  EndsWith = \"EndsWith\",\n  /** LessThan */\n  LessThan = \"LessThan\",\n  /** LessThanOrEqual */\n  LessThanOrEqual = \"LessThanOrEqual\",\n  /** GreaterThan */\n  GreaterThan = \"GreaterThan\",\n  /** GreaterThanOrEqual */\n  GreaterThanOrEqual = \"GreaterThanOrEqual\",\n  /** RegEx */\n  RegEx = \"RegEx\"\n}\n\n/**\n * Defines values for PostArgsOperator. \\\n * {@link KnownPostArgsOperator} can be used interchangeably with PostArgsOperator,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Any** \\\n * **Equal** \\\n * **Contains** \\\n * **BeginsWith** \\\n * **EndsWith** \\\n * **LessThan** \\\n * **LessThanOrEqual** \\\n * **GreaterThan** \\\n * **GreaterThanOrEqual** \\\n * **RegEx**\n */\nexport type PostArgsOperator = string;\n\n/** Known values of {@link RequestUriOperator} that the service accepts. */\nexport enum KnownRequestUriOperator {\n  /** Any */\n  Any = \"Any\",\n  /** Equal */\n  Equal = \"Equal\",\n  /** Contains */\n  Contains = \"Contains\",\n  /** BeginsWith */\n  BeginsWith = \"BeginsWith\",\n  /** EndsWith */\n  EndsWith = \"EndsWith\",\n  /** LessThan */\n  LessThan = \"LessThan\",\n  /** LessThanOrEqual */\n  LessThanOrEqual = \"LessThanOrEqual\",\n  /** GreaterThan */\n  GreaterThan = \"GreaterThan\",\n  /** GreaterThanOrEqual */\n  GreaterThanOrEqual = \"GreaterThanOrEqual\",\n  /** RegEx */\n  RegEx = \"RegEx\"\n}\n\n/**\n * Defines values for RequestUriOperator. \\\n * {@link KnownRequestUriOperator} can be used interchangeably with RequestUriOperator,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Any** \\\n * **Equal** \\\n * **Contains** \\\n * **BeginsWith** \\\n * **EndsWith** \\\n * **LessThan** \\\n * **LessThanOrEqual** \\\n * **GreaterThan** \\\n * **GreaterThanOrEqual** \\\n * **RegEx**\n */\nexport type RequestUriOperator = string;\n\n/** Known values of {@link RequestHeaderOperator} that the service accepts. */\nexport enum KnownRequestHeaderOperator {\n  /** Any */\n  Any = \"Any\",\n  /** Equal */\n  Equal = \"Equal\",\n  /** Contains */\n  Contains = \"Contains\",\n  /** BeginsWith */\n  BeginsWith = \"BeginsWith\",\n  /** EndsWith */\n  EndsWith = \"EndsWith\",\n  /** LessThan */\n  LessThan = \"LessThan\",\n  /** LessThanOrEqual */\n  LessThanOrEqual = \"LessThanOrEqual\",\n  /** GreaterThan */\n  GreaterThan = \"GreaterThan\",\n  /** GreaterThanOrEqual */\n  GreaterThanOrEqual = \"GreaterThanOrEqual\",\n  /** RegEx */\n  RegEx = \"RegEx\"\n}\n\n/**\n * Defines values for RequestHeaderOperator. \\\n * {@link KnownRequestHeaderOperator} can be used interchangeably with RequestHeaderOperator,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Any** \\\n * **Equal** \\\n * **Contains** \\\n * **BeginsWith** \\\n * **EndsWith** \\\n * **LessThan** \\\n * **LessThanOrEqual** \\\n * **GreaterThan** \\\n * **GreaterThanOrEqual** \\\n * **RegEx**\n */\nexport type RequestHeaderOperator = string;\n\n/** Known values of {@link RequestBodyOperator} that the service accepts. */\nexport enum KnownRequestBodyOperator {\n  /** Any */\n  Any = \"Any\",\n  /** Equal */\n  Equal = \"Equal\",\n  /** Contains */\n  Contains = \"Contains\",\n  /** BeginsWith */\n  BeginsWith = \"BeginsWith\",\n  /** EndsWith */\n  EndsWith = \"EndsWith\",\n  /** LessThan */\n  LessThan = \"LessThan\",\n  /** LessThanOrEqual */\n  LessThanOrEqual = \"LessThanOrEqual\",\n  /** GreaterThan */\n  GreaterThan = \"GreaterThan\",\n  /** GreaterThanOrEqual */\n  GreaterThanOrEqual = \"GreaterThanOrEqual\",\n  /** RegEx */\n  RegEx = \"RegEx\"\n}\n\n/**\n * Defines values for RequestBodyOperator. \\\n * {@link KnownRequestBodyOperator} can be used interchangeably with RequestBodyOperator,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Any** \\\n * **Equal** \\\n * **Contains** \\\n * **BeginsWith** \\\n * **EndsWith** \\\n * **LessThan** \\\n * **LessThanOrEqual** \\\n * **GreaterThan** \\\n * **GreaterThanOrEqual** \\\n * **RegEx**\n */\nexport type RequestBodyOperator = string;\n\n/** Known values of {@link RequestSchemeMatchConditionParametersMatchValuesItem} that the service accepts. */\nexport enum KnownRequestSchemeMatchConditionParametersMatchValuesItem {\n  /** Http */\n  Http = \"HTTP\",\n  /** Https */\n  Https = \"HTTPS\"\n}\n\n/**\n * Defines values for RequestSchemeMatchConditionParametersMatchValuesItem. \\\n * {@link KnownRequestSchemeMatchConditionParametersMatchValuesItem} can be used interchangeably with RequestSchemeMatchConditionParametersMatchValuesItem,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **HTTP** \\\n * **HTTPS**\n */\nexport type RequestSchemeMatchConditionParametersMatchValuesItem = string;\n\n/** Known values of {@link UrlPathOperator} that the service accepts. */\nexport enum KnownUrlPathOperator {\n  /** Any */\n  Any = \"Any\",\n  /** Equal */\n  Equal = \"Equal\",\n  /** Contains */\n  Contains = \"Contains\",\n  /** BeginsWith */\n  BeginsWith = \"BeginsWith\",\n  /** EndsWith */\n  EndsWith = \"EndsWith\",\n  /** LessThan */\n  LessThan = \"LessThan\",\n  /** LessThanOrEqual */\n  LessThanOrEqual = \"LessThanOrEqual\",\n  /** GreaterThan */\n  GreaterThan = \"GreaterThan\",\n  /** GreaterThanOrEqual */\n  GreaterThanOrEqual = \"GreaterThanOrEqual\",\n  /** Wildcard */\n  Wildcard = \"Wildcard\",\n  /** RegEx */\n  RegEx = \"RegEx\"\n}\n\n/**\n * Defines values for UrlPathOperator. \\\n * {@link KnownUrlPathOperator} can be used interchangeably with UrlPathOperator,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Any** \\\n * **Equal** \\\n * **Contains** \\\n * **BeginsWith** \\\n * **EndsWith** \\\n * **LessThan** \\\n * **LessThanOrEqual** \\\n * **GreaterThan** \\\n * **GreaterThanOrEqual** \\\n * **Wildcard** \\\n * **RegEx**\n */\nexport type UrlPathOperator = string;\n\n/** Known values of {@link UrlFileExtensionOperator} that the service accepts. */\nexport enum KnownUrlFileExtensionOperator {\n  /** Any */\n  Any = \"Any\",\n  /** Equal */\n  Equal = \"Equal\",\n  /** Contains */\n  Contains = \"Contains\",\n  /** BeginsWith */\n  BeginsWith = \"BeginsWith\",\n  /** EndsWith */\n  EndsWith = \"EndsWith\",\n  /** LessThan */\n  LessThan = \"LessThan\",\n  /** LessThanOrEqual */\n  LessThanOrEqual = \"LessThanOrEqual\",\n  /** GreaterThan */\n  GreaterThan = \"GreaterThan\",\n  /** GreaterThanOrEqual */\n  GreaterThanOrEqual = \"GreaterThanOrEqual\",\n  /** RegEx */\n  RegEx = \"RegEx\"\n}\n\n/**\n * Defines values for UrlFileExtensionOperator. \\\n * {@link KnownUrlFileExtensionOperator} can be used interchangeably with UrlFileExtensionOperator,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Any** \\\n * **Equal** \\\n * **Contains** \\\n * **BeginsWith** \\\n * **EndsWith** \\\n * **LessThan** \\\n * **LessThanOrEqual** \\\n * **GreaterThan** \\\n * **GreaterThanOrEqual** \\\n * **RegEx**\n */\nexport type UrlFileExtensionOperator = string;\n\n/** Known values of {@link UrlFileNameOperator} that the service accepts. */\nexport enum KnownUrlFileNameOperator {\n  /** Any */\n  Any = \"Any\",\n  /** Equal */\n  Equal = \"Equal\",\n  /** Contains */\n  Contains = \"Contains\",\n  /** BeginsWith */\n  BeginsWith = \"BeginsWith\",\n  /** EndsWith */\n  EndsWith = \"EndsWith\",\n  /** LessThan */\n  LessThan = \"LessThan\",\n  /** LessThanOrEqual */\n  LessThanOrEqual = \"LessThanOrEqual\",\n  /** GreaterThan */\n  GreaterThan = \"GreaterThan\",\n  /** GreaterThanOrEqual */\n  GreaterThanOrEqual = \"GreaterThanOrEqual\",\n  /** RegEx */\n  RegEx = \"RegEx\"\n}\n\n/**\n * Defines values for UrlFileNameOperator. \\\n * {@link KnownUrlFileNameOperator} can be used interchangeably with UrlFileNameOperator,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Any** \\\n * **Equal** \\\n * **Contains** \\\n * **BeginsWith** \\\n * **EndsWith** \\\n * **LessThan** \\\n * **LessThanOrEqual** \\\n * **GreaterThan** \\\n * **GreaterThanOrEqual** \\\n * **RegEx**\n */\nexport type UrlFileNameOperator = string;\n\n/** Known values of {@link HttpVersionOperator} that the service accepts. */\nexport enum KnownHttpVersionOperator {\n  /** Equal */\n  Equal = \"Equal\"\n}\n\n/**\n * Defines values for HttpVersionOperator. \\\n * {@link KnownHttpVersionOperator} can be used interchangeably with HttpVersionOperator,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Equal**\n */\nexport type HttpVersionOperator = string;\n\n/** Known values of {@link CookiesOperator} that the service accepts. */\nexport enum KnownCookiesOperator {\n  /** Any */\n  Any = \"Any\",\n  /** Equal */\n  Equal = \"Equal\",\n  /** Contains */\n  Contains = \"Contains\",\n  /** BeginsWith */\n  BeginsWith = \"BeginsWith\",\n  /** EndsWith */\n  EndsWith = \"EndsWith\",\n  /** LessThan */\n  LessThan = \"LessThan\",\n  /** LessThanOrEqual */\n  LessThanOrEqual = \"LessThanOrEqual\",\n  /** GreaterThan */\n  GreaterThan = \"GreaterThan\",\n  /** GreaterThanOrEqual */\n  GreaterThanOrEqual = \"GreaterThanOrEqual\",\n  /** RegEx */\n  RegEx = \"RegEx\"\n}\n\n/**\n * Defines values for CookiesOperator. \\\n * {@link KnownCookiesOperator} can be used interchangeably with CookiesOperator,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Any** \\\n * **Equal** \\\n * **Contains** \\\n * **BeginsWith** \\\n * **EndsWith** \\\n * **LessThan** \\\n * **LessThanOrEqual** \\\n * **GreaterThan** \\\n * **GreaterThanOrEqual** \\\n * **RegEx**\n */\nexport type CookiesOperator = string;\n\n/** Known values of {@link IsDeviceOperator} that the service accepts. */\nexport enum KnownIsDeviceOperator {\n  /** Equal */\n  Equal = \"Equal\"\n}\n\n/**\n * Defines values for IsDeviceOperator. \\\n * {@link KnownIsDeviceOperator} can be used interchangeably with IsDeviceOperator,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Equal**\n */\nexport type IsDeviceOperator = string;\n\n/** Known values of {@link IsDeviceMatchConditionParametersMatchValuesItem} that the service accepts. */\nexport enum KnownIsDeviceMatchConditionParametersMatchValuesItem {\n  /** Mobile */\n  Mobile = \"Mobile\",\n  /** Desktop */\n  Desktop = \"Desktop\"\n}\n\n/**\n * Defines values for IsDeviceMatchConditionParametersMatchValuesItem. \\\n * {@link KnownIsDeviceMatchConditionParametersMatchValuesItem} can be used interchangeably with IsDeviceMatchConditionParametersMatchValuesItem,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Mobile** \\\n * **Desktop**\n */\nexport type IsDeviceMatchConditionParametersMatchValuesItem = string;\n\n/** Known values of {@link SocketAddrOperator} that the service accepts. */\nexport enum KnownSocketAddrOperator {\n  /** Any */\n  Any = \"Any\",\n  /** IPMatch */\n  IPMatch = \"IPMatch\"\n}\n\n/**\n * Defines values for SocketAddrOperator. \\\n * {@link KnownSocketAddrOperator} can be used interchangeably with SocketAddrOperator,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Any** \\\n * **IPMatch**\n */\nexport type SocketAddrOperator = string;\n\n/** Known values of {@link ClientPortOperator} that the service accepts. */\nexport enum KnownClientPortOperator {\n  /** Any */\n  Any = \"Any\",\n  /** Equal */\n  Equal = \"Equal\",\n  /** Contains */\n  Contains = \"Contains\",\n  /** BeginsWith */\n  BeginsWith = \"BeginsWith\",\n  /** EndsWith */\n  EndsWith = \"EndsWith\",\n  /** LessThan */\n  LessThan = \"LessThan\",\n  /** LessThanOrEqual */\n  LessThanOrEqual = \"LessThanOrEqual\",\n  /** GreaterThan */\n  GreaterThan = \"GreaterThan\",\n  /** GreaterThanOrEqual */\n  GreaterThanOrEqual = \"GreaterThanOrEqual\",\n  /** RegEx */\n  RegEx = \"RegEx\"\n}\n\n/**\n * Defines values for ClientPortOperator. \\\n * {@link KnownClientPortOperator} can be used interchangeably with ClientPortOperator,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Any** \\\n * **Equal** \\\n * **Contains** \\\n * **BeginsWith** \\\n * **EndsWith** \\\n * **LessThan** \\\n * **LessThanOrEqual** \\\n * **GreaterThan** \\\n * **GreaterThanOrEqual** \\\n * **RegEx**\n */\nexport type ClientPortOperator = string;\n\n/** Known values of {@link ServerPortOperator} that the service accepts. */\nexport enum KnownServerPortOperator {\n  /** Any */\n  Any = \"Any\",\n  /** Equal */\n  Equal = \"Equal\",\n  /** Contains */\n  Contains = \"Contains\",\n  /** BeginsWith */\n  BeginsWith = \"BeginsWith\",\n  /** EndsWith */\n  EndsWith = \"EndsWith\",\n  /** LessThan */\n  LessThan = \"LessThan\",\n  /** LessThanOrEqual */\n  LessThanOrEqual = \"LessThanOrEqual\",\n  /** GreaterThan */\n  GreaterThan = \"GreaterThan\",\n  /** GreaterThanOrEqual */\n  GreaterThanOrEqual = \"GreaterThanOrEqual\",\n  /** RegEx */\n  RegEx = \"RegEx\"\n}\n\n/**\n * Defines values for ServerPortOperator. \\\n * {@link KnownServerPortOperator} can be used interchangeably with ServerPortOperator,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Any** \\\n * **Equal** \\\n * **Contains** \\\n * **BeginsWith** \\\n * **EndsWith** \\\n * **LessThan** \\\n * **LessThanOrEqual** \\\n * **GreaterThan** \\\n * **GreaterThanOrEqual** \\\n * **RegEx**\n */\nexport type ServerPortOperator = string;\n\n/** Known values of {@link HostNameOperator} that the service accepts. */\nexport enum KnownHostNameOperator {\n  /** Any */\n  Any = \"Any\",\n  /** Equal */\n  Equal = \"Equal\",\n  /** Contains */\n  Contains = \"Contains\",\n  /** BeginsWith */\n  BeginsWith = \"BeginsWith\",\n  /** EndsWith */\n  EndsWith = \"EndsWith\",\n  /** LessThan */\n  LessThan = \"LessThan\",\n  /** LessThanOrEqual */\n  LessThanOrEqual = \"LessThanOrEqual\",\n  /** GreaterThan */\n  GreaterThan = \"GreaterThan\",\n  /** GreaterThanOrEqual */\n  GreaterThanOrEqual = \"GreaterThanOrEqual\",\n  /** RegEx */\n  RegEx = \"RegEx\"\n}\n\n/**\n * Defines values for HostNameOperator. \\\n * {@link KnownHostNameOperator} can be used interchangeably with HostNameOperator,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Any** \\\n * **Equal** \\\n * **Contains** \\\n * **BeginsWith** \\\n * **EndsWith** \\\n * **LessThan** \\\n * **LessThanOrEqual** \\\n * **GreaterThan** \\\n * **GreaterThanOrEqual** \\\n * **RegEx**\n */\nexport type HostNameOperator = string;\n\n/** Known values of {@link SslProtocolOperator} that the service accepts. */\nexport enum KnownSslProtocolOperator {\n  /** Equal */\n  Equal = \"Equal\"\n}\n\n/**\n * Defines values for SslProtocolOperator. \\\n * {@link KnownSslProtocolOperator} can be used interchangeably with SslProtocolOperator,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Equal**\n */\nexport type SslProtocolOperator = string;\n\n/** Known values of {@link SslProtocol} that the service accepts. */\nexport enum KnownSslProtocol {\n  /** TLSv1 */\n  TLSv1 = \"TLSv1\",\n  /** TLSv11 */\n  TLSv11 = \"TLSv1.1\",\n  /** TLSv12 */\n  TLSv12 = \"TLSv1.2\"\n}\n\n/**\n * Defines values for SslProtocol. \\\n * {@link KnownSslProtocol} can be used interchangeably with SslProtocol,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **TLSv1** \\\n * **TLSv1.1** \\\n * **TLSv1.2**\n */\nexport type SslProtocol = string;\n\n/** Known values of {@link RedirectType} that the service accepts. */\nexport enum KnownRedirectType {\n  /** Moved */\n  Moved = \"Moved\",\n  /** Found */\n  Found = \"Found\",\n  /** TemporaryRedirect */\n  TemporaryRedirect = \"TemporaryRedirect\",\n  /** PermanentRedirect */\n  PermanentRedirect = \"PermanentRedirect\"\n}\n\n/**\n * Defines values for RedirectType. \\\n * {@link KnownRedirectType} can be used interchangeably with RedirectType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Moved** \\\n * **Found** \\\n * **TemporaryRedirect** \\\n * **PermanentRedirect**\n */\nexport type RedirectType = string;\n\n/** Known values of {@link DestinationProtocol} that the service accepts. */\nexport enum KnownDestinationProtocol {\n  /** MatchRequest */\n  MatchRequest = \"MatchRequest\",\n  /** Http */\n  Http = \"Http\",\n  /** Https */\n  Https = \"Https\"\n}\n\n/**\n * Defines values for DestinationProtocol. \\\n * {@link KnownDestinationProtocol} can be used interchangeably with DestinationProtocol,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **MatchRequest** \\\n * **Http** \\\n * **Https**\n */\nexport type DestinationProtocol = string;\n\n/** Known values of {@link Algorithm} that the service accepts. */\nexport enum KnownAlgorithm {\n  /** SHA256 */\n  SHA256 = \"SHA256\"\n}\n\n/**\n * Defines values for Algorithm. \\\n * {@link KnownAlgorithm} can be used interchangeably with Algorithm,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **SHA256**\n */\nexport type Algorithm = string;\n\n/** Known values of {@link ParamIndicator} that the service accepts. */\nexport enum KnownParamIndicator {\n  /** Expires */\n  Expires = \"Expires\",\n  /** KeyId */\n  KeyId = \"KeyId\",\n  /** Signature */\n  Signature = \"Signature\"\n}\n\n/**\n * Defines values for ParamIndicator. \\\n * {@link KnownParamIndicator} can be used interchangeably with ParamIndicator,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Expires** \\\n * **KeyId** \\\n * **Signature**\n */\nexport type ParamIndicator = string;\n\n/** Known values of {@link HeaderAction} that the service accepts. */\nexport enum KnownHeaderAction {\n  /** Append */\n  Append = \"Append\",\n  /** Overwrite */\n  Overwrite = \"Overwrite\",\n  /** Delete */\n  Delete = \"Delete\"\n}\n\n/**\n * Defines values for HeaderAction. \\\n * {@link KnownHeaderAction} can be used interchangeably with HeaderAction,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Append** \\\n * **Overwrite** \\\n * **Delete**\n */\nexport type HeaderAction = string;\n\n/** Known values of {@link CacheBehavior} that the service accepts. */\nexport enum KnownCacheBehavior {\n  /** BypassCache */\n  BypassCache = \"BypassCache\",\n  /** Override */\n  Override = \"Override\",\n  /** SetIfMissing */\n  SetIfMissing = \"SetIfMissing\"\n}\n\n/**\n * Defines values for CacheBehavior. \\\n * {@link KnownCacheBehavior} can be used interchangeably with CacheBehavior,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **BypassCache** \\\n * **Override** \\\n * **SetIfMissing**\n */\nexport type CacheBehavior = string;\n\n/** Known values of {@link CacheType} that the service accepts. */\nexport enum KnownCacheType {\n  /** All */\n  All = \"All\"\n}\n\n/**\n * Defines values for CacheType. \\\n * {@link KnownCacheType} can be used interchangeably with CacheType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **All**\n */\nexport type CacheType = string;\n\n/** Known values of {@link QueryStringBehavior} that the service accepts. */\nexport enum KnownQueryStringBehavior {\n  /** Include */\n  Include = \"Include\",\n  /** IncludeAll */\n  IncludeAll = \"IncludeAll\",\n  /** Exclude */\n  Exclude = \"Exclude\",\n  /** ExcludeAll */\n  ExcludeAll = \"ExcludeAll\"\n}\n\n/**\n * Defines values for QueryStringBehavior. \\\n * {@link KnownQueryStringBehavior} can be used interchangeably with QueryStringBehavior,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Include** \\\n * **IncludeAll** \\\n * **Exclude** \\\n * **ExcludeAll**\n */\nexport type QueryStringBehavior = string;\n\n/** Known values of {@link RuleQueryStringCachingBehavior} that the service accepts. */\nexport enum KnownRuleQueryStringCachingBehavior {\n  /** IgnoreQueryString */\n  IgnoreQueryString = \"IgnoreQueryString\",\n  /** UseQueryString */\n  UseQueryString = \"UseQueryString\",\n  /** IgnoreSpecifiedQueryStrings */\n  IgnoreSpecifiedQueryStrings = \"IgnoreSpecifiedQueryStrings\",\n  /** IncludeSpecifiedQueryStrings */\n  IncludeSpecifiedQueryStrings = \"IncludeSpecifiedQueryStrings\"\n}\n\n/**\n * Defines values for RuleQueryStringCachingBehavior. \\\n * {@link KnownRuleQueryStringCachingBehavior} can be used interchangeably with RuleQueryStringCachingBehavior,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **IgnoreQueryString** \\\n * **UseQueryString** \\\n * **IgnoreSpecifiedQueryStrings** \\\n * **IncludeSpecifiedQueryStrings**\n */\nexport type RuleQueryStringCachingBehavior = string;\n\n/** Known values of {@link RuleIsCompressionEnabled} that the service accepts. */\nexport enum KnownRuleIsCompressionEnabled {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for RuleIsCompressionEnabled. \\\n * {@link KnownRuleIsCompressionEnabled} can be used interchangeably with RuleIsCompressionEnabled,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type RuleIsCompressionEnabled = string;\n\n/** Known values of {@link RuleCacheBehavior} that the service accepts. */\nexport enum KnownRuleCacheBehavior {\n  /** HonorOrigin */\n  HonorOrigin = \"HonorOrigin\",\n  /** OverrideAlways */\n  OverrideAlways = \"OverrideAlways\",\n  /** OverrideIfOriginMissing */\n  OverrideIfOriginMissing = \"OverrideIfOriginMissing\"\n}\n\n/**\n * Defines values for RuleCacheBehavior. \\\n * {@link KnownRuleCacheBehavior} can be used interchangeably with RuleCacheBehavior,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **HonorOrigin** \\\n * **OverrideAlways** \\\n * **OverrideIfOriginMissing**\n */\nexport type RuleCacheBehavior = string;\n\n/** Known values of {@link CertificateType} that the service accepts. */\nexport enum KnownCertificateType {\n  /** Shared */\n  Shared = \"Shared\",\n  /** Dedicated */\n  Dedicated = \"Dedicated\"\n}\n\n/**\n * Defines values for CertificateType. \\\n * {@link KnownCertificateType} can be used interchangeably with CertificateType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Shared** \\\n * **Dedicated**\n */\nexport type CertificateType = string;\n\n/** Known values of {@link UpdateRule} that the service accepts. */\nexport enum KnownUpdateRule {\n  /** NoAction */\n  NoAction = \"NoAction\"\n}\n\n/**\n * Defines values for UpdateRule. \\\n * {@link KnownUpdateRule} can be used interchangeably with UpdateRule,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NoAction**\n */\nexport type UpdateRule = string;\n\n/** Known values of {@link DeleteRule} that the service accepts. */\nexport enum KnownDeleteRule {\n  /** NoAction */\n  NoAction = \"NoAction\"\n}\n\n/**\n * Defines values for DeleteRule. \\\n * {@link KnownDeleteRule} can be used interchangeably with DeleteRule,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NoAction**\n */\nexport type DeleteRule = string;\n/** Defines values for AfdMinimumTlsVersion. */\nexport type AfdMinimumTlsVersion = \"TLS10\" | \"TLS12\";\n/** Defines values for HealthProbeRequestType. */\nexport type HealthProbeRequestType = \"NotSet\" | \"GET\" | \"HEAD\";\n/** Defines values for ProbeProtocol. */\nexport type ProbeProtocol = \"NotSet\" | \"Http\" | \"Https\";\n/** Defines values for SharedPrivateLinkResourceStatus. */\nexport type SharedPrivateLinkResourceStatus =\n  | \"Pending\"\n  | \"Approved\"\n  | \"Rejected\"\n  | \"Disconnected\"\n  | \"Timeout\";\n/** Defines values for ResponseBasedDetectedErrorTypes. */\nexport type ResponseBasedDetectedErrorTypes =\n  | \"None\"\n  | \"TcpErrorsOnly\"\n  | \"TcpAndHttpErrors\";\n/** Defines values for QueryStringCachingBehavior. */\nexport type QueryStringCachingBehavior =\n  | \"IgnoreQueryString\"\n  | \"BypassCaching\"\n  | \"UseQueryString\"\n  | \"NotSet\";\n/** Defines values for GeoFilterActions. */\nexport type GeoFilterActions = \"Block\" | \"Allow\";\n/** Defines values for MinimumTlsVersion. */\nexport type MinimumTlsVersion = \"None\" | \"TLS10\" | \"TLS12\";\n\n/** Optional parameters. */\nexport interface CheckEndpointNameAvailabilityOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkEndpointNameAvailability operation. */\nexport type CheckEndpointNameAvailabilityResponse = CheckEndpointNameAvailabilityOutput;\n\n/** Optional parameters. */\nexport interface CheckNameAvailabilityOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkNameAvailability operation. */\nexport type CheckNameAvailabilityResponse = CheckNameAvailabilityOutput;\n\n/** Optional parameters. */\nexport interface CheckNameAvailabilityWithSubscriptionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkNameAvailabilityWithSubscription operation. */\nexport type CheckNameAvailabilityWithSubscriptionResponse = CheckNameAvailabilityOutput;\n\n/** Optional parameters. */\nexport interface ValidateProbeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the validateProbe operation. */\nexport type ValidateProbeResponse = ValidateProbeOutput;\n\n/** Optional parameters. */\nexport interface AfdProfilesListResourceUsageOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listResourceUsage operation. */\nexport type AfdProfilesListResourceUsageResponse = UsagesListResult;\n\n/** Optional parameters. */\nexport interface AfdProfilesCheckHostNameAvailabilityOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkHostNameAvailability operation. */\nexport type AfdProfilesCheckHostNameAvailabilityResponse = CheckNameAvailabilityOutput;\n\n/** Optional parameters. */\nexport interface AfdProfilesListResourceUsageNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listResourceUsageNext operation. */\nexport type AfdProfilesListResourceUsageNextResponse = UsagesListResult;\n\n/** Optional parameters. */\nexport interface AfdCustomDomainsListByProfileOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByProfile operation. */\nexport type AfdCustomDomainsListByProfileResponse = AFDDomainListResult;\n\n/** Optional parameters. */\nexport interface AfdCustomDomainsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type AfdCustomDomainsGetResponse = AFDDomain;\n\n/** Optional parameters. */\nexport interface AfdCustomDomainsCreateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the create operation. */\nexport type AfdCustomDomainsCreateResponse = AFDDomain;\n\n/** Optional parameters. */\nexport interface AfdCustomDomainsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type AfdCustomDomainsUpdateResponse = AFDDomain;\n\n/** Optional parameters. */\nexport interface AfdCustomDomainsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface AfdCustomDomainsRefreshValidationTokenOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface AfdCustomDomainsListByProfileNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByProfileNext operation. */\nexport type AfdCustomDomainsListByProfileNextResponse = AFDDomainListResult;\n\n/** Optional parameters. */\nexport interface AfdEndpointsListByProfileOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByProfile operation. */\nexport type AfdEndpointsListByProfileResponse = AFDEndpointListResult;\n\n/** Optional parameters. */\nexport interface AfdEndpointsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type AfdEndpointsGetResponse = AFDEndpoint;\n\n/** Optional parameters. */\nexport interface AfdEndpointsCreateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the create operation. */\nexport type AfdEndpointsCreateResponse = AFDEndpoint;\n\n/** Optional parameters. */\nexport interface AfdEndpointsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type AfdEndpointsUpdateResponse = AFDEndpoint;\n\n/** Optional parameters. */\nexport interface AfdEndpointsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface AfdEndpointsPurgeContentOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface AfdEndpointsListResourceUsageOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listResourceUsage operation. */\nexport type AfdEndpointsListResourceUsageResponse = UsagesListResult;\n\n/** Optional parameters. */\nexport interface AfdEndpointsValidateCustomDomainOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the validateCustomDomain operation. */\nexport type AfdEndpointsValidateCustomDomainResponse = ValidateCustomDomainOutput;\n\n/** Optional parameters. */\nexport interface AfdEndpointsListByProfileNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByProfileNext operation. */\nexport type AfdEndpointsListByProfileNextResponse = AFDEndpointListResult;\n\n/** Optional parameters. */\nexport interface AfdEndpointsListResourceUsageNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listResourceUsageNext operation. */\nexport type AfdEndpointsListResourceUsageNextResponse = UsagesListResult;\n\n/** Optional parameters. */\nexport interface AfdOriginGroupsListByProfileOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByProfile operation. */\nexport type AfdOriginGroupsListByProfileResponse = AFDOriginGroupListResult;\n\n/** Optional parameters. */\nexport interface AfdOriginGroupsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type AfdOriginGroupsGetResponse = AFDOriginGroup;\n\n/** Optional parameters. */\nexport interface AfdOriginGroupsCreateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the create operation. */\nexport type AfdOriginGroupsCreateResponse = AFDOriginGroup;\n\n/** Optional parameters. */\nexport interface AfdOriginGroupsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type AfdOriginGroupsUpdateResponse = AFDOriginGroup;\n\n/** Optional parameters. */\nexport interface AfdOriginGroupsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface AfdOriginGroupsListResourceUsageOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listResourceUsage operation. */\nexport type AfdOriginGroupsListResourceUsageResponse = UsagesListResult;\n\n/** Optional parameters. */\nexport interface AfdOriginGroupsListByProfileNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByProfileNext operation. */\nexport type AfdOriginGroupsListByProfileNextResponse = AFDOriginGroupListResult;\n\n/** Optional parameters. */\nexport interface AfdOriginGroupsListResourceUsageNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listResourceUsageNext operation. */\nexport type AfdOriginGroupsListResourceUsageNextResponse = UsagesListResult;\n\n/** Optional parameters. */\nexport interface AfdOriginsListByOriginGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByOriginGroup operation. */\nexport type AfdOriginsListByOriginGroupResponse = AFDOriginListResult;\n\n/** Optional parameters. */\nexport interface AfdOriginsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type AfdOriginsGetResponse = AFDOrigin;\n\n/** Optional parameters. */\nexport interface AfdOriginsCreateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the create operation. */\nexport type AfdOriginsCreateResponse = AFDOrigin;\n\n/** Optional parameters. */\nexport interface AfdOriginsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type AfdOriginsUpdateResponse = AFDOrigin;\n\n/** Optional parameters. */\nexport interface AfdOriginsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface AfdOriginsListByOriginGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByOriginGroupNext operation. */\nexport type AfdOriginsListByOriginGroupNextResponse = AFDOriginListResult;\n\n/** Optional parameters. */\nexport interface RoutesListByEndpointOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByEndpoint operation. */\nexport type RoutesListByEndpointResponse = RouteListResult;\n\n/** Optional parameters. */\nexport interface RoutesGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type RoutesGetResponse = Route;\n\n/** Optional parameters. */\nexport interface RoutesCreateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the create operation. */\nexport type RoutesCreateResponse = Route;\n\n/** Optional parameters. */\nexport interface RoutesUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type RoutesUpdateResponse = Route;\n\n/** Optional parameters. */\nexport interface RoutesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface RoutesListByEndpointNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByEndpointNext operation. */\nexport type RoutesListByEndpointNextResponse = RouteListResult;\n\n/** Optional parameters. */\nexport interface RuleSetsListByProfileOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByProfile operation. */\nexport type RuleSetsListByProfileResponse = RuleSetListResult;\n\n/** Optional parameters. */\nexport interface RuleSetsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type RuleSetsGetResponse = RuleSet;\n\n/** Optional parameters. */\nexport interface RuleSetsCreateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the create operation. */\nexport type RuleSetsCreateResponse = RuleSet;\n\n/** Optional parameters. */\nexport interface RuleSetsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface RuleSetsListResourceUsageOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listResourceUsage operation. */\nexport type RuleSetsListResourceUsageResponse = UsagesListResult;\n\n/** Optional parameters. */\nexport interface RuleSetsListByProfileNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByProfileNext operation. */\nexport type RuleSetsListByProfileNextResponse = RuleSetListResult;\n\n/** Optional parameters. */\nexport interface RuleSetsListResourceUsageNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listResourceUsageNext operation. */\nexport type RuleSetsListResourceUsageNextResponse = UsagesListResult;\n\n/** Optional parameters. */\nexport interface RulesListByRuleSetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByRuleSet operation. */\nexport type RulesListByRuleSetResponse = RuleListResult;\n\n/** Optional parameters. */\nexport interface RulesGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type RulesGetResponse = Rule;\n\n/** Optional parameters. */\nexport interface RulesCreateOptionalParams extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the create operation. */\nexport type RulesCreateResponse = Rule;\n\n/** Optional parameters. */\nexport interface RulesUpdateOptionalParams extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type RulesUpdateResponse = Rule;\n\n/** Optional parameters. */\nexport interface RulesDeleteOptionalParams extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface RulesListByRuleSetNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByRuleSetNext operation. */\nexport type RulesListByRuleSetNextResponse = RuleListResult;\n\n/** Optional parameters. */\nexport interface SecurityPoliciesListByProfileOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByProfile operation. */\nexport type SecurityPoliciesListByProfileResponse = SecurityPolicyListResult;\n\n/** Optional parameters. */\nexport interface SecurityPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SecurityPoliciesGetResponse = SecurityPolicy;\n\n/** Optional parameters. */\nexport interface SecurityPoliciesCreateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the create operation. */\nexport type SecurityPoliciesCreateResponse = SecurityPolicy;\n\n/** Optional parameters. */\nexport interface SecurityPoliciesPatchOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the patch operation. */\nexport type SecurityPoliciesPatchResponse = SecurityPolicy;\n\n/** Optional parameters. */\nexport interface SecurityPoliciesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface SecurityPoliciesListByProfileNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByProfileNext operation. */\nexport type SecurityPoliciesListByProfileNextResponse = SecurityPolicyListResult;\n\n/** Optional parameters. */\nexport interface SecretsListByProfileOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByProfile operation. */\nexport type SecretsListByProfileResponse = SecretListResult;\n\n/** Optional parameters. */\nexport interface SecretsGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SecretsGetResponse = Secret;\n\n/** Optional parameters. */\nexport interface SecretsCreateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the create operation. */\nexport type SecretsCreateResponse = Secret;\n\n/** Optional parameters. */\nexport interface SecretsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface SecretsListByProfileNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByProfileNext operation. */\nexport type SecretsListByProfileNextResponse = SecretListResult;\n\n/** Optional parameters. */\nexport interface ValidateSecretOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the secret operation. */\nexport type ValidateSecretResponse = ValidateSecretOutput;\n\n/** Optional parameters. */\nexport interface LogAnalyticsGetLogAnalyticsMetricsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Array of LogMetricsGroupBy */\n  groupBy?: LogMetricsGroupBy[];\n  /** Array of Get9ItemsItem */\n  continents?: string[];\n  /** Array of Get10ItemsItem */\n  countryOrRegions?: string[];\n}\n\n/** Contains response data for the getLogAnalyticsMetrics operation. */\nexport type LogAnalyticsGetLogAnalyticsMetricsResponse = MetricsResponse;\n\n/** Optional parameters. */\nexport interface LogAnalyticsGetLogAnalyticsRankingsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Array of String */\n  customDomains?: string[];\n}\n\n/** Contains response data for the getLogAnalyticsRankings operation. */\nexport type LogAnalyticsGetLogAnalyticsRankingsResponse = RankingsResponse;\n\n/** Optional parameters. */\nexport interface LogAnalyticsGetLogAnalyticsLocationsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getLogAnalyticsLocations operation. */\nexport type LogAnalyticsGetLogAnalyticsLocationsResponse = ContinentsResponse;\n\n/** Optional parameters. */\nexport interface LogAnalyticsGetLogAnalyticsResourcesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getLogAnalyticsResources operation. */\nexport type LogAnalyticsGetLogAnalyticsResourcesResponse = ResourcesResponse;\n\n/** Optional parameters. */\nexport interface LogAnalyticsGetWafLogAnalyticsMetricsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Array of WafAction */\n  actions?: WafAction[];\n  /** Array of WafRankingGroupBy */\n  groupBy?: WafRankingGroupBy[];\n  /** Array of WafRuleType */\n  ruleTypes?: WafRuleType[];\n}\n\n/** Contains response data for the getWafLogAnalyticsMetrics operation. */\nexport type LogAnalyticsGetWafLogAnalyticsMetricsResponse = WafMetricsResponse;\n\n/** Optional parameters. */\nexport interface LogAnalyticsGetWafLogAnalyticsRankingsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Array of WafAction */\n  actions?: WafAction[];\n  /** Array of WafRuleType */\n  ruleTypes?: WafRuleType[];\n}\n\n/** Contains response data for the getWafLogAnalyticsRankings operation. */\nexport type LogAnalyticsGetWafLogAnalyticsRankingsResponse = WafRankingsResponse;\n\n/** Optional parameters. */\nexport interface ProfilesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ProfilesListResponse = ProfileListResult;\n\n/** Optional parameters. */\nexport interface ProfilesListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type ProfilesListByResourceGroupResponse = ProfileListResult;\n\n/** Optional parameters. */\nexport interface ProfilesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ProfilesGetResponse = Profile;\n\n/** Optional parameters. */\nexport interface ProfilesCreateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the create operation. */\nexport type ProfilesCreateResponse = Profile;\n\n/** Optional parameters. */\nexport interface ProfilesUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type ProfilesUpdateResponse = Profile;\n\n/** Optional parameters. */\nexport interface ProfilesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ProfilesGenerateSsoUriOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the generateSsoUri operation. */\nexport type ProfilesGenerateSsoUriResponse = SsoUri;\n\n/** Optional parameters. */\nexport interface ProfilesListSupportedOptimizationTypesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listSupportedOptimizationTypes operation. */\nexport type ProfilesListSupportedOptimizationTypesResponse = SupportedOptimizationTypesListResult;\n\n/** Optional parameters. */\nexport interface ProfilesListResourceUsageOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listResourceUsage operation. */\nexport type ProfilesListResourceUsageResponse = ResourceUsageListResult;\n\n/** Optional parameters. */\nexport interface ProfilesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ProfilesListNextResponse = ProfileListResult;\n\n/** Optional parameters. */\nexport interface ProfilesListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type ProfilesListByResourceGroupNextResponse = ProfileListResult;\n\n/** Optional parameters. */\nexport interface ProfilesListResourceUsageNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listResourceUsageNext operation. */\nexport type ProfilesListResourceUsageNextResponse = ResourceUsageListResult;\n\n/** Optional parameters. */\nexport interface EndpointsListByProfileOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByProfile operation. */\nexport type EndpointsListByProfileResponse = EndpointListResult;\n\n/** Optional parameters. */\nexport interface EndpointsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type EndpointsGetResponse = Endpoint;\n\n/** Optional parameters. */\nexport interface EndpointsCreateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the create operation. */\nexport type EndpointsCreateResponse = Endpoint;\n\n/** Optional parameters. */\nexport interface EndpointsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type EndpointsUpdateResponse = Endpoint;\n\n/** Optional parameters. */\nexport interface EndpointsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface EndpointsStartOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the start operation. */\nexport type EndpointsStartResponse = Endpoint;\n\n/** Optional parameters. */\nexport interface EndpointsStopOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the stop operation. */\nexport type EndpointsStopResponse = Endpoint;\n\n/** Optional parameters. */\nexport interface EndpointsPurgeContentOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface EndpointsLoadContentOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface EndpointsValidateCustomDomainOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the validateCustomDomain operation. */\nexport type EndpointsValidateCustomDomainResponse = ValidateCustomDomainOutput;\n\n/** Optional parameters. */\nexport interface EndpointsListResourceUsageOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listResourceUsage operation. */\nexport type EndpointsListResourceUsageResponse = ResourceUsageListResult;\n\n/** Optional parameters. */\nexport interface EndpointsListByProfileNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByProfileNext operation. */\nexport type EndpointsListByProfileNextResponse = EndpointListResult;\n\n/** Optional parameters. */\nexport interface EndpointsListResourceUsageNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listResourceUsageNext operation. */\nexport type EndpointsListResourceUsageNextResponse = ResourceUsageListResult;\n\n/** Optional parameters. */\nexport interface OriginsListByEndpointOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByEndpoint operation. */\nexport type OriginsListByEndpointResponse = OriginListResult;\n\n/** Optional parameters. */\nexport interface OriginsGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type OriginsGetResponse = Origin;\n\n/** Optional parameters. */\nexport interface OriginsCreateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the create operation. */\nexport type OriginsCreateResponse = Origin;\n\n/** Optional parameters. */\nexport interface OriginsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type OriginsUpdateResponse = Origin;\n\n/** Optional parameters. */\nexport interface OriginsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface OriginsListByEndpointNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByEndpointNext operation. */\nexport type OriginsListByEndpointNextResponse = OriginListResult;\n\n/** Optional parameters. */\nexport interface OriginGroupsListByEndpointOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByEndpoint operation. */\nexport type OriginGroupsListByEndpointResponse = OriginGroupListResult;\n\n/** Optional parameters. */\nexport interface OriginGroupsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type OriginGroupsGetResponse = OriginGroup;\n\n/** Optional parameters. */\nexport interface OriginGroupsCreateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the create operation. */\nexport type OriginGroupsCreateResponse = OriginGroup;\n\n/** Optional parameters. */\nexport interface OriginGroupsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type OriginGroupsUpdateResponse = OriginGroup;\n\n/** Optional parameters. */\nexport interface OriginGroupsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface OriginGroupsListByEndpointNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByEndpointNext operation. */\nexport type OriginGroupsListByEndpointNextResponse = OriginGroupListResult;\n\n/** Optional parameters. */\nexport interface CustomDomainsListByEndpointOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByEndpoint operation. */\nexport type CustomDomainsListByEndpointResponse = CustomDomainListResult;\n\n/** Optional parameters. */\nexport interface CustomDomainsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type CustomDomainsGetResponse = CustomDomain;\n\n/** Optional parameters. */\nexport interface CustomDomainsCreateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the create operation. */\nexport type CustomDomainsCreateResponse = CustomDomain;\n\n/** Optional parameters. */\nexport interface CustomDomainsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface CustomDomainsDisableCustomHttpsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the disableCustomHttps operation. */\nexport type CustomDomainsDisableCustomHttpsResponse = CustomDomain;\n\n/** Optional parameters. */\nexport interface CustomDomainsEnableCustomHttpsOptionalParams\n  extends coreClient.OperationOptions {\n  /** The configuration specifying how to enable HTTPS for the custom domain - using CDN managed certificate or user's own certificate. If not specified, enabling ssl uses CDN managed certificate by default. */\n  customDomainHttpsParameters?: CustomDomainHttpsParametersUnion;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the enableCustomHttps operation. */\nexport type CustomDomainsEnableCustomHttpsResponse = CustomDomain;\n\n/** Optional parameters. */\nexport interface CustomDomainsListByEndpointNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByEndpointNext operation. */\nexport type CustomDomainsListByEndpointNextResponse = CustomDomainListResult;\n\n/** Optional parameters. */\nexport interface ResourceUsageListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ResourceUsageListResponse = ResourceUsageListResult;\n\n/** Optional parameters. */\nexport interface ResourceUsageListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ResourceUsageListNextResponse = ResourceUsageListResult;\n\n/** Optional parameters. */\nexport interface OperationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type OperationsListResponse = OperationsListResult;\n\n/** Optional parameters. */\nexport interface OperationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type OperationsListNextResponse = OperationsListResult;\n\n/** Optional parameters. */\nexport interface EdgeNodesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type EdgeNodesListResponse = EdgenodeResult;\n\n/** Optional parameters. */\nexport interface EdgeNodesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type EdgeNodesListNextResponse = EdgenodeResult;\n\n/** Optional parameters. */\nexport interface PoliciesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type PoliciesListResponse = CdnWebApplicationFirewallPolicyList;\n\n/** Optional parameters. */\nexport interface PoliciesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type PoliciesGetResponse = CdnWebApplicationFirewallPolicy;\n\n/** Optional parameters. */\nexport interface PoliciesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type PoliciesCreateOrUpdateResponse = CdnWebApplicationFirewallPolicy;\n\n/** Optional parameters. */\nexport interface PoliciesUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type PoliciesUpdateResponse = CdnWebApplicationFirewallPolicy;\n\n/** Optional parameters. */\nexport interface PoliciesDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface PoliciesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type PoliciesListNextResponse = CdnWebApplicationFirewallPolicyList;\n\n/** Optional parameters. */\nexport interface ManagedRuleSetsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ManagedRuleSetsListResponse = ManagedRuleSetDefinitionList;\n\n/** Optional parameters. */\nexport interface ManagedRuleSetsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ManagedRuleSetsListNextResponse = ManagedRuleSetDefinitionList;\n\n/** Optional parameters. */\nexport interface CdnManagementClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Api Version */\n  apiVersion?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const CheckEndpointNameAvailabilityInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CheckEndpointNameAvailabilityInput\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      autoGeneratedDomainNameLabelScope: {\n        serializedName: \"autoGeneratedDomainNameLabelScope\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CheckEndpointNameAvailabilityOutput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CheckEndpointNameAvailabilityOutput\",\n    modelProperties: {\n      nameAvailable: {\n        serializedName: \"nameAvailable\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      availableHostname: {\n        serializedName: \"availableHostname\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AfdErrorResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AfdErrorResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorDetail\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorDetail: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorDetail\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorDetail\"\n            }\n          }\n        }\n      },\n      additionalInfo: {\n        serializedName: \"additionalInfo\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorAdditionalInfo\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorAdditionalInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorAdditionalInfo\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      info: {\n        serializedName: \"info\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const UsagesListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UsagesListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Usage\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Usage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Usage\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      currentValue: {\n        serializedName: \"currentValue\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      limit: {\n        serializedName: \"limit\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"Composite\",\n          className: \"UsageName\"\n        }\n      }\n    }\n  }\n};\n\nexport const UsageName: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UsageName\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      },\n      localizedValue: {\n        serializedName: \"localizedValue\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CheckHostNameAvailabilityInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CheckHostNameAvailabilityInput\",\n    modelProperties: {\n      hostName: {\n        serializedName: \"hostName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CheckNameAvailabilityOutput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CheckNameAvailabilityOutput\",\n    modelProperties: {\n      nameAvailable: {\n        serializedName: \"nameAvailable\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AFDDomainListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AFDDomainListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AFDDomain\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DomainValidationProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DomainValidationProperties\",\n    modelProperties: {\n      validationToken: {\n        serializedName: \"validationToken\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      expirationDate: {\n        serializedName: \"expirationDate\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AFDDomainUpdatePropertiesParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AFDDomainUpdatePropertiesParameters\",\n    modelProperties: {\n      profileName: {\n        serializedName: \"profileName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tlsSettings: {\n        serializedName: \"tlsSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"AFDDomainHttpsParameters\"\n        }\n      },\n      azureDnsZone: {\n        serializedName: \"azureDnsZone\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceReference\"\n        }\n      },\n      preValidatedCustomDomainResourceId: {\n        serializedName: \"preValidatedCustomDomainResourceId\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceReference\"\n        }\n      }\n    }\n  }\n};\n\nexport const AFDDomainHttpsParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AFDDomainHttpsParameters\",\n    modelProperties: {\n      certificateType: {\n        serializedName: \"certificateType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      minimumTlsVersion: {\n        serializedName: \"minimumTlsVersion\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"TLS10\", \"TLS12\"]\n        }\n      },\n      secret: {\n        serializedName: \"secret\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceReference\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceReference: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceReference\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AFDStateProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AFDStateProperties\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      deploymentStatus: {\n        serializedName: \"deploymentStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Resource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      }\n    }\n  }\n};\n\nexport const SystemData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SystemData\",\n    modelProperties: {\n      createdBy: {\n        serializedName: \"createdBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdByType: {\n        serializedName: \"createdByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdAt: {\n        serializedName: \"createdAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastModifiedBy: {\n        serializedName: \"lastModifiedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedByType: {\n        serializedName: \"lastModifiedByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedAt: {\n        serializedName: \"lastModifiedAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const AFDDomainUpdateParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AFDDomainUpdateParameters\",\n    modelProperties: {\n      profileName: {\n        serializedName: \"properties.profileName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tlsSettings: {\n        serializedName: \"properties.tlsSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"AFDDomainHttpsParameters\"\n        }\n      },\n      azureDnsZone: {\n        serializedName: \"properties.azureDnsZone\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceReference\"\n        }\n      },\n      preValidatedCustomDomainResourceId: {\n        serializedName: \"properties.preValidatedCustomDomainResourceId\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceReference\"\n        }\n      }\n    }\n  }\n};\n\nexport const AFDEndpointListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AFDEndpointListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AFDEndpoint\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AFDEndpointPropertiesUpdateParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AFDEndpointPropertiesUpdateParameters\",\n    modelProperties: {\n      profileName: {\n        serializedName: \"profileName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      enabledState: {\n        serializedName: \"enabledState\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AFDEndpointUpdateParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AFDEndpointUpdateParameters\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      profileName: {\n        serializedName: \"properties.profileName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      enabledState: {\n        serializedName: \"properties.enabledState\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AfdPurgeParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AfdPurgeParameters\",\n    modelProperties: {\n      contentPaths: {\n        serializedName: \"contentPaths\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      domains: {\n        serializedName: \"domains\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ValidateCustomDomainInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ValidateCustomDomainInput\",\n    modelProperties: {\n      hostName: {\n        serializedName: \"hostName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ValidateCustomDomainOutput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ValidateCustomDomainOutput\",\n    modelProperties: {\n      customDomainValidated: {\n        serializedName: \"customDomainValidated\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AFDOriginGroupListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AFDOriginGroupListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AFDOriginGroup\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AFDOriginGroupUpdatePropertiesParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AFDOriginGroupUpdatePropertiesParameters\",\n    modelProperties: {\n      profileName: {\n        serializedName: \"profileName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      loadBalancingSettings: {\n        serializedName: \"loadBalancingSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"LoadBalancingSettingsParameters\"\n        }\n      },\n      healthProbeSettings: {\n        serializedName: \"healthProbeSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"HealthProbeParameters\"\n        }\n      },\n      trafficRestorationTimeToHealedOrNewEndpointsInMinutes: {\n        constraints: {\n          InclusiveMaximum: 50,\n          InclusiveMinimum: 0\n        },\n        serializedName: \"trafficRestorationTimeToHealedOrNewEndpointsInMinutes\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      sessionAffinityState: {\n        serializedName: \"sessionAffinityState\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LoadBalancingSettingsParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LoadBalancingSettingsParameters\",\n    modelProperties: {\n      sampleSize: {\n        serializedName: \"sampleSize\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      successfulSamplesRequired: {\n        serializedName: \"successfulSamplesRequired\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      additionalLatencyInMilliseconds: {\n        serializedName: \"additionalLatencyInMilliseconds\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const HealthProbeParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"HealthProbeParameters\",\n    modelProperties: {\n      probePath: {\n        serializedName: \"probePath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      probeRequestType: {\n        serializedName: \"probeRequestType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"NotSet\", \"GET\", \"HEAD\"]\n        }\n      },\n      probeProtocol: {\n        serializedName: \"probeProtocol\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"NotSet\", \"Http\", \"Https\"]\n        }\n      },\n      probeIntervalInSeconds: {\n        constraints: {\n          InclusiveMaximum: 255,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"probeIntervalInSeconds\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const AFDOriginGroupUpdateParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AFDOriginGroupUpdateParameters\",\n    modelProperties: {\n      profileName: {\n        serializedName: \"properties.profileName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      loadBalancingSettings: {\n        serializedName: \"properties.loadBalancingSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"LoadBalancingSettingsParameters\"\n        }\n      },\n      healthProbeSettings: {\n        serializedName: \"properties.healthProbeSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"HealthProbeParameters\"\n        }\n      },\n      trafficRestorationTimeToHealedOrNewEndpointsInMinutes: {\n        constraints: {\n          InclusiveMaximum: 50,\n          InclusiveMinimum: 0\n        },\n        serializedName:\n          \"properties.trafficRestorationTimeToHealedOrNewEndpointsInMinutes\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      sessionAffinityState: {\n        serializedName: \"properties.sessionAffinityState\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AFDOriginListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AFDOriginListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AFDOrigin\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AFDOriginUpdatePropertiesParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AFDOriginUpdatePropertiesParameters\",\n    modelProperties: {\n      originGroupName: {\n        serializedName: \"originGroupName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      azureOrigin: {\n        serializedName: \"azureOrigin\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceReference\"\n        }\n      },\n      hostName: {\n        serializedName: \"hostName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      httpPort: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"httpPort\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      httpsPort: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"httpsPort\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      originHostHeader: {\n        serializedName: \"originHostHeader\",\n        type: {\n          name: \"String\"\n        }\n      },\n      priority: {\n        constraints: {\n          InclusiveMaximum: 5,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"priority\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      weight: {\n        constraints: {\n          InclusiveMaximum: 1000,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"weight\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      sharedPrivateLinkResource: {\n        serializedName: \"sharedPrivateLinkResource\",\n        type: {\n          name: \"Composite\",\n          className: \"SharedPrivateLinkResourceProperties\"\n        }\n      },\n      enabledState: {\n        serializedName: \"enabledState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      enforceCertificateNameCheck: {\n        defaultValue: true,\n        serializedName: \"enforceCertificateNameCheck\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const SharedPrivateLinkResourceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SharedPrivateLinkResourceProperties\",\n    modelProperties: {\n      privateLink: {\n        serializedName: \"privateLink\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceReference\"\n        }\n      },\n      privateLinkLocation: {\n        serializedName: \"privateLinkLocation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      groupId: {\n        serializedName: \"groupId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestMessage: {\n        serializedName: \"requestMessage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Pending\",\n            \"Approved\",\n            \"Rejected\",\n            \"Disconnected\",\n            \"Timeout\"\n          ]\n        }\n      }\n    }\n  }\n};\n\nexport const AFDOriginUpdateParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AFDOriginUpdateParameters\",\n    modelProperties: {\n      originGroupName: {\n        serializedName: \"properties.originGroupName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      azureOrigin: {\n        serializedName: \"properties.azureOrigin\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceReference\"\n        }\n      },\n      hostName: {\n        serializedName: \"properties.hostName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      httpPort: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"properties.httpPort\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      httpsPort: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"properties.httpsPort\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      originHostHeader: {\n        serializedName: \"properties.originHostHeader\",\n        type: {\n          name: \"String\"\n        }\n      },\n      priority: {\n        constraints: {\n          InclusiveMaximum: 5,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"properties.priority\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      weight: {\n        constraints: {\n          InclusiveMaximum: 1000,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"properties.weight\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      sharedPrivateLinkResource: {\n        serializedName: \"properties.sharedPrivateLinkResource\",\n        type: {\n          name: \"Composite\",\n          className: \"SharedPrivateLinkResourceProperties\"\n        }\n      },\n      enabledState: {\n        serializedName: \"properties.enabledState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      enforceCertificateNameCheck: {\n        defaultValue: true,\n        serializedName: \"properties.enforceCertificateNameCheck\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const RouteListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RouteListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Route\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RouteUpdatePropertiesParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RouteUpdatePropertiesParameters\",\n    modelProperties: {\n      endpointName: {\n        serializedName: \"endpointName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      customDomains: {\n        serializedName: \"customDomains\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ActivatedResourceReference\"\n            }\n          }\n        }\n      },\n      originGroup: {\n        serializedName: \"originGroup\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceReference\"\n        }\n      },\n      originPath: {\n        serializedName: \"originPath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ruleSets: {\n        serializedName: \"ruleSets\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceReference\"\n            }\n          }\n        }\n      },\n      supportedProtocols: {\n        serializedName: \"supportedProtocols\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      patternsToMatch: {\n        serializedName: \"patternsToMatch\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      cacheConfiguration: {\n        serializedName: \"cacheConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"AfdRouteCacheConfiguration\"\n        }\n      },\n      forwardingProtocol: {\n        serializedName: \"forwardingProtocol\",\n        type: {\n          name: \"String\"\n        }\n      },\n      linkToDefaultDomain: {\n        serializedName: \"linkToDefaultDomain\",\n        type: {\n          name: \"String\"\n        }\n      },\n      httpsRedirect: {\n        serializedName: \"httpsRedirect\",\n        type: {\n          name: \"String\"\n        }\n      },\n      enabledState: {\n        serializedName: \"enabledState\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ActivatedResourceReference: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ActivatedResourceReference\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isActive: {\n        serializedName: \"isActive\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const AfdRouteCacheConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AfdRouteCacheConfiguration\",\n    modelProperties: {\n      queryStringCachingBehavior: {\n        serializedName: \"queryStringCachingBehavior\",\n        type: {\n          name: \"String\"\n        }\n      },\n      queryParameters: {\n        serializedName: \"queryParameters\",\n        type: {\n          name: \"String\"\n        }\n      },\n      compressionSettings: {\n        serializedName: \"compressionSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"CompressionSettings\"\n        }\n      }\n    }\n  }\n};\n\nexport const CompressionSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CompressionSettings\",\n    modelProperties: {\n      contentTypesToCompress: {\n        serializedName: \"contentTypesToCompress\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      isCompressionEnabled: {\n        serializedName: \"isCompressionEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const RouteUpdateParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RouteUpdateParameters\",\n    modelProperties: {\n      endpointName: {\n        serializedName: \"properties.endpointName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      customDomains: {\n        serializedName: \"properties.customDomains\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ActivatedResourceReference\"\n            }\n          }\n        }\n      },\n      originGroup: {\n        serializedName: \"properties.originGroup\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceReference\"\n        }\n      },\n      originPath: {\n        serializedName: \"properties.originPath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ruleSets: {\n        serializedName: \"properties.ruleSets\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceReference\"\n            }\n          }\n        }\n      },\n      supportedProtocols: {\n        serializedName: \"properties.supportedProtocols\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      patternsToMatch: {\n        serializedName: \"properties.patternsToMatch\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      cacheConfiguration: {\n        serializedName: \"properties.cacheConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"AfdRouteCacheConfiguration\"\n        }\n      },\n      forwardingProtocol: {\n        serializedName: \"properties.forwardingProtocol\",\n        type: {\n          name: \"String\"\n        }\n      },\n      linkToDefaultDomain: {\n        serializedName: \"properties.linkToDefaultDomain\",\n        type: {\n          name: \"String\"\n        }\n      },\n      httpsRedirect: {\n        serializedName: \"properties.httpsRedirect\",\n        type: {\n          name: \"String\"\n        }\n      },\n      enabledState: {\n        serializedName: \"properties.enabledState\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RuleSetListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RuleSetListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RuleSet\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RuleListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RuleListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Rule\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RuleUpdatePropertiesParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RuleUpdatePropertiesParameters\",\n    modelProperties: {\n      ruleSetName: {\n        serializedName: \"ruleSetName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      order: {\n        serializedName: \"order\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      conditions: {\n        serializedName: \"conditions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeliveryRuleCondition\"\n            }\n          }\n        }\n      },\n      actions: {\n        serializedName: \"actions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeliveryRuleActionAutoGenerated\"\n            }\n          }\n        }\n      },\n      matchProcessingBehavior: {\n        serializedName: \"matchProcessingBehavior\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeliveryRuleCondition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeliveryRuleCondition\",\n    uberParent: \"DeliveryRuleCondition\",\n    polymorphicDiscriminator: {\n      serializedName: \"name\",\n      clientName: \"name\"\n    },\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeliveryRuleActionAutoGenerated: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeliveryRuleActionAutoGenerated\",\n    uberParent: \"DeliveryRuleActionAutoGenerated\",\n    polymorphicDiscriminator: {\n      serializedName: \"name\",\n      clientName: \"name\"\n    },\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RuleUpdateParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RuleUpdateParameters\",\n    modelProperties: {\n      ruleSetName: {\n        serializedName: \"properties.ruleSetName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      order: {\n        serializedName: \"properties.order\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      conditions: {\n        serializedName: \"properties.conditions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeliveryRuleCondition\"\n            }\n          }\n        }\n      },\n      actions: {\n        serializedName: \"properties.actions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeliveryRuleActionAutoGenerated\"\n            }\n          }\n        }\n      },\n      matchProcessingBehavior: {\n        serializedName: \"properties.matchProcessingBehavior\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SecurityPolicyListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SecurityPolicyListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SecurityPolicy\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SecurityPolicyPropertiesParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SecurityPolicyPropertiesParameters\",\n    uberParent: \"SecurityPolicyPropertiesParameters\",\n    polymorphicDiscriminator: {\n      serializedName: \"type\",\n      clientName: \"type\"\n    },\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SecurityPolicyUpdateParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SecurityPolicyUpdateParameters\",\n    modelProperties: {\n      parameters: {\n        serializedName: \"properties.parameters\",\n        type: {\n          name: \"Composite\",\n          className: \"SecurityPolicyPropertiesParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const SecretListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SecretListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Secret\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SecretParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SecretParameters\",\n    uberParent: \"SecretParameters\",\n    polymorphicDiscriminator: {\n      serializedName: \"type\",\n      clientName: \"type\"\n    },\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ValidateSecretInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ValidateSecretInput\",\n    modelProperties: {\n      secretType: {\n        serializedName: \"secretType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      secretSource: {\n        serializedName: \"secretSource\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceReference\"\n        }\n      },\n      secretVersion: {\n        serializedName: \"secretVersion\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ValidateSecretOutput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ValidateSecretOutput\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MetricsResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetricsResponse\",\n    modelProperties: {\n      dateTimeBegin: {\n        serializedName: \"dateTimeBegin\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      dateTimeEnd: {\n        serializedName: \"dateTimeEnd\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      granularity: {\n        serializedName: \"granularity\",\n        type: {\n          name: \"String\"\n        }\n      },\n      series: {\n        serializedName: \"series\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetricsResponseSeriesItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MetricsResponseSeriesItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetricsResponseSeriesItem\",\n    modelProperties: {\n      metric: {\n        serializedName: \"metric\",\n        type: {\n          name: \"String\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        type: {\n          name: \"String\"\n        }\n      },\n      groups: {\n        serializedName: \"groups\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetricsResponseSeriesPropertiesItemsItem\"\n            }\n          }\n        }\n      },\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className:\n                \"Components1Gs0LlpSchemasMetricsresponsePropertiesSeriesItemsPropertiesDataItems\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MetricsResponseSeriesPropertiesItemsItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetricsResponseSeriesPropertiesItemsItem\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Components1Gs0LlpSchemasMetricsresponsePropertiesSeriesItemsPropertiesDataItems: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Components1Gs0LlpSchemasMetricsresponsePropertiesSeriesItemsPropertiesDataItems\",\n    modelProperties: {\n      dateTime: {\n        serializedName: \"dateTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const RankingsResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RankingsResponse\",\n    modelProperties: {\n      dateTimeBegin: {\n        serializedName: \"dateTimeBegin\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      dateTimeEnd: {\n        serializedName: \"dateTimeEnd\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      tables: {\n        serializedName: \"tables\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RankingsResponseTablesItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RankingsResponseTablesItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RankingsResponseTablesItem\",\n    modelProperties: {\n      ranking: {\n        serializedName: \"ranking\",\n        type: {\n          name: \"String\"\n        }\n      },\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RankingsResponseTablesPropertiesItemsItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RankingsResponseTablesPropertiesItemsItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RankingsResponseTablesPropertiesItemsItem\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      metrics: {\n        serializedName: \"metrics\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RankingsResponseTablesPropertiesItemsMetricsItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RankingsResponseTablesPropertiesItemsMetricsItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RankingsResponseTablesPropertiesItemsMetricsItem\",\n    modelProperties: {\n      metric: {\n        serializedName: \"metric\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      percentage: {\n        serializedName: \"percentage\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContinentsResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContinentsResponse\",\n    modelProperties: {\n      continents: {\n        serializedName: \"continents\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ContinentsResponseContinentsItem\"\n            }\n          }\n        }\n      },\n      countryOrRegions: {\n        serializedName: \"countryOrRegions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ContinentsResponseCountryOrRegionsItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ContinentsResponseContinentsItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContinentsResponseContinentsItem\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContinentsResponseCountryOrRegionsItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContinentsResponseCountryOrRegionsItem\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      continentId: {\n        serializedName: \"continentId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourcesResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourcesResponse\",\n    modelProperties: {\n      endpoints: {\n        serializedName: \"endpoints\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourcesResponseEndpointsItem\"\n            }\n          }\n        }\n      },\n      customDomains: {\n        serializedName: \"customDomains\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourcesResponseCustomDomainsItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ResourcesResponseEndpointsItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourcesResponseEndpointsItem\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      history: {\n        serializedName: \"history\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      customDomains: {\n        serializedName: \"customDomains\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourcesResponseEndpointsPropertiesItemsItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ResourcesResponseEndpointsPropertiesItemsItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourcesResponseEndpointsPropertiesItemsItem\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpointId: {\n        serializedName: \"endpointId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      history: {\n        serializedName: \"history\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourcesResponseCustomDomainsItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourcesResponseCustomDomainsItem\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpointId: {\n        serializedName: \"endpointId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      history: {\n        serializedName: \"history\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const WafMetricsResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WafMetricsResponse\",\n    modelProperties: {\n      dateTimeBegin: {\n        serializedName: \"dateTimeBegin\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      dateTimeEnd: {\n        serializedName: \"dateTimeEnd\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      granularity: {\n        serializedName: \"granularity\",\n        type: {\n          name: \"String\"\n        }\n      },\n      series: {\n        serializedName: \"series\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"WafMetricsResponseSeriesItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const WafMetricsResponseSeriesItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WafMetricsResponseSeriesItem\",\n    modelProperties: {\n      metric: {\n        serializedName: \"metric\",\n        type: {\n          name: \"String\"\n        }\n      },\n      unit: {\n        defaultValue: \"count\",\n        isConstant: true,\n        serializedName: \"unit\",\n        type: {\n          name: \"String\"\n        }\n      },\n      groups: {\n        serializedName: \"groups\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"WafMetricsResponseSeriesPropertiesItemsItem\"\n            }\n          }\n        }\n      },\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className:\n                \"Components18OrqelSchemasWafmetricsresponsePropertiesSeriesItemsPropertiesDataItems\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const WafMetricsResponseSeriesPropertiesItemsItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WafMetricsResponseSeriesPropertiesItemsItem\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Components18OrqelSchemasWafmetricsresponsePropertiesSeriesItemsPropertiesDataItems: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Components18OrqelSchemasWafmetricsresponsePropertiesSeriesItemsPropertiesDataItems\",\n    modelProperties: {\n      dateTime: {\n        serializedName: \"dateTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const WafRankingsResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WafRankingsResponse\",\n    modelProperties: {\n      dateTimeBegin: {\n        serializedName: \"dateTimeBegin\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      dateTimeEnd: {\n        serializedName: \"dateTimeEnd\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      groups: {\n        serializedName: \"groups\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"WafRankingsResponseDataItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const WafRankingsResponseDataItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WafRankingsResponseDataItem\",\n    modelProperties: {\n      groupValues: {\n        serializedName: \"groupValues\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      metrics: {\n        serializedName: \"metrics\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className:\n                \"ComponentsKpo1PjSchemasWafrankingsresponsePropertiesDataItemsPropertiesMetricsItems\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ComponentsKpo1PjSchemasWafrankingsresponsePropertiesDataItemsPropertiesMetricsItems: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"ComponentsKpo1PjSchemasWafrankingsresponsePropertiesDataItemsPropertiesMetricsItems\",\n    modelProperties: {\n      metric: {\n        serializedName: \"metric\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      percentage: {\n        serializedName: \"percentage\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProfileListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProfileListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Profile\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Sku: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Sku\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorDetail\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProfileUpdateParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProfileUpdateParameters\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      originResponseTimeoutSeconds: {\n        constraints: {\n          InclusiveMinimum: 16\n        },\n        serializedName: \"properties.originResponseTimeoutSeconds\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const SsoUri: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SsoUri\",\n    modelProperties: {\n      ssoUriValue: {\n        serializedName: \"ssoUriValue\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SupportedOptimizationTypesListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SupportedOptimizationTypesListResult\",\n    modelProperties: {\n      supportedOptimizationTypes: {\n        serializedName: \"supportedOptimizationTypes\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceUsageListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceUsageListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceUsage\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceUsage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceUsage\",\n    modelProperties: {\n      resourceType: {\n        serializedName: \"resourceType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      currentValue: {\n        serializedName: \"currentValue\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      limit: {\n        serializedName: \"limit\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const EndpointListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EndpointListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Endpoint\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeepCreatedOrigin: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeepCreatedOrigin\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      hostName: {\n        serializedName: \"properties.hostName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      httpPort: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"properties.httpPort\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      httpsPort: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"properties.httpsPort\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      originHostHeader: {\n        serializedName: \"properties.originHostHeader\",\n        type: {\n          name: \"String\"\n        }\n      },\n      priority: {\n        constraints: {\n          InclusiveMaximum: 5,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"properties.priority\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      weight: {\n        constraints: {\n          InclusiveMaximum: 1000,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"properties.weight\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      enabled: {\n        serializedName: \"properties.enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      privateLinkAlias: {\n        serializedName: \"properties.privateLinkAlias\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privateLinkResourceId: {\n        serializedName: \"properties.privateLinkResourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privateLinkLocation: {\n        serializedName: \"properties.privateLinkLocation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privateLinkApprovalMessage: {\n        serializedName: \"properties.privateLinkApprovalMessage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privateEndpointStatus: {\n        serializedName: \"properties.privateEndpointStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeepCreatedOriginGroup: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeepCreatedOriginGroup\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      healthProbeSettings: {\n        serializedName: \"properties.healthProbeSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"HealthProbeParameters\"\n        }\n      },\n      origins: {\n        serializedName: \"properties.origins\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceReference\"\n            }\n          }\n        }\n      },\n      trafficRestorationTimeToHealedOrNewEndpointsInMinutes: {\n        constraints: {\n          InclusiveMaximum: 50,\n          InclusiveMinimum: 0\n        },\n        serializedName:\n          \"properties.trafficRestorationTimeToHealedOrNewEndpointsInMinutes\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      responseBasedOriginErrorDetectionSettings: {\n        serializedName: \"properties.responseBasedOriginErrorDetectionSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"ResponseBasedOriginErrorDetectionParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResponseBasedOriginErrorDetectionParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResponseBasedOriginErrorDetectionParameters\",\n    modelProperties: {\n      responseBasedDetectedErrorTypes: {\n        serializedName: \"responseBasedDetectedErrorTypes\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"None\", \"TcpErrorsOnly\", \"TcpAndHttpErrors\"]\n        }\n      },\n      responseBasedFailoverThresholdPercentage: {\n        constraints: {\n          InclusiveMaximum: 100,\n          InclusiveMinimum: 0\n        },\n        serializedName: \"responseBasedFailoverThresholdPercentage\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      httpErrorRanges: {\n        serializedName: \"httpErrorRanges\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"HttpErrorRangeParameters\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const HttpErrorRangeParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"HttpErrorRangeParameters\",\n    modelProperties: {\n      begin: {\n        constraints: {\n          InclusiveMaximum: 999,\n          InclusiveMinimum: 100\n        },\n        serializedName: \"begin\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      end: {\n        constraints: {\n          InclusiveMaximum: 999,\n          InclusiveMinimum: 100\n        },\n        serializedName: \"end\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeepCreatedCustomDomain: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeepCreatedCustomDomain\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      hostName: {\n        serializedName: \"properties.hostName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      validationData: {\n        serializedName: \"properties.validationData\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EndpointPropertiesUpdateParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EndpointPropertiesUpdateParameters\",\n    modelProperties: {\n      originPath: {\n        serializedName: \"originPath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentTypesToCompress: {\n        serializedName: \"contentTypesToCompress\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      originHostHeader: {\n        serializedName: \"originHostHeader\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isCompressionEnabled: {\n        serializedName: \"isCompressionEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isHttpAllowed: {\n        serializedName: \"isHttpAllowed\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isHttpsAllowed: {\n        serializedName: \"isHttpsAllowed\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      queryStringCachingBehavior: {\n        serializedName: \"queryStringCachingBehavior\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"IgnoreQueryString\",\n            \"BypassCaching\",\n            \"UseQueryString\",\n            \"NotSet\"\n          ]\n        }\n      },\n      optimizationType: {\n        serializedName: \"optimizationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      probePath: {\n        serializedName: \"probePath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      geoFilters: {\n        serializedName: \"geoFilters\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GeoFilter\"\n            }\n          }\n        }\n      },\n      defaultOriginGroup: {\n        serializedName: \"defaultOriginGroup\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceReference\"\n        }\n      },\n      urlSigningKeys: {\n        serializedName: \"urlSigningKeys\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"UrlSigningKey\"\n            }\n          }\n        }\n      },\n      deliveryPolicy: {\n        serializedName: \"deliveryPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"EndpointPropertiesUpdateParametersDeliveryPolicy\"\n        }\n      },\n      webApplicationFirewallPolicyLink: {\n        serializedName: \"webApplicationFirewallPolicyLink\",\n        type: {\n          name: \"Composite\",\n          className:\n            \"EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink\"\n        }\n      }\n    }\n  }\n};\n\nexport const GeoFilter: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GeoFilter\",\n    modelProperties: {\n      relativePath: {\n        serializedName: \"relativePath\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      action: {\n        serializedName: \"action\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Block\", \"Allow\"]\n        }\n      },\n      countryCodes: {\n        serializedName: \"countryCodes\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const UrlSigningKey: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UrlSigningKey\",\n    modelProperties: {\n      keyId: {\n        serializedName: \"keyId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      keySourceParameters: {\n        serializedName: \"keySourceParameters\",\n        type: {\n          name: \"Composite\",\n          className: \"KeyVaultSigningKeyParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const KeyVaultSigningKeyParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyVaultSigningKeyParameters\",\n    modelProperties: {\n      typeName: {\n        defaultValue: \"KeyVaultSigningKeyParameters\",\n        isConstant: true,\n        serializedName: \"typeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionId: {\n        serializedName: \"subscriptionId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceGroupName: {\n        serializedName: \"resourceGroupName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      vaultName: {\n        serializedName: \"vaultName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      secretName: {\n        serializedName: \"secretName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      secretVersion: {\n        serializedName: \"secretVersion\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EndpointPropertiesUpdateParametersDeliveryPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EndpointPropertiesUpdateParametersDeliveryPolicy\",\n    modelProperties: {\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      rules: {\n        serializedName: \"rules\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeliveryRule\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DeliveryRule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeliveryRule\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      order: {\n        serializedName: \"order\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      conditions: {\n        serializedName: \"conditions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeliveryRuleCondition\"\n            }\n          }\n        }\n      },\n      actions: {\n        serializedName: \"actions\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeliveryRuleActionAutoGenerated\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EndpointUpdateParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EndpointUpdateParameters\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      originPath: {\n        serializedName: \"properties.originPath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentTypesToCompress: {\n        serializedName: \"properties.contentTypesToCompress\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      originHostHeader: {\n        serializedName: \"properties.originHostHeader\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isCompressionEnabled: {\n        serializedName: \"properties.isCompressionEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isHttpAllowed: {\n        serializedName: \"properties.isHttpAllowed\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isHttpsAllowed: {\n        serializedName: \"properties.isHttpsAllowed\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      queryStringCachingBehavior: {\n        serializedName: \"properties.queryStringCachingBehavior\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"IgnoreQueryString\",\n            \"BypassCaching\",\n            \"UseQueryString\",\n            \"NotSet\"\n          ]\n        }\n      },\n      optimizationType: {\n        serializedName: \"properties.optimizationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      probePath: {\n        serializedName: \"properties.probePath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      geoFilters: {\n        serializedName: \"properties.geoFilters\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GeoFilter\"\n            }\n          }\n        }\n      },\n      defaultOriginGroup: {\n        serializedName: \"properties.defaultOriginGroup\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceReference\"\n        }\n      },\n      urlSigningKeys: {\n        serializedName: \"properties.urlSigningKeys\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"UrlSigningKey\"\n            }\n          }\n        }\n      },\n      deliveryPolicy: {\n        serializedName: \"properties.deliveryPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"EndpointPropertiesUpdateParametersDeliveryPolicy\"\n        }\n      },\n      webApplicationFirewallPolicyLink: {\n        serializedName: \"properties.webApplicationFirewallPolicyLink\",\n        type: {\n          name: \"Composite\",\n          className:\n            \"EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink\"\n        }\n      }\n    }\n  }\n};\n\nexport const PurgeParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PurgeParameters\",\n    modelProperties: {\n      contentPaths: {\n        serializedName: \"contentPaths\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const LoadParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LoadParameters\",\n    modelProperties: {\n      contentPaths: {\n        serializedName: \"contentPaths\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const OriginListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OriginListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Origin\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OriginUpdatePropertiesParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OriginUpdatePropertiesParameters\",\n    modelProperties: {\n      hostName: {\n        serializedName: \"hostName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      httpPort: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"httpPort\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      httpsPort: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"httpsPort\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      originHostHeader: {\n        serializedName: \"originHostHeader\",\n        type: {\n          name: \"String\"\n        }\n      },\n      priority: {\n        constraints: {\n          InclusiveMaximum: 5,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"priority\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      weight: {\n        constraints: {\n          InclusiveMaximum: 1000,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"weight\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      privateLinkAlias: {\n        serializedName: \"privateLinkAlias\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privateLinkResourceId: {\n        serializedName: \"privateLinkResourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privateLinkLocation: {\n        serializedName: \"privateLinkLocation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privateLinkApprovalMessage: {\n        serializedName: \"privateLinkApprovalMessage\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OriginUpdateParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OriginUpdateParameters\",\n    modelProperties: {\n      hostName: {\n        serializedName: \"properties.hostName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      httpPort: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"properties.httpPort\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      httpsPort: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"properties.httpsPort\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      originHostHeader: {\n        serializedName: \"properties.originHostHeader\",\n        type: {\n          name: \"String\"\n        }\n      },\n      priority: {\n        constraints: {\n          InclusiveMaximum: 5,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"properties.priority\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      weight: {\n        constraints: {\n          InclusiveMaximum: 1000,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"properties.weight\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      enabled: {\n        serializedName: \"properties.enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      privateLinkAlias: {\n        serializedName: \"properties.privateLinkAlias\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privateLinkResourceId: {\n        serializedName: \"properties.privateLinkResourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privateLinkLocation: {\n        serializedName: \"properties.privateLinkLocation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privateLinkApprovalMessage: {\n        serializedName: \"properties.privateLinkApprovalMessage\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OriginGroupListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OriginGroupListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"OriginGroup\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OriginGroupUpdatePropertiesParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OriginGroupUpdatePropertiesParameters\",\n    modelProperties: {\n      healthProbeSettings: {\n        serializedName: \"healthProbeSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"HealthProbeParameters\"\n        }\n      },\n      origins: {\n        serializedName: \"origins\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceReference\"\n            }\n          }\n        }\n      },\n      trafficRestorationTimeToHealedOrNewEndpointsInMinutes: {\n        constraints: {\n          InclusiveMaximum: 50,\n          InclusiveMinimum: 0\n        },\n        serializedName: \"trafficRestorationTimeToHealedOrNewEndpointsInMinutes\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      responseBasedOriginErrorDetectionSettings: {\n        serializedName: \"responseBasedOriginErrorDetectionSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"ResponseBasedOriginErrorDetectionParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const OriginGroupUpdateParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OriginGroupUpdateParameters\",\n    modelProperties: {\n      healthProbeSettings: {\n        serializedName: \"properties.healthProbeSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"HealthProbeParameters\"\n        }\n      },\n      origins: {\n        serializedName: \"properties.origins\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceReference\"\n            }\n          }\n        }\n      },\n      trafficRestorationTimeToHealedOrNewEndpointsInMinutes: {\n        constraints: {\n          InclusiveMaximum: 50,\n          InclusiveMinimum: 0\n        },\n        serializedName:\n          \"properties.trafficRestorationTimeToHealedOrNewEndpointsInMinutes\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      responseBasedOriginErrorDetectionSettings: {\n        serializedName: \"properties.responseBasedOriginErrorDetectionSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"ResponseBasedOriginErrorDetectionParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const CustomDomainListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CustomDomainListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CustomDomain\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CustomDomainHttpsParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CustomDomainHttpsParameters\",\n    uberParent: \"CustomDomainHttpsParameters\",\n    polymorphicDiscriminator: {\n      serializedName: \"certificateSource\",\n      clientName: \"certificateSource\"\n    },\n    modelProperties: {\n      certificateSource: {\n        serializedName: \"certificateSource\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      protocolType: {\n        serializedName: \"protocolType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      minimumTlsVersion: {\n        serializedName: \"minimumTlsVersion\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"None\", \"TLS10\", \"TLS12\"]\n        }\n      }\n    }\n  }\n};\n\nexport const CustomDomainParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CustomDomainParameters\",\n    modelProperties: {\n      hostName: {\n        serializedName: \"properties.hostName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CheckNameAvailabilityInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CheckNameAvailabilityInput\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ValidateProbeInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ValidateProbeInput\",\n    modelProperties: {\n      probeURL: {\n        serializedName: \"probeURL\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ValidateProbeOutput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ValidateProbeOutput\",\n    modelProperties: {\n      isValid: {\n        serializedName: \"isValid\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"errorCode\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationsListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationsListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Operation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Operation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Operation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      isDataAction: {\n        serializedName: \"isDataAction\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationDisplay\"\n        }\n      },\n      origin: {\n        serializedName: \"origin\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceSpecification: {\n        serializedName: \"properties.serviceSpecification\",\n        type: {\n          name: \"Composite\",\n          className: \"ServiceSpecification\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationDisplay: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationDisplay\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceSpecification: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServiceSpecification\",\n    modelProperties: {\n      logSpecifications: {\n        serializedName: \"logSpecifications\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"LogSpecification\"\n            }\n          }\n        }\n      },\n      metricSpecifications: {\n        serializedName: \"metricSpecifications\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetricSpecification\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const LogSpecification: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LogSpecification\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobDuration: {\n        serializedName: \"blobDuration\",\n        type: {\n          name: \"String\"\n        }\n      },\n      logFilterPattern: {\n        serializedName: \"logFilterPattern\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MetricSpecification: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetricSpecification\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayDescription: {\n        serializedName: \"displayDescription\",\n        type: {\n          name: \"String\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        type: {\n          name: \"String\"\n        }\n      },\n      aggregationType: {\n        serializedName: \"aggregationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      availabilities: {\n        serializedName: \"availabilities\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetricAvailability\"\n            }\n          }\n        }\n      },\n      supportedTimeGrainTypes: {\n        serializedName: \"supportedTimeGrainTypes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      dimensions: {\n        serializedName: \"dimensions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DimensionProperties\"\n            }\n          }\n        }\n      },\n      fillGapWithZero: {\n        serializedName: \"fillGapWithZero\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      metricFilterPattern: {\n        serializedName: \"metricFilterPattern\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isInternal: {\n        serializedName: \"isInternal\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const MetricAvailability: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetricAvailability\",\n    modelProperties: {\n      timeGrain: {\n        serializedName: \"timeGrain\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobDuration: {\n        serializedName: \"blobDuration\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DimensionProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DimensionProperties\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      internalName: {\n        serializedName: \"internalName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EdgenodeResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EdgenodeResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"EdgeNode\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IpAddressGroup: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IpAddressGroup\",\n    modelProperties: {\n      deliveryRegion: {\n        serializedName: \"deliveryRegion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ipv4Addresses: {\n        serializedName: \"ipv4Addresses\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CidrIpAddress\"\n            }\n          }\n        }\n      },\n      ipv6Addresses: {\n        serializedName: \"ipv6Addresses\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CidrIpAddress\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CidrIpAddress: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CidrIpAddress\",\n    modelProperties: {\n      baseIpAddress: {\n        serializedName: \"baseIpAddress\",\n        type: {\n          name: \"String\"\n        }\n      },\n      prefixLength: {\n        serializedName: \"prefixLength\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const CdnWebApplicationFirewallPolicyList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CdnWebApplicationFirewallPolicyList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CdnWebApplicationFirewallPolicy\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PolicySettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PolicySettings\",\n    modelProperties: {\n      enabledState: {\n        serializedName: \"enabledState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      mode: {\n        serializedName: \"mode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      defaultRedirectUrl: {\n        serializedName: \"defaultRedirectUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      defaultCustomBlockResponseStatusCode: {\n        serializedName: \"defaultCustomBlockResponseStatusCode\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      defaultCustomBlockResponseBody: {\n        constraints: {\n          Pattern: new RegExp(\n            \"^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$\"\n          )\n        },\n        serializedName: \"defaultCustomBlockResponseBody\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RateLimitRuleList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RateLimitRuleList\",\n    modelProperties: {\n      rules: {\n        serializedName: \"rules\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RateLimitRule\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CustomRule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CustomRule\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      enabledState: {\n        serializedName: \"enabledState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      priority: {\n        constraints: {\n          InclusiveMaximum: 1000,\n          InclusiveMinimum: 0\n        },\n        serializedName: \"priority\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      matchConditions: {\n        serializedName: \"matchConditions\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MatchCondition\"\n            }\n          }\n        }\n      },\n      action: {\n        serializedName: \"action\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MatchCondition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MatchCondition\",\n    modelProperties: {\n      matchVariable: {\n        serializedName: \"matchVariable\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      selector: {\n        serializedName: \"selector\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operator: {\n        serializedName: \"operator\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      negateCondition: {\n        serializedName: \"negateCondition\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      matchValue: {\n        serializedName: \"matchValue\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      transforms: {\n        serializedName: \"transforms\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CustomRuleList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CustomRuleList\",\n    modelProperties: {\n      rules: {\n        serializedName: \"rules\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CustomRule\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedRuleSetList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedRuleSetList\",\n    modelProperties: {\n      managedRuleSets: {\n        serializedName: \"managedRuleSets\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagedRuleSet\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedRuleSet: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedRuleSet\",\n    modelProperties: {\n      ruleSetType: {\n        serializedName: \"ruleSetType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ruleSetVersion: {\n        serializedName: \"ruleSetVersion\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      anomalyScore: {\n        constraints: {\n          InclusiveMaximum: 20,\n          InclusiveMinimum: 0\n        },\n        serializedName: \"anomalyScore\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      ruleGroupOverrides: {\n        serializedName: \"ruleGroupOverrides\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagedRuleGroupOverride\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedRuleGroupOverride: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedRuleGroupOverride\",\n    modelProperties: {\n      ruleGroupName: {\n        serializedName: \"ruleGroupName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      rules: {\n        serializedName: \"rules\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagedRuleOverride\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedRuleOverride: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedRuleOverride\",\n    modelProperties: {\n      ruleId: {\n        serializedName: \"ruleId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      enabledState: {\n        serializedName: \"enabledState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      action: {\n        serializedName: \"action\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CdnEndpoint: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CdnEndpoint\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CdnWebApplicationFirewallPolicyPatchParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CdnWebApplicationFirewallPolicyPatchParameters\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedRuleSetDefinitionList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedRuleSetDefinitionList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagedRuleSetDefinition\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedRuleGroupDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedRuleGroupDefinition\",\n    modelProperties: {\n      ruleGroupName: {\n        serializedName: \"ruleGroupName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      rules: {\n        serializedName: \"rules\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagedRuleDefinition\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedRuleDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedRuleDefinition\",\n    modelProperties: {\n      ruleId: {\n        serializedName: \"ruleId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Certificate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Certificate\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      subject: {\n        serializedName: \"subject\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      expirationDate: {\n        serializedName: \"expirationDate\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SecurityPolicyWebApplicationFirewallAssociation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SecurityPolicyWebApplicationFirewallAssociation\",\n    modelProperties: {\n      domains: {\n        serializedName: \"domains\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ActivatedResourceReference\"\n            }\n          }\n        }\n      },\n      patternsToMatch: {\n        serializedName: \"patternsToMatch\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ValidationToken: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ValidationToken\",\n    modelProperties: {\n      token: {\n        serializedName: \"token\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RemoteAddressMatchConditionParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RemoteAddressMatchConditionParameters\",\n    modelProperties: {\n      typeName: {\n        defaultValue: \"DeliveryRuleRemoteAddressConditionParameters\",\n        isConstant: true,\n        serializedName: \"typeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operator: {\n        serializedName: \"operator\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      negateCondition: {\n        serializedName: \"negateCondition\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      matchValues: {\n        serializedName: \"matchValues\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      transforms: {\n        serializedName: \"transforms\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RequestMethodMatchConditionParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RequestMethodMatchConditionParameters\",\n    modelProperties: {\n      typeName: {\n        defaultValue: \"DeliveryRuleRequestMethodConditionParameters\",\n        isConstant: true,\n        serializedName: \"typeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operator: {\n        serializedName: \"operator\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      negateCondition: {\n        serializedName: \"negateCondition\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      transforms: {\n        serializedName: \"transforms\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      matchValues: {\n        serializedName: \"matchValues\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const QueryStringMatchConditionParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QueryStringMatchConditionParameters\",\n    modelProperties: {\n      typeName: {\n        defaultValue: \"DeliveryRuleQueryStringConditionParameters\",\n        isConstant: true,\n        serializedName: \"typeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operator: {\n        serializedName: \"operator\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      negateCondition: {\n        serializedName: \"negateCondition\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      matchValues: {\n        serializedName: \"matchValues\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      transforms: {\n        serializedName: \"transforms\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const PostArgsMatchConditionParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PostArgsMatchConditionParameters\",\n    modelProperties: {\n      typeName: {\n        defaultValue: \"DeliveryRulePostArgsConditionParameters\",\n        isConstant: true,\n        serializedName: \"typeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      selector: {\n        serializedName: \"selector\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operator: {\n        serializedName: \"operator\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      negateCondition: {\n        serializedName: \"negateCondition\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      matchValues: {\n        serializedName: \"matchValues\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      transforms: {\n        serializedName: \"transforms\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RequestUriMatchConditionParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RequestUriMatchConditionParameters\",\n    modelProperties: {\n      typeName: {\n        defaultValue: \"DeliveryRuleRequestUriConditionParameters\",\n        isConstant: true,\n        serializedName: \"typeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operator: {\n        serializedName: \"operator\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      negateCondition: {\n        serializedName: \"negateCondition\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      matchValues: {\n        serializedName: \"matchValues\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      transforms: {\n        serializedName: \"transforms\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RequestHeaderMatchConditionParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RequestHeaderMatchConditionParameters\",\n    modelProperties: {\n      typeName: {\n        defaultValue: \"DeliveryRuleRequestHeaderConditionParameters\",\n        isConstant: true,\n        serializedName: \"typeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      selector: {\n        serializedName: \"selector\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operator: {\n        serializedName: \"operator\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      negateCondition: {\n        serializedName: \"negateCondition\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      matchValues: {\n        serializedName: \"matchValues\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      transforms: {\n        serializedName: \"transforms\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RequestBodyMatchConditionParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RequestBodyMatchConditionParameters\",\n    modelProperties: {\n      typeName: {\n        defaultValue: \"DeliveryRuleRequestBodyConditionParameters\",\n        isConstant: true,\n        serializedName: \"typeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operator: {\n        serializedName: \"operator\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      negateCondition: {\n        serializedName: \"negateCondition\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      matchValues: {\n        serializedName: \"matchValues\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      transforms: {\n        serializedName: \"transforms\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RequestSchemeMatchConditionParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RequestSchemeMatchConditionParameters\",\n    modelProperties: {\n      typeName: {\n        defaultValue: \"DeliveryRuleRequestSchemeConditionParameters\",\n        isConstant: true,\n        serializedName: \"typeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operator: {\n        defaultValue: \"Equal\",\n        isConstant: true,\n        serializedName: \"operator\",\n        type: {\n          name: \"String\"\n        }\n      },\n      negateCondition: {\n        serializedName: \"negateCondition\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      transforms: {\n        serializedName: \"transforms\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      matchValues: {\n        serializedName: \"matchValues\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const UrlPathMatchConditionParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UrlPathMatchConditionParameters\",\n    modelProperties: {\n      typeName: {\n        defaultValue: \"DeliveryRuleUrlPathMatchConditionParameters\",\n        isConstant: true,\n        serializedName: \"typeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operator: {\n        serializedName: \"operator\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      negateCondition: {\n        serializedName: \"negateCondition\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      matchValues: {\n        serializedName: \"matchValues\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      transforms: {\n        serializedName: \"transforms\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const UrlFileExtensionMatchConditionParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UrlFileExtensionMatchConditionParameters\",\n    modelProperties: {\n      typeName: {\n        defaultValue: \"DeliveryRuleUrlFileExtensionMatchConditionParameters\",\n        isConstant: true,\n        serializedName: \"typeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operator: {\n        serializedName: \"operator\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      negateCondition: {\n        serializedName: \"negateCondition\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      matchValues: {\n        serializedName: \"matchValues\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      transforms: {\n        serializedName: \"transforms\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const UrlFileNameMatchConditionParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UrlFileNameMatchConditionParameters\",\n    modelProperties: {\n      typeName: {\n        defaultValue: \"DeliveryRuleUrlFilenameConditionParameters\",\n        isConstant: true,\n        serializedName: \"typeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operator: {\n        serializedName: \"operator\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      negateCondition: {\n        serializedName: \"negateCondition\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      matchValues: {\n        serializedName: \"matchValues\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      transforms: {\n        serializedName: \"transforms\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const HttpVersionMatchConditionParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"HttpVersionMatchConditionParameters\",\n    modelProperties: {\n      typeName: {\n        defaultValue: \"DeliveryRuleHttpVersionConditionParameters\",\n        isConstant: true,\n        serializedName: \"typeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operator: {\n        serializedName: \"operator\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      negateCondition: {\n        serializedName: \"negateCondition\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      matchValues: {\n        serializedName: \"matchValues\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      transforms: {\n        serializedName: \"transforms\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CookiesMatchConditionParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CookiesMatchConditionParameters\",\n    modelProperties: {\n      typeName: {\n        defaultValue: \"DeliveryRuleCookiesConditionParameters\",\n        isConstant: true,\n        serializedName: \"typeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      selector: {\n        serializedName: \"selector\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operator: {\n        serializedName: \"operator\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      negateCondition: {\n        serializedName: \"negateCondition\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      matchValues: {\n        serializedName: \"matchValues\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      transforms: {\n        serializedName: \"transforms\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const IsDeviceMatchConditionParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IsDeviceMatchConditionParameters\",\n    modelProperties: {\n      typeName: {\n        defaultValue: \"DeliveryRuleIsDeviceConditionParameters\",\n        isConstant: true,\n        serializedName: \"typeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operator: {\n        serializedName: \"operator\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      negateCondition: {\n        serializedName: \"negateCondition\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      matchValues: {\n        serializedName: \"matchValues\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      transforms: {\n        serializedName: \"transforms\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SocketAddrMatchConditionParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SocketAddrMatchConditionParameters\",\n    modelProperties: {\n      typeName: {\n        defaultValue: \"DeliveryRuleSocketAddrConditionParameters\",\n        isConstant: true,\n        serializedName: \"typeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operator: {\n        serializedName: \"operator\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      negateCondition: {\n        serializedName: \"negateCondition\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      matchValues: {\n        serializedName: \"matchValues\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      transforms: {\n        serializedName: \"transforms\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ClientPortMatchConditionParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ClientPortMatchConditionParameters\",\n    modelProperties: {\n      typeName: {\n        defaultValue: \"DeliveryRuleClientPortConditionParameters\",\n        isConstant: true,\n        serializedName: \"typeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operator: {\n        serializedName: \"operator\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      negateCondition: {\n        serializedName: \"negateCondition\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      matchValues: {\n        serializedName: \"matchValues\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      transforms: {\n        serializedName: \"transforms\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ServerPortMatchConditionParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerPortMatchConditionParameters\",\n    modelProperties: {\n      typeName: {\n        defaultValue: \"DeliveryRuleServerPortConditionParameters\",\n        isConstant: true,\n        serializedName: \"typeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operator: {\n        serializedName: \"operator\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      negateCondition: {\n        serializedName: \"negateCondition\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      matchValues: {\n        serializedName: \"matchValues\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      transforms: {\n        serializedName: \"transforms\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const HostNameMatchConditionParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"HostNameMatchConditionParameters\",\n    modelProperties: {\n      typeName: {\n        defaultValue: \"DeliveryRuleHostNameConditionParameters\",\n        isConstant: true,\n        serializedName: \"typeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operator: {\n        serializedName: \"operator\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      negateCondition: {\n        serializedName: \"negateCondition\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      matchValues: {\n        serializedName: \"matchValues\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      transforms: {\n        serializedName: \"transforms\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SslProtocolMatchConditionParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SslProtocolMatchConditionParameters\",\n    modelProperties: {\n      typeName: {\n        defaultValue: \"DeliveryRuleSslProtocolConditionParameters\",\n        isConstant: true,\n        serializedName: \"typeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operator: {\n        serializedName: \"operator\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      negateCondition: {\n        serializedName: \"negateCondition\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      matchValues: {\n        serializedName: \"matchValues\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      transforms: {\n        serializedName: \"transforms\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const UrlRedirectActionParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UrlRedirectActionParameters\",\n    modelProperties: {\n      typeName: {\n        defaultValue: \"DeliveryRuleUrlRedirectActionParameters\",\n        isConstant: true,\n        serializedName: \"typeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      redirectType: {\n        serializedName: \"redirectType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      destinationProtocol: {\n        serializedName: \"destinationProtocol\",\n        type: {\n          name: \"String\"\n        }\n      },\n      customPath: {\n        serializedName: \"customPath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      customHostname: {\n        serializedName: \"customHostname\",\n        type: {\n          name: \"String\"\n        }\n      },\n      customQueryString: {\n        serializedName: \"customQueryString\",\n        type: {\n          name: \"String\"\n        }\n      },\n      customFragment: {\n        serializedName: \"customFragment\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UrlSigningActionParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UrlSigningActionParameters\",\n    modelProperties: {\n      typeName: {\n        defaultValue: \"DeliveryRuleUrlSigningActionParameters\",\n        isConstant: true,\n        serializedName: \"typeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      algorithm: {\n        serializedName: \"algorithm\",\n        type: {\n          name: \"String\"\n        }\n      },\n      parameterNameOverride: {\n        serializedName: \"parameterNameOverride\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"UrlSigningParamIdentifier\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const UrlSigningParamIdentifier: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UrlSigningParamIdentifier\",\n    modelProperties: {\n      paramIndicator: {\n        serializedName: \"paramIndicator\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      paramName: {\n        serializedName: \"paramName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OriginGroupOverrideActionParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OriginGroupOverrideActionParameters\",\n    modelProperties: {\n      typeName: {\n        defaultValue: \"DeliveryRuleOriginGroupOverrideActionParameters\",\n        isConstant: true,\n        serializedName: \"typeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      originGroup: {\n        serializedName: \"originGroup\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceReference\"\n        }\n      }\n    }\n  }\n};\n\nexport const UrlRewriteActionParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UrlRewriteActionParameters\",\n    modelProperties: {\n      typeName: {\n        defaultValue: \"DeliveryRuleUrlRewriteActionParameters\",\n        isConstant: true,\n        serializedName: \"typeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourcePattern: {\n        serializedName: \"sourcePattern\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      destination: {\n        serializedName: \"destination\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      preserveUnmatchedPath: {\n        serializedName: \"preserveUnmatchedPath\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const HeaderActionParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"HeaderActionParameters\",\n    modelProperties: {\n      typeName: {\n        defaultValue: \"DeliveryRuleHeaderActionParameters\",\n        isConstant: true,\n        serializedName: \"typeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      headerAction: {\n        serializedName: \"headerAction\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      headerName: {\n        serializedName: \"headerName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CacheExpirationActionParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CacheExpirationActionParameters\",\n    modelProperties: {\n      typeName: {\n        defaultValue: \"DeliveryRuleCacheExpirationActionParameters\",\n        isConstant: true,\n        serializedName: \"typeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cacheBehavior: {\n        serializedName: \"cacheBehavior\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      cacheType: {\n        serializedName: \"cacheType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      cacheDuration: {\n        serializedName: \"cacheDuration\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CacheKeyQueryStringActionParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CacheKeyQueryStringActionParameters\",\n    modelProperties: {\n      typeName: {\n        defaultValue: \"DeliveryRuleCacheKeyQueryStringBehaviorActionParameters\",\n        isConstant: true,\n        serializedName: \"typeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      queryStringBehavior: {\n        serializedName: \"queryStringBehavior\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      queryParameters: {\n        serializedName: \"queryParameters\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RouteConfigurationOverrideActionParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RouteConfigurationOverrideActionParameters\",\n    modelProperties: {\n      typeName: {\n        defaultValue: \"DeliveryRuleRouteConfigurationOverrideActionParameters\",\n        isConstant: true,\n        serializedName: \"typeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      originGroupOverride: {\n        serializedName: \"originGroupOverride\",\n        type: {\n          name: \"Composite\",\n          className: \"OriginGroupOverride\"\n        }\n      },\n      cacheConfiguration: {\n        serializedName: \"cacheConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"CacheConfiguration\"\n        }\n      }\n    }\n  }\n};\n\nexport const OriginGroupOverride: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OriginGroupOverride\",\n    modelProperties: {\n      originGroup: {\n        serializedName: \"originGroup\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceReference\"\n        }\n      },\n      forwardingProtocol: {\n        serializedName: \"forwardingProtocol\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CacheConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CacheConfiguration\",\n    modelProperties: {\n      queryStringCachingBehavior: {\n        serializedName: \"queryStringCachingBehavior\",\n        type: {\n          name: \"String\"\n        }\n      },\n      queryParameters: {\n        serializedName: \"queryParameters\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isCompressionEnabled: {\n        serializedName: \"isCompressionEnabled\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cacheBehavior: {\n        serializedName: \"cacheBehavior\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cacheDuration: {\n        serializedName: \"cacheDuration\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CdnCertificateSourceParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CdnCertificateSourceParameters\",\n    modelProperties: {\n      typeName: {\n        defaultValue: \"CdnCertificateSourceParameters\",\n        isConstant: true,\n        serializedName: \"typeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      certificateType: {\n        serializedName: \"certificateType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const KeyVaultCertificateSourceParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyVaultCertificateSourceParameters\",\n    modelProperties: {\n      typeName: {\n        defaultValue: \"KeyVaultCertificateSourceParameters\",\n        isConstant: true,\n        serializedName: \"typeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionId: {\n        serializedName: \"subscriptionId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceGroupName: {\n        serializedName: \"resourceGroupName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      vaultName: {\n        serializedName: \"vaultName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      secretName: {\n        serializedName: \"secretName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      secretVersion: {\n        serializedName: \"secretVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      updateRule: {\n        serializedName: \"updateRule\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      deleteRule: {\n        serializedName: \"deleteRule\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AFDDomainProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AFDDomainProperties\",\n    modelProperties: {\n      ...AFDDomainUpdatePropertiesParameters.type.modelProperties,\n      ...AFDStateProperties.type.modelProperties,\n      domainValidationState: {\n        serializedName: \"domainValidationState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      hostName: {\n        serializedName: \"hostName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      validationProperties: {\n        serializedName: \"validationProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"DomainValidationProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const AFDEndpointProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AFDEndpointProperties\",\n    modelProperties: {\n      ...AFDEndpointPropertiesUpdateParameters.type.modelProperties,\n      ...AFDStateProperties.type.modelProperties,\n      hostName: {\n        serializedName: \"hostName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      autoGeneratedDomainNameLabelScope: {\n        serializedName: \"autoGeneratedDomainNameLabelScope\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AFDOriginGroupProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AFDOriginGroupProperties\",\n    modelProperties: {\n      ...AFDOriginGroupUpdatePropertiesParameters.type.modelProperties,\n      ...AFDStateProperties.type.modelProperties\n    }\n  }\n};\n\nexport const AFDOriginProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AFDOriginProperties\",\n    modelProperties: {\n      ...AFDOriginUpdatePropertiesParameters.type.modelProperties,\n      ...AFDStateProperties.type.modelProperties\n    }\n  }\n};\n\nexport const RouteProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RouteProperties\",\n    modelProperties: {\n      ...RouteUpdatePropertiesParameters.type.modelProperties,\n      ...AFDStateProperties.type.modelProperties\n    }\n  }\n};\n\nexport const RuleSetProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RuleSetProperties\",\n    modelProperties: {\n      ...AFDStateProperties.type.modelProperties,\n      profileName: {\n        serializedName: \"profileName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RuleProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RuleProperties\",\n    modelProperties: {\n      ...RuleUpdatePropertiesParameters.type.modelProperties,\n      ...AFDStateProperties.type.modelProperties\n    }\n  }\n};\n\nexport const SecurityPolicyProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SecurityPolicyProperties\",\n    modelProperties: {\n      ...AFDStateProperties.type.modelProperties,\n      profileName: {\n        serializedName: \"profileName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Composite\",\n          className: \"SecurityPolicyPropertiesParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const SecretProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SecretProperties\",\n    modelProperties: {\n      ...AFDStateProperties.type.modelProperties,\n      profileName: {\n        serializedName: \"profileName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Composite\",\n          className: \"SecretParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProxyResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProxyResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties\n    }\n  }\n};\n\nexport const TrackedResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TrackedResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      location: {\n        serializedName: \"location\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedRuleSetDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedRuleSetDefinition\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ruleSetType: {\n        serializedName: \"properties.ruleSetType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ruleSetVersion: {\n        serializedName: \"properties.ruleSetVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ruleGroups: {\n        serializedName: \"properties.ruleGroups\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagedRuleGroupDefinition\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DeliveryRuleRemoteAddressCondition: coreClient.CompositeMapper = {\n  serializedName: \"RemoteAddress\",\n  type: {\n    name: \"Composite\",\n    className: \"DeliveryRuleRemoteAddressCondition\",\n    uberParent: \"DeliveryRuleCondition\",\n    polymorphicDiscriminator:\n      DeliveryRuleCondition.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DeliveryRuleCondition.type.modelProperties,\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Composite\",\n          className: \"RemoteAddressMatchConditionParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeliveryRuleRequestMethodCondition: coreClient.CompositeMapper = {\n  serializedName: \"RequestMethod\",\n  type: {\n    name: \"Composite\",\n    className: \"DeliveryRuleRequestMethodCondition\",\n    uberParent: \"DeliveryRuleCondition\",\n    polymorphicDiscriminator:\n      DeliveryRuleCondition.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DeliveryRuleCondition.type.modelProperties,\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Composite\",\n          className: \"RequestMethodMatchConditionParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeliveryRuleQueryStringCondition: coreClient.CompositeMapper = {\n  serializedName: \"QueryString\",\n  type: {\n    name: \"Composite\",\n    className: \"DeliveryRuleQueryStringCondition\",\n    uberParent: \"DeliveryRuleCondition\",\n    polymorphicDiscriminator:\n      DeliveryRuleCondition.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DeliveryRuleCondition.type.modelProperties,\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Composite\",\n          className: \"QueryStringMatchConditionParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeliveryRulePostArgsCondition: coreClient.CompositeMapper = {\n  serializedName: \"PostArgs\",\n  type: {\n    name: \"Composite\",\n    className: \"DeliveryRulePostArgsCondition\",\n    uberParent: \"DeliveryRuleCondition\",\n    polymorphicDiscriminator:\n      DeliveryRuleCondition.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DeliveryRuleCondition.type.modelProperties,\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Composite\",\n          className: \"PostArgsMatchConditionParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeliveryRuleRequestUriCondition: coreClient.CompositeMapper = {\n  serializedName: \"RequestUri\",\n  type: {\n    name: \"Composite\",\n    className: \"DeliveryRuleRequestUriCondition\",\n    uberParent: \"DeliveryRuleCondition\",\n    polymorphicDiscriminator:\n      DeliveryRuleCondition.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DeliveryRuleCondition.type.modelProperties,\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Composite\",\n          className: \"RequestUriMatchConditionParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeliveryRuleRequestHeaderCondition: coreClient.CompositeMapper = {\n  serializedName: \"RequestHeader\",\n  type: {\n    name: \"Composite\",\n    className: \"DeliveryRuleRequestHeaderCondition\",\n    uberParent: \"DeliveryRuleCondition\",\n    polymorphicDiscriminator:\n      DeliveryRuleCondition.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DeliveryRuleCondition.type.modelProperties,\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Composite\",\n          className: \"RequestHeaderMatchConditionParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeliveryRuleRequestBodyCondition: coreClient.CompositeMapper = {\n  serializedName: \"RequestBody\",\n  type: {\n    name: \"Composite\",\n    className: \"DeliveryRuleRequestBodyCondition\",\n    uberParent: \"DeliveryRuleCondition\",\n    polymorphicDiscriminator:\n      DeliveryRuleCondition.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DeliveryRuleCondition.type.modelProperties,\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Composite\",\n          className: \"RequestBodyMatchConditionParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeliveryRuleRequestSchemeCondition: coreClient.CompositeMapper = {\n  serializedName: \"RequestScheme\",\n  type: {\n    name: \"Composite\",\n    className: \"DeliveryRuleRequestSchemeCondition\",\n    uberParent: \"DeliveryRuleCondition\",\n    polymorphicDiscriminator:\n      DeliveryRuleCondition.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DeliveryRuleCondition.type.modelProperties,\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Composite\",\n          className: \"RequestSchemeMatchConditionParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeliveryRuleUrlPathCondition: coreClient.CompositeMapper = {\n  serializedName: \"UrlPath\",\n  type: {\n    name: \"Composite\",\n    className: \"DeliveryRuleUrlPathCondition\",\n    uberParent: \"DeliveryRuleCondition\",\n    polymorphicDiscriminator:\n      DeliveryRuleCondition.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DeliveryRuleCondition.type.modelProperties,\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Composite\",\n          className: \"UrlPathMatchConditionParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeliveryRuleUrlFileExtensionCondition: coreClient.CompositeMapper = {\n  serializedName: \"UrlFileExtension\",\n  type: {\n    name: \"Composite\",\n    className: \"DeliveryRuleUrlFileExtensionCondition\",\n    uberParent: \"DeliveryRuleCondition\",\n    polymorphicDiscriminator:\n      DeliveryRuleCondition.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DeliveryRuleCondition.type.modelProperties,\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Composite\",\n          className: \"UrlFileExtensionMatchConditionParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeliveryRuleUrlFileNameCondition: coreClient.CompositeMapper = {\n  serializedName: \"UrlFileName\",\n  type: {\n    name: \"Composite\",\n    className: \"DeliveryRuleUrlFileNameCondition\",\n    uberParent: \"DeliveryRuleCondition\",\n    polymorphicDiscriminator:\n      DeliveryRuleCondition.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DeliveryRuleCondition.type.modelProperties,\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Composite\",\n          className: \"UrlFileNameMatchConditionParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeliveryRuleHttpVersionCondition: coreClient.CompositeMapper = {\n  serializedName: \"HttpVersion\",\n  type: {\n    name: \"Composite\",\n    className: \"DeliveryRuleHttpVersionCondition\",\n    uberParent: \"DeliveryRuleCondition\",\n    polymorphicDiscriminator:\n      DeliveryRuleCondition.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DeliveryRuleCondition.type.modelProperties,\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Composite\",\n          className: \"HttpVersionMatchConditionParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeliveryRuleCookiesCondition: coreClient.CompositeMapper = {\n  serializedName: \"Cookies\",\n  type: {\n    name: \"Composite\",\n    className: \"DeliveryRuleCookiesCondition\",\n    uberParent: \"DeliveryRuleCondition\",\n    polymorphicDiscriminator:\n      DeliveryRuleCondition.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DeliveryRuleCondition.type.modelProperties,\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Composite\",\n          className: \"CookiesMatchConditionParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeliveryRuleIsDeviceCondition: coreClient.CompositeMapper = {\n  serializedName: \"IsDevice\",\n  type: {\n    name: \"Composite\",\n    className: \"DeliveryRuleIsDeviceCondition\",\n    uberParent: \"DeliveryRuleCondition\",\n    polymorphicDiscriminator:\n      DeliveryRuleCondition.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DeliveryRuleCondition.type.modelProperties,\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Composite\",\n          className: \"IsDeviceMatchConditionParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeliveryRuleSocketAddrCondition: coreClient.CompositeMapper = {\n  serializedName: \"SocketAddr\",\n  type: {\n    name: \"Composite\",\n    className: \"DeliveryRuleSocketAddrCondition\",\n    uberParent: \"DeliveryRuleCondition\",\n    polymorphicDiscriminator:\n      DeliveryRuleCondition.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DeliveryRuleCondition.type.modelProperties,\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Composite\",\n          className: \"SocketAddrMatchConditionParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeliveryRuleClientPortCondition: coreClient.CompositeMapper = {\n  serializedName: \"ClientPort\",\n  type: {\n    name: \"Composite\",\n    className: \"DeliveryRuleClientPortCondition\",\n    uberParent: \"DeliveryRuleCondition\",\n    polymorphicDiscriminator:\n      DeliveryRuleCondition.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DeliveryRuleCondition.type.modelProperties,\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Composite\",\n          className: \"ClientPortMatchConditionParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeliveryRuleServerPortCondition: coreClient.CompositeMapper = {\n  serializedName: \"ServerPort\",\n  type: {\n    name: \"Composite\",\n    className: \"DeliveryRuleServerPortCondition\",\n    uberParent: \"DeliveryRuleCondition\",\n    polymorphicDiscriminator:\n      DeliveryRuleCondition.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DeliveryRuleCondition.type.modelProperties,\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Composite\",\n          className: \"ServerPortMatchConditionParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeliveryRuleHostNameCondition: coreClient.CompositeMapper = {\n  serializedName: \"HostName\",\n  type: {\n    name: \"Composite\",\n    className: \"DeliveryRuleHostNameCondition\",\n    uberParent: \"DeliveryRuleCondition\",\n    polymorphicDiscriminator:\n      DeliveryRuleCondition.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DeliveryRuleCondition.type.modelProperties,\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Composite\",\n          className: \"HostNameMatchConditionParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeliveryRuleSslProtocolCondition: coreClient.CompositeMapper = {\n  serializedName: \"SslProtocol\",\n  type: {\n    name: \"Composite\",\n    className: \"DeliveryRuleSslProtocolCondition\",\n    uberParent: \"DeliveryRuleCondition\",\n    polymorphicDiscriminator:\n      DeliveryRuleCondition.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DeliveryRuleCondition.type.modelProperties,\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Composite\",\n          className: \"SslProtocolMatchConditionParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const UrlRedirectAction: coreClient.CompositeMapper = {\n  serializedName: \"UrlRedirect\",\n  type: {\n    name: \"Composite\",\n    className: \"UrlRedirectAction\",\n    uberParent: \"DeliveryRuleActionAutoGenerated\",\n    polymorphicDiscriminator:\n      DeliveryRuleActionAutoGenerated.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DeliveryRuleActionAutoGenerated.type.modelProperties,\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Composite\",\n          className: \"UrlRedirectActionParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const UrlSigningAction: coreClient.CompositeMapper = {\n  serializedName: \"UrlSigning\",\n  type: {\n    name: \"Composite\",\n    className: \"UrlSigningAction\",\n    uberParent: \"DeliveryRuleActionAutoGenerated\",\n    polymorphicDiscriminator:\n      DeliveryRuleActionAutoGenerated.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DeliveryRuleActionAutoGenerated.type.modelProperties,\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Composite\",\n          className: \"UrlSigningActionParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const OriginGroupOverrideAction: coreClient.CompositeMapper = {\n  serializedName: \"OriginGroupOverride\",\n  type: {\n    name: \"Composite\",\n    className: \"OriginGroupOverrideAction\",\n    uberParent: \"DeliveryRuleActionAutoGenerated\",\n    polymorphicDiscriminator:\n      DeliveryRuleActionAutoGenerated.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DeliveryRuleActionAutoGenerated.type.modelProperties,\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Composite\",\n          className: \"OriginGroupOverrideActionParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const UrlRewriteAction: coreClient.CompositeMapper = {\n  serializedName: \"UrlRewrite\",\n  type: {\n    name: \"Composite\",\n    className: \"UrlRewriteAction\",\n    uberParent: \"DeliveryRuleActionAutoGenerated\",\n    polymorphicDiscriminator:\n      DeliveryRuleActionAutoGenerated.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DeliveryRuleActionAutoGenerated.type.modelProperties,\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Composite\",\n          className: \"UrlRewriteActionParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeliveryRuleRequestHeaderAction: coreClient.CompositeMapper = {\n  serializedName: \"ModifyRequestHeader\",\n  type: {\n    name: \"Composite\",\n    className: \"DeliveryRuleRequestHeaderAction\",\n    uberParent: \"DeliveryRuleActionAutoGenerated\",\n    polymorphicDiscriminator:\n      DeliveryRuleActionAutoGenerated.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DeliveryRuleActionAutoGenerated.type.modelProperties,\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Composite\",\n          className: \"HeaderActionParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeliveryRuleResponseHeaderAction: coreClient.CompositeMapper = {\n  serializedName: \"ModifyResponseHeader\",\n  type: {\n    name: \"Composite\",\n    className: \"DeliveryRuleResponseHeaderAction\",\n    uberParent: \"DeliveryRuleActionAutoGenerated\",\n    polymorphicDiscriminator:\n      DeliveryRuleActionAutoGenerated.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DeliveryRuleActionAutoGenerated.type.modelProperties,\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Composite\",\n          className: \"HeaderActionParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeliveryRuleCacheExpirationAction: coreClient.CompositeMapper = {\n  serializedName: \"CacheExpiration\",\n  type: {\n    name: \"Composite\",\n    className: \"DeliveryRuleCacheExpirationAction\",\n    uberParent: \"DeliveryRuleActionAutoGenerated\",\n    polymorphicDiscriminator:\n      DeliveryRuleActionAutoGenerated.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DeliveryRuleActionAutoGenerated.type.modelProperties,\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Composite\",\n          className: \"CacheExpirationActionParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeliveryRuleCacheKeyQueryStringAction: coreClient.CompositeMapper = {\n  serializedName: \"CacheKeyQueryString\",\n  type: {\n    name: \"Composite\",\n    className: \"DeliveryRuleCacheKeyQueryStringAction\",\n    uberParent: \"DeliveryRuleActionAutoGenerated\",\n    polymorphicDiscriminator:\n      DeliveryRuleActionAutoGenerated.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DeliveryRuleActionAutoGenerated.type.modelProperties,\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Composite\",\n          className: \"CacheKeyQueryStringActionParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeliveryRuleRouteConfigurationOverrideAction: coreClient.CompositeMapper = {\n  serializedName: \"RouteConfigurationOverride\",\n  type: {\n    name: \"Composite\",\n    className: \"DeliveryRuleRouteConfigurationOverrideAction\",\n    uberParent: \"DeliveryRuleActionAutoGenerated\",\n    polymorphicDiscriminator:\n      DeliveryRuleActionAutoGenerated.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DeliveryRuleActionAutoGenerated.type.modelProperties,\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Composite\",\n          className: \"RouteConfigurationOverrideActionParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const SecurityPolicyWebApplicationFirewallParameters: coreClient.CompositeMapper = {\n  serializedName: \"WebApplicationFirewall\",\n  type: {\n    name: \"Composite\",\n    className: \"SecurityPolicyWebApplicationFirewallParameters\",\n    uberParent: \"SecurityPolicyPropertiesParameters\",\n    polymorphicDiscriminator:\n      SecurityPolicyPropertiesParameters.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...SecurityPolicyPropertiesParameters.type.modelProperties,\n      wafPolicy: {\n        serializedName: \"wafPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceReference\"\n        }\n      },\n      associations: {\n        serializedName: \"associations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SecurityPolicyWebApplicationFirewallAssociation\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const UrlSigningKeyParameters: coreClient.CompositeMapper = {\n  serializedName: \"UrlSigningKey\",\n  type: {\n    name: \"Composite\",\n    className: \"UrlSigningKeyParameters\",\n    uberParent: \"SecretParameters\",\n    polymorphicDiscriminator: SecretParameters.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...SecretParameters.type.modelProperties,\n      keyId: {\n        serializedName: \"keyId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      secretSource: {\n        serializedName: \"secretSource\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceReference\"\n        }\n      },\n      secretVersion: {\n        serializedName: \"secretVersion\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedCertificateParameters: coreClient.CompositeMapper = {\n  serializedName: \"ManagedCertificate\",\n  type: {\n    name: \"Composite\",\n    className: \"ManagedCertificateParameters\",\n    uberParent: \"SecretParameters\",\n    polymorphicDiscriminator: SecretParameters.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...SecretParameters.type.modelProperties,\n      subject: {\n        serializedName: \"subject\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      expirationDate: {\n        serializedName: \"expirationDate\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CustomerCertificateParameters: coreClient.CompositeMapper = {\n  serializedName: \"CustomerCertificate\",\n  type: {\n    name: \"Composite\",\n    className: \"CustomerCertificateParameters\",\n    uberParent: \"SecretParameters\",\n    polymorphicDiscriminator: SecretParameters.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...SecretParameters.type.modelProperties,\n      secretSource: {\n        serializedName: \"secretSource\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceReference\"\n        }\n      },\n      secretVersion: {\n        serializedName: \"secretVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      useLatestVersion: {\n        serializedName: \"useLatestVersion\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      subject: {\n        serializedName: \"subject\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      expirationDate: {\n        serializedName: \"expirationDate\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      certificateAuthority: {\n        serializedName: \"certificateAuthority\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      subjectAlternativeNames: {\n        serializedName: \"subjectAlternativeNames\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      thumbprint: {\n        serializedName: \"thumbprint\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureFirstPartyManagedCertificateParameters: coreClient.CompositeMapper = {\n  serializedName: \"AzureFirstPartyManagedCertificate\",\n  type: {\n    name: \"Composite\",\n    className: \"AzureFirstPartyManagedCertificateParameters\",\n    uberParent: \"SecretParameters\",\n    polymorphicDiscriminator: SecretParameters.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...SecretParameters.type.modelProperties\n    }\n  }\n};\n\nexport const EndpointProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EndpointProperties\",\n    modelProperties: {\n      ...EndpointPropertiesUpdateParameters.type.modelProperties,\n      hostName: {\n        serializedName: \"hostName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      origins: {\n        serializedName: \"origins\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeepCreatedOrigin\"\n            }\n          }\n        }\n      },\n      originGroups: {\n        serializedName: \"originGroups\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeepCreatedOriginGroup\"\n            }\n          }\n        }\n      },\n      customDomains: {\n        serializedName: \"customDomains\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeepCreatedCustomDomain\"\n            }\n          }\n        }\n      },\n      resourceState: {\n        serializedName: \"resourceState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OriginProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OriginProperties\",\n    modelProperties: {\n      ...OriginUpdatePropertiesParameters.type.modelProperties,\n      resourceState: {\n        serializedName: \"resourceState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      privateEndpointStatus: {\n        serializedName: \"privateEndpointStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OriginGroupProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OriginGroupProperties\",\n    modelProperties: {\n      ...OriginGroupUpdatePropertiesParameters.type.modelProperties,\n      resourceState: {\n        serializedName: \"resourceState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CdnManagedHttpsParameters: coreClient.CompositeMapper = {\n  serializedName: \"Cdn\",\n  type: {\n    name: \"Composite\",\n    className: \"CdnManagedHttpsParameters\",\n    uberParent: \"CustomDomainHttpsParameters\",\n    polymorphicDiscriminator:\n      CustomDomainHttpsParameters.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...CustomDomainHttpsParameters.type.modelProperties,\n      certificateSourceParameters: {\n        serializedName: \"certificateSourceParameters\",\n        type: {\n          name: \"Composite\",\n          className: \"CdnCertificateSourceParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const UserManagedHttpsParameters: coreClient.CompositeMapper = {\n  serializedName: \"AzureKeyVault\",\n  type: {\n    name: \"Composite\",\n    className: \"UserManagedHttpsParameters\",\n    uberParent: \"CustomDomainHttpsParameters\",\n    polymorphicDiscriminator:\n      CustomDomainHttpsParameters.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...CustomDomainHttpsParameters.type.modelProperties,\n      certificateSourceParameters: {\n        serializedName: \"certificateSourceParameters\",\n        type: {\n          name: \"Composite\",\n          className: \"KeyVaultCertificateSourceParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const RateLimitRule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RateLimitRule\",\n    modelProperties: {\n      ...CustomRule.type.modelProperties,\n      rateLimitThreshold: {\n        constraints: {\n          InclusiveMinimum: 0\n        },\n        serializedName: \"rateLimitThreshold\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      rateLimitDurationInMinutes: {\n        constraints: {\n          InclusiveMaximum: 60,\n          InclusiveMinimum: 0\n        },\n        serializedName: \"rateLimitDurationInMinutes\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedCertificate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedCertificate\",\n    modelProperties: {\n      ...Certificate.type.modelProperties\n    }\n  }\n};\n\nexport const CustomerCertificate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CustomerCertificate\",\n    modelProperties: {\n      ...Certificate.type.modelProperties,\n      secretSource: {\n        serializedName: \"secretSource\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceReference\"\n        }\n      },\n      secretVersion: {\n        serializedName: \"secretVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      certificateAuthority: {\n        serializedName: \"certificateAuthority\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      useLatestVersion: {\n        serializedName: \"useLatestVersion\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      subjectAlternativeNames: {\n        serializedName: \"subjectAlternativeNames\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      thumbprint: {\n        serializedName: \"thumbprint\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureFirstPartyManagedCertificate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AzureFirstPartyManagedCertificate\",\n    modelProperties: {\n      ...Certificate.type.modelProperties\n    }\n  }\n};\n\nexport const AFDDomain: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AFDDomain\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      profileName: {\n        serializedName: \"properties.profileName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tlsSettings: {\n        serializedName: \"properties.tlsSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"AFDDomainHttpsParameters\"\n        }\n      },\n      azureDnsZone: {\n        serializedName: \"properties.azureDnsZone\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceReference\"\n        }\n      },\n      preValidatedCustomDomainResourceId: {\n        serializedName: \"properties.preValidatedCustomDomainResourceId\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceReference\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      deploymentStatus: {\n        serializedName: \"properties.deploymentStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      domainValidationState: {\n        serializedName: \"properties.domainValidationState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      hostName: {\n        serializedName: \"properties.hostName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      validationProperties: {\n        serializedName: \"properties.validationProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"DomainValidationProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const AFDOriginGroup: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AFDOriginGroup\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      profileName: {\n        serializedName: \"properties.profileName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      loadBalancingSettings: {\n        serializedName: \"properties.loadBalancingSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"LoadBalancingSettingsParameters\"\n        }\n      },\n      healthProbeSettings: {\n        serializedName: \"properties.healthProbeSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"HealthProbeParameters\"\n        }\n      },\n      trafficRestorationTimeToHealedOrNewEndpointsInMinutes: {\n        constraints: {\n          InclusiveMaximum: 50,\n          InclusiveMinimum: 0\n        },\n        serializedName:\n          \"properties.trafficRestorationTimeToHealedOrNewEndpointsInMinutes\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      sessionAffinityState: {\n        serializedName: \"properties.sessionAffinityState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      deploymentStatus: {\n        serializedName: \"properties.deploymentStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AFDOrigin: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AFDOrigin\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      originGroupName: {\n        serializedName: \"properties.originGroupName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      azureOrigin: {\n        serializedName: \"properties.azureOrigin\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceReference\"\n        }\n      },\n      hostName: {\n        serializedName: \"properties.hostName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      httpPort: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"properties.httpPort\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      httpsPort: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"properties.httpsPort\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      originHostHeader: {\n        serializedName: \"properties.originHostHeader\",\n        type: {\n          name: \"String\"\n        }\n      },\n      priority: {\n        constraints: {\n          InclusiveMaximum: 5,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"properties.priority\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      weight: {\n        constraints: {\n          InclusiveMaximum: 1000,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"properties.weight\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      sharedPrivateLinkResource: {\n        serializedName: \"properties.sharedPrivateLinkResource\",\n        type: {\n          name: \"Composite\",\n          className: \"SharedPrivateLinkResourceProperties\"\n        }\n      },\n      enabledState: {\n        serializedName: \"properties.enabledState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      enforceCertificateNameCheck: {\n        defaultValue: true,\n        serializedName: \"properties.enforceCertificateNameCheck\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      deploymentStatus: {\n        serializedName: \"properties.deploymentStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Route: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Route\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      endpointName: {\n        serializedName: \"properties.endpointName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      customDomains: {\n        serializedName: \"properties.customDomains\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ActivatedResourceReference\"\n            }\n          }\n        }\n      },\n      originGroup: {\n        serializedName: \"properties.originGroup\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceReference\"\n        }\n      },\n      originPath: {\n        serializedName: \"properties.originPath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ruleSets: {\n        serializedName: \"properties.ruleSets\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceReference\"\n            }\n          }\n        }\n      },\n      supportedProtocols: {\n        serializedName: \"properties.supportedProtocols\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      patternsToMatch: {\n        serializedName: \"properties.patternsToMatch\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      cacheConfiguration: {\n        serializedName: \"properties.cacheConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"AfdRouteCacheConfiguration\"\n        }\n      },\n      forwardingProtocol: {\n        serializedName: \"properties.forwardingProtocol\",\n        type: {\n          name: \"String\"\n        }\n      },\n      linkToDefaultDomain: {\n        serializedName: \"properties.linkToDefaultDomain\",\n        type: {\n          name: \"String\"\n        }\n      },\n      httpsRedirect: {\n        serializedName: \"properties.httpsRedirect\",\n        type: {\n          name: \"String\"\n        }\n      },\n      enabledState: {\n        serializedName: \"properties.enabledState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      deploymentStatus: {\n        serializedName: \"properties.deploymentStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RuleSet: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RuleSet\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      deploymentStatus: {\n        serializedName: \"properties.deploymentStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      profileName: {\n        serializedName: \"properties.profileName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Rule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Rule\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      ruleSetName: {\n        serializedName: \"properties.ruleSetName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      order: {\n        serializedName: \"properties.order\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      conditions: {\n        serializedName: \"properties.conditions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeliveryRuleCondition\"\n            }\n          }\n        }\n      },\n      actions: {\n        serializedName: \"properties.actions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeliveryRuleActionAutoGenerated\"\n            }\n          }\n        }\n      },\n      matchProcessingBehavior: {\n        serializedName: \"properties.matchProcessingBehavior\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      deploymentStatus: {\n        serializedName: \"properties.deploymentStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SecurityPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SecurityPolicy\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      deploymentStatus: {\n        serializedName: \"properties.deploymentStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      profileName: {\n        serializedName: \"properties.profileName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      parameters: {\n        serializedName: \"properties.parameters\",\n        type: {\n          name: \"Composite\",\n          className: \"SecurityPolicyPropertiesParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const Secret: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Secret\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      deploymentStatus: {\n        serializedName: \"properties.deploymentStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      profileName: {\n        serializedName: \"properties.profileName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      parameters: {\n        serializedName: \"properties.parameters\",\n        type: {\n          name: \"Composite\",\n          className: \"SecretParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const Origin: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Origin\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      hostName: {\n        serializedName: \"properties.hostName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      httpPort: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"properties.httpPort\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      httpsPort: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"properties.httpsPort\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      originHostHeader: {\n        serializedName: \"properties.originHostHeader\",\n        type: {\n          name: \"String\"\n        }\n      },\n      priority: {\n        constraints: {\n          InclusiveMaximum: 5,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"properties.priority\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      weight: {\n        constraints: {\n          InclusiveMaximum: 1000,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"properties.weight\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      enabled: {\n        serializedName: \"properties.enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      privateLinkAlias: {\n        serializedName: \"properties.privateLinkAlias\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privateLinkResourceId: {\n        serializedName: \"properties.privateLinkResourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privateLinkLocation: {\n        serializedName: \"properties.privateLinkLocation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privateLinkApprovalMessage: {\n        serializedName: \"properties.privateLinkApprovalMessage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceState: {\n        serializedName: \"properties.resourceState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      privateEndpointStatus: {\n        serializedName: \"properties.privateEndpointStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OriginGroup: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OriginGroup\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      healthProbeSettings: {\n        serializedName: \"properties.healthProbeSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"HealthProbeParameters\"\n        }\n      },\n      origins: {\n        serializedName: \"properties.origins\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceReference\"\n            }\n          }\n        }\n      },\n      trafficRestorationTimeToHealedOrNewEndpointsInMinutes: {\n        constraints: {\n          InclusiveMaximum: 50,\n          InclusiveMinimum: 0\n        },\n        serializedName:\n          \"properties.trafficRestorationTimeToHealedOrNewEndpointsInMinutes\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      responseBasedOriginErrorDetectionSettings: {\n        serializedName: \"properties.responseBasedOriginErrorDetectionSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"ResponseBasedOriginErrorDetectionParameters\"\n        }\n      },\n      resourceState: {\n        serializedName: \"properties.resourceState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CustomDomain: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CustomDomain\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      hostName: {\n        serializedName: \"properties.hostName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceState: {\n        serializedName: \"properties.resourceState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      customHttpsProvisioningState: {\n        serializedName: \"properties.customHttpsProvisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      customHttpsProvisioningSubstate: {\n        serializedName: \"properties.customHttpsProvisioningSubstate\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      customHttpsParameters: {\n        serializedName: \"properties.customHttpsParameters\",\n        type: {\n          name: \"Composite\",\n          className: \"CustomDomainHttpsParameters\"\n        }\n      },\n      validationData: {\n        serializedName: \"properties.validationData\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EdgeNode: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EdgeNode\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      ipAddressGroups: {\n        serializedName: \"properties.ipAddressGroups\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"IpAddressGroup\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const AFDEndpoint: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AFDEndpoint\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      profileName: {\n        serializedName: \"properties.profileName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      enabledState: {\n        serializedName: \"properties.enabledState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      deploymentStatus: {\n        serializedName: \"properties.deploymentStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      hostName: {\n        serializedName: \"properties.hostName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      autoGeneratedDomainNameLabelScope: {\n        serializedName: \"properties.autoGeneratedDomainNameLabelScope\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Profile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Profile\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceState: {\n        serializedName: \"properties.resourceState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      frontDoorId: {\n        serializedName: \"properties.frontDoorId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      originResponseTimeoutSeconds: {\n        constraints: {\n          InclusiveMinimum: 16\n        },\n        serializedName: \"properties.originResponseTimeoutSeconds\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Endpoint: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Endpoint\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      originPath: {\n        serializedName: \"properties.originPath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentTypesToCompress: {\n        serializedName: \"properties.contentTypesToCompress\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      originHostHeader: {\n        serializedName: \"properties.originHostHeader\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isCompressionEnabled: {\n        serializedName: \"properties.isCompressionEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isHttpAllowed: {\n        serializedName: \"properties.isHttpAllowed\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isHttpsAllowed: {\n        serializedName: \"properties.isHttpsAllowed\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      queryStringCachingBehavior: {\n        serializedName: \"properties.queryStringCachingBehavior\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"IgnoreQueryString\",\n            \"BypassCaching\",\n            \"UseQueryString\",\n            \"NotSet\"\n          ]\n        }\n      },\n      optimizationType: {\n        serializedName: \"properties.optimizationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      probePath: {\n        serializedName: \"properties.probePath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      geoFilters: {\n        serializedName: \"properties.geoFilters\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GeoFilter\"\n            }\n          }\n        }\n      },\n      defaultOriginGroup: {\n        serializedName: \"properties.defaultOriginGroup\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceReference\"\n        }\n      },\n      urlSigningKeys: {\n        serializedName: \"properties.urlSigningKeys\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"UrlSigningKey\"\n            }\n          }\n        }\n      },\n      deliveryPolicy: {\n        serializedName: \"properties.deliveryPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"EndpointPropertiesUpdateParametersDeliveryPolicy\"\n        }\n      },\n      webApplicationFirewallPolicyLink: {\n        serializedName: \"properties.webApplicationFirewallPolicyLink\",\n        type: {\n          name: \"Composite\",\n          className:\n            \"EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink\"\n        }\n      },\n      hostName: {\n        serializedName: \"properties.hostName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      origins: {\n        serializedName: \"properties.origins\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeepCreatedOrigin\"\n            }\n          }\n        }\n      },\n      originGroups: {\n        serializedName: \"properties.originGroups\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeepCreatedOriginGroup\"\n            }\n          }\n        }\n      },\n      customDomains: {\n        serializedName: \"properties.customDomains\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeepCreatedCustomDomain\"\n            }\n          }\n        }\n      },\n      resourceState: {\n        serializedName: \"properties.resourceState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CdnWebApplicationFirewallPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CdnWebApplicationFirewallPolicy\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      policySettings: {\n        serializedName: \"properties.policySettings\",\n        type: {\n          name: \"Composite\",\n          className: \"PolicySettings\"\n        }\n      },\n      rateLimitRules: {\n        serializedName: \"properties.rateLimitRules\",\n        type: {\n          name: \"Composite\",\n          className: \"RateLimitRuleList\"\n        }\n      },\n      customRules: {\n        serializedName: \"properties.customRules\",\n        type: {\n          name: \"Composite\",\n          className: \"CustomRuleList\"\n        }\n      },\n      managedRules: {\n        serializedName: \"properties.managedRules\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedRuleSetList\"\n        }\n      },\n      endpointLinks: {\n        serializedName: \"properties.endpointLinks\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CdnEndpoint\"\n            }\n          }\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceState: {\n        serializedName: \"properties.resourceState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport let discriminators = {\n  DeliveryRuleCondition: DeliveryRuleCondition,\n  DeliveryRuleActionAutoGenerated: DeliveryRuleActionAutoGenerated,\n  SecurityPolicyPropertiesParameters: SecurityPolicyPropertiesParameters,\n  SecretParameters: SecretParameters,\n  CustomDomainHttpsParameters: CustomDomainHttpsParameters,\n  \"DeliveryRuleCondition.RemoteAddress\": DeliveryRuleRemoteAddressCondition,\n  \"DeliveryRuleCondition.RequestMethod\": DeliveryRuleRequestMethodCondition,\n  \"DeliveryRuleCondition.QueryString\": DeliveryRuleQueryStringCondition,\n  \"DeliveryRuleCondition.PostArgs\": DeliveryRulePostArgsCondition,\n  \"DeliveryRuleCondition.RequestUri\": DeliveryRuleRequestUriCondition,\n  \"DeliveryRuleCondition.RequestHeader\": DeliveryRuleRequestHeaderCondition,\n  \"DeliveryRuleCondition.RequestBody\": DeliveryRuleRequestBodyCondition,\n  \"DeliveryRuleCondition.RequestScheme\": DeliveryRuleRequestSchemeCondition,\n  \"DeliveryRuleCondition.UrlPath\": DeliveryRuleUrlPathCondition,\n  \"DeliveryRuleCondition.UrlFileExtension\": DeliveryRuleUrlFileExtensionCondition,\n  \"DeliveryRuleCondition.UrlFileName\": DeliveryRuleUrlFileNameCondition,\n  \"DeliveryRuleCondition.HttpVersion\": DeliveryRuleHttpVersionCondition,\n  \"DeliveryRuleCondition.Cookies\": DeliveryRuleCookiesCondition,\n  \"DeliveryRuleCondition.IsDevice\": DeliveryRuleIsDeviceCondition,\n  \"DeliveryRuleCondition.SocketAddr\": DeliveryRuleSocketAddrCondition,\n  \"DeliveryRuleCondition.ClientPort\": DeliveryRuleClientPortCondition,\n  \"DeliveryRuleCondition.ServerPort\": DeliveryRuleServerPortCondition,\n  \"DeliveryRuleCondition.HostName\": DeliveryRuleHostNameCondition,\n  \"DeliveryRuleCondition.SslProtocol\": DeliveryRuleSslProtocolCondition,\n  \"DeliveryRuleActionAutoGenerated.UrlRedirect\": UrlRedirectAction,\n  \"DeliveryRuleActionAutoGenerated.UrlSigning\": UrlSigningAction,\n  \"DeliveryRuleActionAutoGenerated.OriginGroupOverride\": OriginGroupOverrideAction,\n  \"DeliveryRuleActionAutoGenerated.UrlRewrite\": UrlRewriteAction,\n  \"DeliveryRuleActionAutoGenerated.ModifyRequestHeader\": DeliveryRuleRequestHeaderAction,\n  \"DeliveryRuleActionAutoGenerated.ModifyResponseHeader\": DeliveryRuleResponseHeaderAction,\n  \"DeliveryRuleActionAutoGenerated.CacheExpiration\": DeliveryRuleCacheExpirationAction,\n  \"DeliveryRuleActionAutoGenerated.CacheKeyQueryString\": DeliveryRuleCacheKeyQueryStringAction,\n  \"DeliveryRuleActionAutoGenerated.RouteConfigurationOverride\": DeliveryRuleRouteConfigurationOverrideAction,\n  \"SecurityPolicyPropertiesParameters.WebApplicationFirewall\": SecurityPolicyWebApplicationFirewallParameters,\n  \"SecretParameters.UrlSigningKey\": UrlSigningKeyParameters,\n  \"SecretParameters.ManagedCertificate\": ManagedCertificateParameters,\n  \"SecretParameters.CustomerCertificate\": CustomerCertificateParameters,\n  \"SecretParameters.AzureFirstPartyManagedCertificate\": AzureFirstPartyManagedCertificateParameters,\n  \"CustomDomainHttpsParameters.Cdn\": CdnManagedHttpsParameters,\n  \"CustomDomainHttpsParameters.AzureKeyVault\": UserManagedHttpsParameters\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  CheckEndpointNameAvailabilityInput as CheckEndpointNameAvailabilityInputMapper,\n  CheckNameAvailabilityInput as CheckNameAvailabilityInputMapper,\n  ValidateProbeInput as ValidateProbeInputMapper,\n  CheckHostNameAvailabilityInput as CheckHostNameAvailabilityInputMapper,\n  AFDDomain as AFDDomainMapper,\n  AFDDomainUpdateParameters as AFDDomainUpdateParametersMapper,\n  AFDEndpoint as AFDEndpointMapper,\n  AFDEndpointUpdateParameters as AFDEndpointUpdateParametersMapper,\n  AfdPurgeParameters as AfdPurgeParametersMapper,\n  ValidateCustomDomainInput as ValidateCustomDomainInputMapper,\n  AFDOriginGroup as AFDOriginGroupMapper,\n  AFDOriginGroupUpdateParameters as AFDOriginGroupUpdateParametersMapper,\n  AFDOrigin as AFDOriginMapper,\n  AFDOriginUpdateParameters as AFDOriginUpdateParametersMapper,\n  Route as RouteMapper,\n  RouteUpdateParameters as RouteUpdateParametersMapper,\n  Rule as RuleMapper,\n  RuleUpdateParameters as RuleUpdateParametersMapper,\n  SecurityPolicy as SecurityPolicyMapper,\n  SecurityPolicyUpdateParameters as SecurityPolicyUpdateParametersMapper,\n  Secret as SecretMapper,\n  ValidateSecretInput as ValidateSecretInputMapper,\n  Profile as ProfileMapper,\n  ProfileUpdateParameters as ProfileUpdateParametersMapper,\n  Endpoint as EndpointMapper,\n  EndpointUpdateParameters as EndpointUpdateParametersMapper,\n  PurgeParameters as PurgeParametersMapper,\n  LoadParameters as LoadParametersMapper,\n  Origin as OriginMapper,\n  OriginUpdateParameters as OriginUpdateParametersMapper,\n  OriginGroup as OriginGroupMapper,\n  OriginGroupUpdateParameters as OriginGroupUpdateParametersMapper,\n  CustomDomainParameters as CustomDomainParametersMapper,\n  CustomDomainHttpsParameters as CustomDomainHttpsParametersMapper,\n  CdnWebApplicationFirewallPolicy as CdnWebApplicationFirewallPolicyMapper,\n  CdnWebApplicationFirewallPolicyPatchParameters as CdnWebApplicationFirewallPolicyPatchParametersMapper\n} from \"../models/mappers\";\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const checkEndpointNameAvailabilityInput: OperationParameter = {\n  parameterPath: \"checkEndpointNameAvailabilityInput\",\n  mapper: CheckEndpointNameAvailabilityInputMapper\n};\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const subscriptionId: OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    serializedName: \"subscriptionId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const resourceGroupName: OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[-\\\\w\\\\._\\\\(\\\\)]+$\"),\n      MaxLength: 90,\n      MinLength: 1\n    },\n    serializedName: \"resourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2021-06-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const checkNameAvailabilityInput: OperationParameter = {\n  parameterPath: \"checkNameAvailabilityInput\",\n  mapper: CheckNameAvailabilityInputMapper\n};\n\nexport const validateProbeInput: OperationParameter = {\n  parameterPath: \"validateProbeInput\",\n  mapper: ValidateProbeInputMapper\n};\n\nexport const profileName: OperationURLParameter = {\n  parameterPath: \"profileName\",\n  mapper: {\n    serializedName: \"profileName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const checkHostNameAvailabilityInput: OperationParameter = {\n  parameterPath: \"checkHostNameAvailabilityInput\",\n  mapper: CheckHostNameAvailabilityInputMapper\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const customDomainName: OperationURLParameter = {\n  parameterPath: \"customDomainName\",\n  mapper: {\n    serializedName: \"customDomainName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const customDomain: OperationParameter = {\n  parameterPath: \"customDomain\",\n  mapper: AFDDomainMapper\n};\n\nexport const customDomainUpdateProperties: OperationParameter = {\n  parameterPath: \"customDomainUpdateProperties\",\n  mapper: AFDDomainUpdateParametersMapper\n};\n\nexport const endpointName: OperationURLParameter = {\n  parameterPath: \"endpointName\",\n  mapper: {\n    serializedName: \"endpointName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const endpoint: OperationParameter = {\n  parameterPath: \"endpoint\",\n  mapper: AFDEndpointMapper\n};\n\nexport const endpointUpdateProperties: OperationParameter = {\n  parameterPath: \"endpointUpdateProperties\",\n  mapper: AFDEndpointUpdateParametersMapper\n};\n\nexport const contents: OperationParameter = {\n  parameterPath: \"contents\",\n  mapper: AfdPurgeParametersMapper\n};\n\nexport const customDomainProperties: OperationParameter = {\n  parameterPath: \"customDomainProperties\",\n  mapper: ValidateCustomDomainInputMapper\n};\n\nexport const originGroupName: OperationURLParameter = {\n  parameterPath: \"originGroupName\",\n  mapper: {\n    serializedName: \"originGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const originGroup: OperationParameter = {\n  parameterPath: \"originGroup\",\n  mapper: AFDOriginGroupMapper\n};\n\nexport const originGroupUpdateProperties: OperationParameter = {\n  parameterPath: \"originGroupUpdateProperties\",\n  mapper: AFDOriginGroupUpdateParametersMapper\n};\n\nexport const originName: OperationURLParameter = {\n  parameterPath: \"originName\",\n  mapper: {\n    serializedName: \"originName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const origin: OperationParameter = {\n  parameterPath: \"origin\",\n  mapper: AFDOriginMapper\n};\n\nexport const originUpdateProperties: OperationParameter = {\n  parameterPath: \"originUpdateProperties\",\n  mapper: AFDOriginUpdateParametersMapper\n};\n\nexport const routeName: OperationURLParameter = {\n  parameterPath: \"routeName\",\n  mapper: {\n    serializedName: \"routeName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const route: OperationParameter = {\n  parameterPath: \"route\",\n  mapper: RouteMapper\n};\n\nexport const routeUpdateProperties: OperationParameter = {\n  parameterPath: \"routeUpdateProperties\",\n  mapper: RouteUpdateParametersMapper\n};\n\nexport const ruleSetName: OperationURLParameter = {\n  parameterPath: \"ruleSetName\",\n  mapper: {\n    serializedName: \"ruleSetName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const ruleName: OperationURLParameter = {\n  parameterPath: \"ruleName\",\n  mapper: {\n    serializedName: \"ruleName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const rule: OperationParameter = {\n  parameterPath: \"rule\",\n  mapper: RuleMapper\n};\n\nexport const ruleUpdateProperties: OperationParameter = {\n  parameterPath: \"ruleUpdateProperties\",\n  mapper: RuleUpdateParametersMapper\n};\n\nexport const securityPolicyName: OperationURLParameter = {\n  parameterPath: \"securityPolicyName\",\n  mapper: {\n    serializedName: \"securityPolicyName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const securityPolicy: OperationParameter = {\n  parameterPath: \"securityPolicy\",\n  mapper: SecurityPolicyMapper\n};\n\nexport const securityPolicyUpdateProperties: OperationParameter = {\n  parameterPath: \"securityPolicyUpdateProperties\",\n  mapper: SecurityPolicyUpdateParametersMapper\n};\n\nexport const secretName: OperationURLParameter = {\n  parameterPath: \"secretName\",\n  mapper: {\n    serializedName: \"secretName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const secret: OperationParameter = {\n  parameterPath: \"secret\",\n  mapper: SecretMapper\n};\n\nexport const validateSecretInput: OperationParameter = {\n  parameterPath: \"validateSecretInput\",\n  mapper: ValidateSecretInputMapper\n};\n\nexport const metrics: OperationQueryParameter = {\n  parameterPath: \"metrics\",\n  mapper: {\n    serializedName: \"metrics\",\n    required: true,\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  },\n  collectionFormat: \"Multi\"\n};\n\nexport const dateTimeBegin: OperationQueryParameter = {\n  parameterPath: \"dateTimeBegin\",\n  mapper: {\n    serializedName: \"dateTimeBegin\",\n    required: true,\n    type: {\n      name: \"DateTime\"\n    }\n  }\n};\n\nexport const dateTimeEnd: OperationQueryParameter = {\n  parameterPath: \"dateTimeEnd\",\n  mapper: {\n    serializedName: \"dateTimeEnd\",\n    required: true,\n    type: {\n      name: \"DateTime\"\n    }\n  }\n};\n\nexport const granularity: OperationQueryParameter = {\n  parameterPath: \"granularity\",\n  mapper: {\n    serializedName: \"granularity\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const groupBy: OperationQueryParameter = {\n  parameterPath: [\"options\", \"groupBy\"],\n  mapper: {\n    serializedName: \"groupBy\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  },\n  collectionFormat: \"Multi\"\n};\n\nexport const continents: OperationQueryParameter = {\n  parameterPath: [\"options\", \"continents\"],\n  mapper: {\n    serializedName: \"continents\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  },\n  collectionFormat: \"Multi\"\n};\n\nexport const countryOrRegions: OperationQueryParameter = {\n  parameterPath: [\"options\", \"countryOrRegions\"],\n  mapper: {\n    serializedName: \"countryOrRegions\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  },\n  collectionFormat: \"Multi\"\n};\n\nexport const customDomains: OperationQueryParameter = {\n  parameterPath: \"customDomains\",\n  mapper: {\n    serializedName: \"customDomains\",\n    required: true,\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  },\n  collectionFormat: \"Multi\"\n};\n\nexport const protocols: OperationQueryParameter = {\n  parameterPath: \"protocols\",\n  mapper: {\n    serializedName: \"protocols\",\n    required: true,\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  },\n  collectionFormat: \"Multi\"\n};\n\nexport const rankings: OperationQueryParameter = {\n  parameterPath: \"rankings\",\n  mapper: {\n    serializedName: \"rankings\",\n    required: true,\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  },\n  collectionFormat: \"Multi\"\n};\n\nexport const metrics1: OperationQueryParameter = {\n  parameterPath: \"metrics\",\n  mapper: {\n    serializedName: \"metrics\",\n    required: true,\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  },\n  collectionFormat: \"Multi\"\n};\n\nexport const maxRanking: OperationQueryParameter = {\n  parameterPath: \"maxRanking\",\n  mapper: {\n    serializedName: \"maxRanking\",\n    required: true,\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const customDomains1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"customDomains\"],\n  mapper: {\n    serializedName: \"customDomains\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  },\n  collectionFormat: \"Multi\"\n};\n\nexport const metrics2: OperationQueryParameter = {\n  parameterPath: \"metrics\",\n  mapper: {\n    serializedName: \"metrics\",\n    required: true,\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  },\n  collectionFormat: \"Multi\"\n};\n\nexport const granularity1: OperationQueryParameter = {\n  parameterPath: \"granularity\",\n  mapper: {\n    serializedName: \"granularity\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const actions: OperationQueryParameter = {\n  parameterPath: [\"options\", \"actions\"],\n  mapper: {\n    serializedName: \"actions\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  },\n  collectionFormat: \"Multi\"\n};\n\nexport const groupBy1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"groupBy\"],\n  mapper: {\n    serializedName: \"groupBy\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  },\n  collectionFormat: \"Multi\"\n};\n\nexport const ruleTypes: OperationQueryParameter = {\n  parameterPath: [\"options\", \"ruleTypes\"],\n  mapper: {\n    serializedName: \"ruleTypes\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  },\n  collectionFormat: \"Multi\"\n};\n\nexport const rankings1: OperationQueryParameter = {\n  parameterPath: \"rankings\",\n  mapper: {\n    serializedName: \"rankings\",\n    required: true,\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  },\n  collectionFormat: \"Multi\"\n};\n\nexport const profile: OperationParameter = {\n  parameterPath: \"profile\",\n  mapper: ProfileMapper\n};\n\nexport const profileUpdateParameters: OperationParameter = {\n  parameterPath: \"profileUpdateParameters\",\n  mapper: ProfileUpdateParametersMapper\n};\n\nexport const endpoint1: OperationParameter = {\n  parameterPath: \"endpoint\",\n  mapper: EndpointMapper\n};\n\nexport const endpointUpdateProperties1: OperationParameter = {\n  parameterPath: \"endpointUpdateProperties\",\n  mapper: EndpointUpdateParametersMapper\n};\n\nexport const contentFilePaths: OperationParameter = {\n  parameterPath: \"contentFilePaths\",\n  mapper: PurgeParametersMapper\n};\n\nexport const contentFilePaths1: OperationParameter = {\n  parameterPath: \"contentFilePaths\",\n  mapper: LoadParametersMapper\n};\n\nexport const origin1: OperationParameter = {\n  parameterPath: \"origin\",\n  mapper: OriginMapper\n};\n\nexport const originUpdateProperties1: OperationParameter = {\n  parameterPath: \"originUpdateProperties\",\n  mapper: OriginUpdateParametersMapper\n};\n\nexport const originGroup1: OperationParameter = {\n  parameterPath: \"originGroup\",\n  mapper: OriginGroupMapper\n};\n\nexport const originGroupUpdateProperties1: OperationParameter = {\n  parameterPath: \"originGroupUpdateProperties\",\n  mapper: OriginGroupUpdateParametersMapper\n};\n\nexport const customDomainProperties1: OperationParameter = {\n  parameterPath: \"customDomainProperties\",\n  mapper: CustomDomainParametersMapper\n};\n\nexport const customDomainHttpsParameters: OperationParameter = {\n  parameterPath: [\"options\", \"customDomainHttpsParameters\"],\n  mapper: CustomDomainHttpsParametersMapper\n};\n\nexport const resourceGroupName1: OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-zA-Z0-9_\\\\-\\\\(\\\\)\\\\.]*[^\\\\.]$\"),\n      MaxLength: 80,\n      MinLength: 1\n    },\n    serializedName: \"resourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const policyName: OperationURLParameter = {\n  parameterPath: \"policyName\",\n  mapper: {\n    constraints: {\n      MaxLength: 128\n    },\n    serializedName: \"policyName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const cdnWebApplicationFirewallPolicy: OperationParameter = {\n  parameterPath: \"cdnWebApplicationFirewallPolicy\",\n  mapper: CdnWebApplicationFirewallPolicyMapper\n};\n\nexport const cdnWebApplicationFirewallPolicyPatchParameters: OperationParameter = {\n  parameterPath: \"cdnWebApplicationFirewallPolicyPatchParameters\",\n  mapper: CdnWebApplicationFirewallPolicyPatchParametersMapper\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { AfdProfiles } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CdnManagementClient } from \"../cdnManagementClient\";\nimport {\n  Usage,\n  AfdProfilesListResourceUsageNextOptionalParams,\n  AfdProfilesListResourceUsageOptionalParams,\n  AfdProfilesListResourceUsageResponse,\n  CheckHostNameAvailabilityInput,\n  AfdProfilesCheckHostNameAvailabilityOptionalParams,\n  AfdProfilesCheckHostNameAvailabilityResponse,\n  AfdProfilesListResourceUsageNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing AfdProfiles operations. */\nexport class AfdProfilesImpl implements AfdProfiles {\n  private readonly client: CdnManagementClient;\n\n  /**\n   * Initialize a new instance of the class AfdProfiles class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CdnManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Checks the quota and actual usage of AzureFrontDoor endpoints under the given CDN profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile\n   *                    which is unique within the resource group.\n   * @param options The options parameters.\n   */\n  public listResourceUsage(\n    resourceGroupName: string,\n    profileName: string,\n    options?: AfdProfilesListResourceUsageOptionalParams\n  ): PagedAsyncIterableIterator<Usage> {\n    const iter = this.listResourceUsagePagingAll(\n      resourceGroupName,\n      profileName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listResourceUsagePagingPage(\n          resourceGroupName,\n          profileName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listResourceUsagePagingPage(\n    resourceGroupName: string,\n    profileName: string,\n    options?: AfdProfilesListResourceUsageOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Usage[]> {\n    let result: AfdProfilesListResourceUsageResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listResourceUsage(\n        resourceGroupName,\n        profileName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listResourceUsageNext(\n        resourceGroupName,\n        profileName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listResourceUsagePagingAll(\n    resourceGroupName: string,\n    profileName: string,\n    options?: AfdProfilesListResourceUsageOptionalParams\n  ): AsyncIterableIterator<Usage> {\n    for await (const page of this.listResourceUsagePagingPage(\n      resourceGroupName,\n      profileName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Checks the quota and actual usage of AzureFrontDoor endpoints under the given CDN profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile\n   *                    which is unique within the resource group.\n   * @param options The options parameters.\n   */\n  private _listResourceUsage(\n    resourceGroupName: string,\n    profileName: string,\n    options?: AfdProfilesListResourceUsageOptionalParams\n  ): Promise<AfdProfilesListResourceUsageResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, options },\n      listResourceUsageOperationSpec\n    );\n  }\n\n  /**\n   * Check the name availability of a host name.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile\n   *                    which is unique within the resource group.\n   * @param checkHostNameAvailabilityInput Custom domain to be validated.\n   * @param options The options parameters.\n   */\n  checkHostNameAvailability(\n    resourceGroupName: string,\n    profileName: string,\n    checkHostNameAvailabilityInput: CheckHostNameAvailabilityInput,\n    options?: AfdProfilesCheckHostNameAvailabilityOptionalParams\n  ): Promise<AfdProfilesCheckHostNameAvailabilityResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        profileName,\n        checkHostNameAvailabilityInput,\n        options\n      },\n      checkHostNameAvailabilityOperationSpec\n    );\n  }\n\n  /**\n   * ListResourceUsageNext\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile\n   *                    which is unique within the resource group.\n   * @param nextLink The nextLink from the previous successful call to the ListResourceUsage method.\n   * @param options The options parameters.\n   */\n  private _listResourceUsageNext(\n    resourceGroupName: string,\n    profileName: string,\n    nextLink: string,\n    options?: AfdProfilesListResourceUsageNextOptionalParams\n  ): Promise<AfdProfilesListResourceUsageNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, nextLink, options },\n      listResourceUsageNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listResourceUsageOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/usages\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UsagesListResult\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst checkHostNameAvailabilityOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/checkHostNameAvailability\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CheckNameAvailabilityOutput\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  requestBody: Parameters.checkHostNameAvailabilityInput,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst listResourceUsageNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UsagesListResult\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { LongRunningOperation, LroResponse } from \"@azure/core-lro\";\n\nexport class LroImpl<T> implements LongRunningOperation<T> {\n  constructor(\n    private sendOperationFn: (args: any, spec: any) => Promise<LroResponse<T>>,\n    private args: Record<string, unknown>,\n    private spec: {\n      readonly requestBody?: unknown;\n      readonly path?: string;\n      readonly httpMethod: string;\n    } & Record<string, any>,\n    public requestPath: string = spec.path!,\n    public requestMethod: string = spec.httpMethod\n  ) {}\n  public async sendInitialRequest(): Promise<LroResponse<T>> {\n    return this.sendOperationFn(this.args, this.spec);\n  }\n  public async sendPollRequest(path: string): Promise<LroResponse<T>> {\n    const { requestBody, ...restSpec } = this.spec;\n    return this.sendOperationFn(this.args, {\n      ...restSpec,\n      path,\n      httpMethod: \"GET\"\n    });\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { AfdCustomDomains } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CdnManagementClient } from \"../cdnManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  AFDDomain,\n  AfdCustomDomainsListByProfileNextOptionalParams,\n  AfdCustomDomainsListByProfileOptionalParams,\n  AfdCustomDomainsListByProfileResponse,\n  AfdCustomDomainsGetOptionalParams,\n  AfdCustomDomainsGetResponse,\n  AfdCustomDomainsCreateOptionalParams,\n  AfdCustomDomainsCreateResponse,\n  AFDDomainUpdateParameters,\n  AfdCustomDomainsUpdateOptionalParams,\n  AfdCustomDomainsUpdateResponse,\n  AfdCustomDomainsDeleteOptionalParams,\n  AfdCustomDomainsRefreshValidationTokenOptionalParams,\n  AfdCustomDomainsListByProfileNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing AfdCustomDomains operations. */\nexport class AfdCustomDomainsImpl implements AfdCustomDomains {\n  private readonly client: CdnManagementClient;\n\n  /**\n   * Initialize a new instance of the class AfdCustomDomains class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CdnManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists existing AzureFrontDoor domains.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile or CDN\n   *                    profile which is unique within the resource group.\n   * @param options The options parameters.\n   */\n  public listByProfile(\n    resourceGroupName: string,\n    profileName: string,\n    options?: AfdCustomDomainsListByProfileOptionalParams\n  ): PagedAsyncIterableIterator<AFDDomain> {\n    const iter = this.listByProfilePagingAll(\n      resourceGroupName,\n      profileName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByProfilePagingPage(\n          resourceGroupName,\n          profileName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByProfilePagingPage(\n    resourceGroupName: string,\n    profileName: string,\n    options?: AfdCustomDomainsListByProfileOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<AFDDomain[]> {\n    let result: AfdCustomDomainsListByProfileResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByProfile(\n        resourceGroupName,\n        profileName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByProfileNext(\n        resourceGroupName,\n        profileName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByProfilePagingAll(\n    resourceGroupName: string,\n    profileName: string,\n    options?: AfdCustomDomainsListByProfileOptionalParams\n  ): AsyncIterableIterator<AFDDomain> {\n    for await (const page of this.listByProfilePagingPage(\n      resourceGroupName,\n      profileName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists existing AzureFrontDoor domains.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile or CDN\n   *                    profile which is unique within the resource group.\n   * @param options The options parameters.\n   */\n  private _listByProfile(\n    resourceGroupName: string,\n    profileName: string,\n    options?: AfdCustomDomainsListByProfileOptionalParams\n  ): Promise<AfdCustomDomainsListByProfileResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, options },\n      listByProfileOperationSpec\n    );\n  }\n\n  /**\n   * Gets an existing AzureFrontDoor domain with the specified domain name under the specified\n   * subscription, resource group and profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param customDomainName Name of the domain under the profile which is unique globally.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    profileName: string,\n    customDomainName: string,\n    options?: AfdCustomDomainsGetOptionalParams\n  ): Promise<AfdCustomDomainsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, customDomainName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates a new domain within the specified profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param customDomainName Name of the domain under the profile which is unique globally\n   * @param customDomain Domain properties\n   * @param options The options parameters.\n   */\n  async beginCreate(\n    resourceGroupName: string,\n    profileName: string,\n    customDomainName: string,\n    customDomain: AFDDomain,\n    options?: AfdCustomDomainsCreateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<AfdCustomDomainsCreateResponse>,\n      AfdCustomDomainsCreateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<AfdCustomDomainsCreateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        profileName,\n        customDomainName,\n        customDomain,\n        options\n      },\n      createOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a new domain within the specified profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param customDomainName Name of the domain under the profile which is unique globally\n   * @param customDomain Domain properties\n   * @param options The options parameters.\n   */\n  async beginCreateAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    customDomainName: string,\n    customDomain: AFDDomain,\n    options?: AfdCustomDomainsCreateOptionalParams\n  ): Promise<AfdCustomDomainsCreateResponse> {\n    const poller = await this.beginCreate(\n      resourceGroupName,\n      profileName,\n      customDomainName,\n      customDomain,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates an existing domain within a profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param customDomainName Name of the domain under the profile which is unique globally\n   * @param customDomainUpdateProperties Domain properties\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    profileName: string,\n    customDomainName: string,\n    customDomainUpdateProperties: AFDDomainUpdateParameters,\n    options?: AfdCustomDomainsUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<AfdCustomDomainsUpdateResponse>,\n      AfdCustomDomainsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<AfdCustomDomainsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        profileName,\n        customDomainName,\n        customDomainUpdateProperties,\n        options\n      },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates an existing domain within a profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param customDomainName Name of the domain under the profile which is unique globally\n   * @param customDomainUpdateProperties Domain properties\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    customDomainName: string,\n    customDomainUpdateProperties: AFDDomainUpdateParameters,\n    options?: AfdCustomDomainsUpdateOptionalParams\n  ): Promise<AfdCustomDomainsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      profileName,\n      customDomainName,\n      customDomainUpdateProperties,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes an existing AzureFrontDoor domain with the specified domain name under the specified\n   * subscription, resource group and profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param customDomainName Name of the domain under the profile which is unique globally.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    profileName: string,\n    customDomainName: string,\n    options?: AfdCustomDomainsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, profileName, customDomainName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes an existing AzureFrontDoor domain with the specified domain name under the specified\n   * subscription, resource group and profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param customDomainName Name of the domain under the profile which is unique globally.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    customDomainName: string,\n    options?: AfdCustomDomainsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      profileName,\n      customDomainName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates the domain validation token.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param customDomainName Name of the domain under the profile which is unique globally.\n   * @param options The options parameters.\n   */\n  async beginRefreshValidationToken(\n    resourceGroupName: string,\n    profileName: string,\n    customDomainName: string,\n    options?: AfdCustomDomainsRefreshValidationTokenOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, profileName, customDomainName, options },\n      refreshValidationTokenOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates the domain validation token.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param customDomainName Name of the domain under the profile which is unique globally.\n   * @param options The options parameters.\n   */\n  async beginRefreshValidationTokenAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    customDomainName: string,\n    options?: AfdCustomDomainsRefreshValidationTokenOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginRefreshValidationToken(\n      resourceGroupName,\n      profileName,\n      customDomainName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByProfileNext\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile or CDN\n   *                    profile which is unique within the resource group.\n   * @param nextLink The nextLink from the previous successful call to the ListByProfile method.\n   * @param options The options parameters.\n   */\n  private _listByProfileNext(\n    resourceGroupName: string,\n    profileName: string,\n    nextLink: string,\n    options?: AfdCustomDomainsListByProfileNextOptionalParams\n  ): Promise<AfdCustomDomainsListByProfileNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, nextLink, options },\n      listByProfileNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByProfileOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/customDomains\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AFDDomainListResult\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/customDomains/{customDomainName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AFDDomain\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.customDomainName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/customDomains/{customDomainName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AFDDomain\n    },\n    201: {\n      bodyMapper: Mappers.AFDDomain\n    },\n    202: {\n      bodyMapper: Mappers.AFDDomain\n    },\n    204: {\n      bodyMapper: Mappers.AFDDomain\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  requestBody: Parameters.customDomain,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.customDomainName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/customDomains/{customDomainName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AFDDomain\n    },\n    201: {\n      bodyMapper: Mappers.AFDDomain\n    },\n    202: {\n      bodyMapper: Mappers.AFDDomain\n    },\n    204: {\n      bodyMapper: Mappers.AFDDomain\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  requestBody: Parameters.customDomainUpdateProperties,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.customDomainName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/customDomains/{customDomainName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.customDomainName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst refreshValidationTokenOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/customDomains/{customDomainName}/refreshValidationToken\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.customDomainName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByProfileNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AFDDomainListResult\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { AfdEndpoints } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CdnManagementClient } from \"../cdnManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  AFDEndpoint,\n  AfdEndpointsListByProfileNextOptionalParams,\n  AfdEndpointsListByProfileOptionalParams,\n  AfdEndpointsListByProfileResponse,\n  Usage,\n  AfdEndpointsListResourceUsageNextOptionalParams,\n  AfdEndpointsListResourceUsageOptionalParams,\n  AfdEndpointsListResourceUsageResponse,\n  AfdEndpointsGetOptionalParams,\n  AfdEndpointsGetResponse,\n  AfdEndpointsCreateOptionalParams,\n  AfdEndpointsCreateResponse,\n  AFDEndpointUpdateParameters,\n  AfdEndpointsUpdateOptionalParams,\n  AfdEndpointsUpdateResponse,\n  AfdEndpointsDeleteOptionalParams,\n  AfdPurgeParameters,\n  AfdEndpointsPurgeContentOptionalParams,\n  ValidateCustomDomainInput,\n  AfdEndpointsValidateCustomDomainOptionalParams,\n  AfdEndpointsValidateCustomDomainResponse,\n  AfdEndpointsListByProfileNextResponse,\n  AfdEndpointsListResourceUsageNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing AfdEndpoints operations. */\nexport class AfdEndpointsImpl implements AfdEndpoints {\n  private readonly client: CdnManagementClient;\n\n  /**\n   * Initialize a new instance of the class AfdEndpoints class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CdnManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists existing AzureFrontDoor endpoints.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param options The options parameters.\n   */\n  public listByProfile(\n    resourceGroupName: string,\n    profileName: string,\n    options?: AfdEndpointsListByProfileOptionalParams\n  ): PagedAsyncIterableIterator<AFDEndpoint> {\n    const iter = this.listByProfilePagingAll(\n      resourceGroupName,\n      profileName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByProfilePagingPage(\n          resourceGroupName,\n          profileName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByProfilePagingPage(\n    resourceGroupName: string,\n    profileName: string,\n    options?: AfdEndpointsListByProfileOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<AFDEndpoint[]> {\n    let result: AfdEndpointsListByProfileResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByProfile(\n        resourceGroupName,\n        profileName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByProfileNext(\n        resourceGroupName,\n        profileName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByProfilePagingAll(\n    resourceGroupName: string,\n    profileName: string,\n    options?: AfdEndpointsListByProfileOptionalParams\n  ): AsyncIterableIterator<AFDEndpoint> {\n    for await (const page of this.listByProfilePagingPage(\n      resourceGroupName,\n      profileName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Checks the quota and actual usage of the given AzureFrontDoor endpoint under the given CDN profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param options The options parameters.\n   */\n  public listResourceUsage(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    options?: AfdEndpointsListResourceUsageOptionalParams\n  ): PagedAsyncIterableIterator<Usage> {\n    const iter = this.listResourceUsagePagingAll(\n      resourceGroupName,\n      profileName,\n      endpointName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listResourceUsagePagingPage(\n          resourceGroupName,\n          profileName,\n          endpointName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listResourceUsagePagingPage(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    options?: AfdEndpointsListResourceUsageOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Usage[]> {\n    let result: AfdEndpointsListResourceUsageResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listResourceUsage(\n        resourceGroupName,\n        profileName,\n        endpointName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listResourceUsageNext(\n        resourceGroupName,\n        profileName,\n        endpointName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listResourceUsagePagingAll(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    options?: AfdEndpointsListResourceUsageOptionalParams\n  ): AsyncIterableIterator<Usage> {\n    for await (const page of this.listResourceUsagePagingPage(\n      resourceGroupName,\n      profileName,\n      endpointName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists existing AzureFrontDoor endpoints.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param options The options parameters.\n   */\n  private _listByProfile(\n    resourceGroupName: string,\n    profileName: string,\n    options?: AfdEndpointsListByProfileOptionalParams\n  ): Promise<AfdEndpointsListByProfileResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, options },\n      listByProfileOperationSpec\n    );\n  }\n\n  /**\n   * Gets an existing AzureFrontDoor endpoint with the specified endpoint name under the specified\n   * subscription, resource group and profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    options?: AfdEndpointsGetOptionalParams\n  ): Promise<AfdEndpointsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, endpointName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates a new AzureFrontDoor endpoint with the specified endpoint name under the specified\n   * subscription, resource group and profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param endpoint Endpoint properties\n   * @param options The options parameters.\n   */\n  async beginCreate(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    endpoint: AFDEndpoint,\n    options?: AfdEndpointsCreateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<AfdEndpointsCreateResponse>,\n      AfdEndpointsCreateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<AfdEndpointsCreateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, profileName, endpointName, endpoint, options },\n      createOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a new AzureFrontDoor endpoint with the specified endpoint name under the specified\n   * subscription, resource group and profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param endpoint Endpoint properties\n   * @param options The options parameters.\n   */\n  async beginCreateAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    endpoint: AFDEndpoint,\n    options?: AfdEndpointsCreateOptionalParams\n  ): Promise<AfdEndpointsCreateResponse> {\n    const poller = await this.beginCreate(\n      resourceGroupName,\n      profileName,\n      endpointName,\n      endpoint,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates an existing AzureFrontDoor endpoint with the specified endpoint name under the specified\n   * subscription, resource group and profile. Only tags can be updated after creating an endpoint. To\n   * update origins, use the Update Origin operation. To update origin groups, use the Update Origin\n   * group operation. To update domains, use the Update Custom Domain operation.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param endpointUpdateProperties Endpoint update properties\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    endpointUpdateProperties: AFDEndpointUpdateParameters,\n    options?: AfdEndpointsUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<AfdEndpointsUpdateResponse>,\n      AfdEndpointsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<AfdEndpointsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        profileName,\n        endpointName,\n        endpointUpdateProperties,\n        options\n      },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates an existing AzureFrontDoor endpoint with the specified endpoint name under the specified\n   * subscription, resource group and profile. Only tags can be updated after creating an endpoint. To\n   * update origins, use the Update Origin operation. To update origin groups, use the Update Origin\n   * group operation. To update domains, use the Update Custom Domain operation.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param endpointUpdateProperties Endpoint update properties\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    endpointUpdateProperties: AFDEndpointUpdateParameters,\n    options?: AfdEndpointsUpdateOptionalParams\n  ): Promise<AfdEndpointsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      profileName,\n      endpointName,\n      endpointUpdateProperties,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes an existing AzureFrontDoor endpoint with the specified endpoint name under the specified\n   * subscription, resource group and profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    options?: AfdEndpointsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, profileName, endpointName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes an existing AzureFrontDoor endpoint with the specified endpoint name under the specified\n   * subscription, resource group and profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    options?: AfdEndpointsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      profileName,\n      endpointName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Removes a content from AzureFrontDoor.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param contents The list of paths to the content and the list of linked domains to be purged. Path\n   *                 can be a full URL, e.g. '/pictures/city.png' which removes a single file, or a directory with a\n   *                 wildcard, e.g. '/pictures/*' which removes all folders and files in the directory.\n   * @param options The options parameters.\n   */\n  async beginPurgeContent(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    contents: AfdPurgeParameters,\n    options?: AfdEndpointsPurgeContentOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, profileName, endpointName, contents, options },\n      purgeContentOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Removes a content from AzureFrontDoor.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param contents The list of paths to the content and the list of linked domains to be purged. Path\n   *                 can be a full URL, e.g. '/pictures/city.png' which removes a single file, or a directory with a\n   *                 wildcard, e.g. '/pictures/*' which removes all folders and files in the directory.\n   * @param options The options parameters.\n   */\n  async beginPurgeContentAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    contents: AfdPurgeParameters,\n    options?: AfdEndpointsPurgeContentOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginPurgeContent(\n      resourceGroupName,\n      profileName,\n      endpointName,\n      contents,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Checks the quota and actual usage of the given AzureFrontDoor endpoint under the given CDN profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param options The options parameters.\n   */\n  private _listResourceUsage(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    options?: AfdEndpointsListResourceUsageOptionalParams\n  ): Promise<AfdEndpointsListResourceUsageResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, endpointName, options },\n      listResourceUsageOperationSpec\n    );\n  }\n\n  /**\n   * Validates the custom domain mapping to ensure it maps to the correct CDN endpoint in DNS.This api\n   * isn't work for apex domain.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param customDomainProperties Custom domain to be validated.\n   * @param options The options parameters.\n   */\n  validateCustomDomain(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    customDomainProperties: ValidateCustomDomainInput,\n    options?: AfdEndpointsValidateCustomDomainOptionalParams\n  ): Promise<AfdEndpointsValidateCustomDomainResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        profileName,\n        endpointName,\n        customDomainProperties,\n        options\n      },\n      validateCustomDomainOperationSpec\n    );\n  }\n\n  /**\n   * ListByProfileNext\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param nextLink The nextLink from the previous successful call to the ListByProfile method.\n   * @param options The options parameters.\n   */\n  private _listByProfileNext(\n    resourceGroupName: string,\n    profileName: string,\n    nextLink: string,\n    options?: AfdEndpointsListByProfileNextOptionalParams\n  ): Promise<AfdEndpointsListByProfileNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, nextLink, options },\n      listByProfileNextOperationSpec\n    );\n  }\n\n  /**\n   * ListResourceUsageNext\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param nextLink The nextLink from the previous successful call to the ListResourceUsage method.\n   * @param options The options parameters.\n   */\n  private _listResourceUsageNext(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    nextLink: string,\n    options?: AfdEndpointsListResourceUsageNextOptionalParams\n  ): Promise<AfdEndpointsListResourceUsageNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, endpointName, nextLink, options },\n      listResourceUsageNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByProfileOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/afdEndpoints\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AFDEndpointListResult\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/afdEndpoints/{endpointName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AFDEndpoint\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/afdEndpoints/{endpointName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AFDEndpoint\n    },\n    201: {\n      bodyMapper: Mappers.AFDEndpoint\n    },\n    202: {\n      bodyMapper: Mappers.AFDEndpoint\n    },\n    204: {\n      bodyMapper: Mappers.AFDEndpoint\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  requestBody: Parameters.endpoint,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/afdEndpoints/{endpointName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AFDEndpoint\n    },\n    201: {\n      bodyMapper: Mappers.AFDEndpoint\n    },\n    202: {\n      bodyMapper: Mappers.AFDEndpoint\n    },\n    204: {\n      bodyMapper: Mappers.AFDEndpoint\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  requestBody: Parameters.endpointUpdateProperties,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/afdEndpoints/{endpointName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst purgeContentOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/afdEndpoints/{endpointName}/purge\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  requestBody: Parameters.contents,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst listResourceUsageOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/afdEndpoints/{endpointName}/usages\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UsagesListResult\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst validateCustomDomainOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/afdEndpoints/{endpointName}/validateCustomDomain\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ValidateCustomDomainOutput\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  requestBody: Parameters.customDomainProperties,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst listByProfileNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AFDEndpointListResult\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listResourceUsageNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UsagesListResult\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.nextLink,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { AfdOriginGroups } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CdnManagementClient } from \"../cdnManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  AFDOriginGroup,\n  AfdOriginGroupsListByProfileNextOptionalParams,\n  AfdOriginGroupsListByProfileOptionalParams,\n  AfdOriginGroupsListByProfileResponse,\n  Usage,\n  AfdOriginGroupsListResourceUsageNextOptionalParams,\n  AfdOriginGroupsListResourceUsageOptionalParams,\n  AfdOriginGroupsListResourceUsageResponse,\n  AfdOriginGroupsGetOptionalParams,\n  AfdOriginGroupsGetResponse,\n  AfdOriginGroupsCreateOptionalParams,\n  AfdOriginGroupsCreateResponse,\n  AFDOriginGroupUpdateParameters,\n  AfdOriginGroupsUpdateOptionalParams,\n  AfdOriginGroupsUpdateResponse,\n  AfdOriginGroupsDeleteOptionalParams,\n  AfdOriginGroupsListByProfileNextResponse,\n  AfdOriginGroupsListResourceUsageNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing AfdOriginGroups operations. */\nexport class AfdOriginGroupsImpl implements AfdOriginGroups {\n  private readonly client: CdnManagementClient;\n\n  /**\n   * Initialize a new instance of the class AfdOriginGroups class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CdnManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the existing origin groups within a profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param options The options parameters.\n   */\n  public listByProfile(\n    resourceGroupName: string,\n    profileName: string,\n    options?: AfdOriginGroupsListByProfileOptionalParams\n  ): PagedAsyncIterableIterator<AFDOriginGroup> {\n    const iter = this.listByProfilePagingAll(\n      resourceGroupName,\n      profileName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByProfilePagingPage(\n          resourceGroupName,\n          profileName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByProfilePagingPage(\n    resourceGroupName: string,\n    profileName: string,\n    options?: AfdOriginGroupsListByProfileOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<AFDOriginGroup[]> {\n    let result: AfdOriginGroupsListByProfileResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByProfile(\n        resourceGroupName,\n        profileName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByProfileNext(\n        resourceGroupName,\n        profileName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByProfilePagingAll(\n    resourceGroupName: string,\n    profileName: string,\n    options?: AfdOriginGroupsListByProfileOptionalParams\n  ): AsyncIterableIterator<AFDOriginGroup> {\n    for await (const page of this.listByProfilePagingPage(\n      resourceGroupName,\n      profileName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Checks the quota and actual usage of the given AzureFrontDoor origin group under the given CDN\n   * profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param originGroupName Name of the origin group which is unique within the endpoint.\n   * @param options The options parameters.\n   */\n  public listResourceUsage(\n    resourceGroupName: string,\n    profileName: string,\n    originGroupName: string,\n    options?: AfdOriginGroupsListResourceUsageOptionalParams\n  ): PagedAsyncIterableIterator<Usage> {\n    const iter = this.listResourceUsagePagingAll(\n      resourceGroupName,\n      profileName,\n      originGroupName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listResourceUsagePagingPage(\n          resourceGroupName,\n          profileName,\n          originGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listResourceUsagePagingPage(\n    resourceGroupName: string,\n    profileName: string,\n    originGroupName: string,\n    options?: AfdOriginGroupsListResourceUsageOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Usage[]> {\n    let result: AfdOriginGroupsListResourceUsageResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listResourceUsage(\n        resourceGroupName,\n        profileName,\n        originGroupName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listResourceUsageNext(\n        resourceGroupName,\n        profileName,\n        originGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listResourceUsagePagingAll(\n    resourceGroupName: string,\n    profileName: string,\n    originGroupName: string,\n    options?: AfdOriginGroupsListResourceUsageOptionalParams\n  ): AsyncIterableIterator<Usage> {\n    for await (const page of this.listResourceUsagePagingPage(\n      resourceGroupName,\n      profileName,\n      originGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the existing origin groups within a profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param options The options parameters.\n   */\n  private _listByProfile(\n    resourceGroupName: string,\n    profileName: string,\n    options?: AfdOriginGroupsListByProfileOptionalParams\n  ): Promise<AfdOriginGroupsListByProfileResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, options },\n      listByProfileOperationSpec\n    );\n  }\n\n  /**\n   * Gets an existing origin group within a profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param originGroupName Name of the origin group which is unique within the endpoint.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    profileName: string,\n    originGroupName: string,\n    options?: AfdOriginGroupsGetOptionalParams\n  ): Promise<AfdOriginGroupsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, originGroupName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates a new origin group within the specified profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param originGroupName Name of the origin group which is unique within the endpoint.\n   * @param originGroup Origin group properties\n   * @param options The options parameters.\n   */\n  async beginCreate(\n    resourceGroupName: string,\n    profileName: string,\n    originGroupName: string,\n    originGroup: AFDOriginGroup,\n    options?: AfdOriginGroupsCreateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<AfdOriginGroupsCreateResponse>,\n      AfdOriginGroupsCreateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<AfdOriginGroupsCreateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, profileName, originGroupName, originGroup, options },\n      createOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a new origin group within the specified profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param originGroupName Name of the origin group which is unique within the endpoint.\n   * @param originGroup Origin group properties\n   * @param options The options parameters.\n   */\n  async beginCreateAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    originGroupName: string,\n    originGroup: AFDOriginGroup,\n    options?: AfdOriginGroupsCreateOptionalParams\n  ): Promise<AfdOriginGroupsCreateResponse> {\n    const poller = await this.beginCreate(\n      resourceGroupName,\n      profileName,\n      originGroupName,\n      originGroup,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates an existing origin group within a profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param originGroupName Name of the origin group which is unique within the profile.\n   * @param originGroupUpdateProperties Origin group properties\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    profileName: string,\n    originGroupName: string,\n    originGroupUpdateProperties: AFDOriginGroupUpdateParameters,\n    options?: AfdOriginGroupsUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<AfdOriginGroupsUpdateResponse>,\n      AfdOriginGroupsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<AfdOriginGroupsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        profileName,\n        originGroupName,\n        originGroupUpdateProperties,\n        options\n      },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates an existing origin group within a profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param originGroupName Name of the origin group which is unique within the profile.\n   * @param originGroupUpdateProperties Origin group properties\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    originGroupName: string,\n    originGroupUpdateProperties: AFDOriginGroupUpdateParameters,\n    options?: AfdOriginGroupsUpdateOptionalParams\n  ): Promise<AfdOriginGroupsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      profileName,\n      originGroupName,\n      originGroupUpdateProperties,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes an existing origin group within a profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param originGroupName Name of the origin group which is unique within the profile.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    profileName: string,\n    originGroupName: string,\n    options?: AfdOriginGroupsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, profileName, originGroupName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes an existing origin group within a profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param originGroupName Name of the origin group which is unique within the profile.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    originGroupName: string,\n    options?: AfdOriginGroupsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      profileName,\n      originGroupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Checks the quota and actual usage of the given AzureFrontDoor origin group under the given CDN\n   * profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param originGroupName Name of the origin group which is unique within the endpoint.\n   * @param options The options parameters.\n   */\n  private _listResourceUsage(\n    resourceGroupName: string,\n    profileName: string,\n    originGroupName: string,\n    options?: AfdOriginGroupsListResourceUsageOptionalParams\n  ): Promise<AfdOriginGroupsListResourceUsageResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, originGroupName, options },\n      listResourceUsageOperationSpec\n    );\n  }\n\n  /**\n   * ListByProfileNext\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param nextLink The nextLink from the previous successful call to the ListByProfile method.\n   * @param options The options parameters.\n   */\n  private _listByProfileNext(\n    resourceGroupName: string,\n    profileName: string,\n    nextLink: string,\n    options?: AfdOriginGroupsListByProfileNextOptionalParams\n  ): Promise<AfdOriginGroupsListByProfileNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, nextLink, options },\n      listByProfileNextOperationSpec\n    );\n  }\n\n  /**\n   * ListResourceUsageNext\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param originGroupName Name of the origin group which is unique within the endpoint.\n   * @param nextLink The nextLink from the previous successful call to the ListResourceUsage method.\n   * @param options The options parameters.\n   */\n  private _listResourceUsageNext(\n    resourceGroupName: string,\n    profileName: string,\n    originGroupName: string,\n    nextLink: string,\n    options?: AfdOriginGroupsListResourceUsageNextOptionalParams\n  ): Promise<AfdOriginGroupsListResourceUsageNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, originGroupName, nextLink, options },\n      listResourceUsageNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByProfileOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/originGroups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AFDOriginGroupListResult\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/originGroups/{originGroupName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AFDOriginGroup\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.originGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/originGroups/{originGroupName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AFDOriginGroup\n    },\n    201: {\n      bodyMapper: Mappers.AFDOriginGroup\n    },\n    202: {\n      bodyMapper: Mappers.AFDOriginGroup\n    },\n    204: {\n      bodyMapper: Mappers.AFDOriginGroup\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  requestBody: Parameters.originGroup,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.originGroupName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/originGroups/{originGroupName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AFDOriginGroup\n    },\n    201: {\n      bodyMapper: Mappers.AFDOriginGroup\n    },\n    202: {\n      bodyMapper: Mappers.AFDOriginGroup\n    },\n    204: {\n      bodyMapper: Mappers.AFDOriginGroup\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  requestBody: Parameters.originGroupUpdateProperties,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.originGroupName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/originGroups/{originGroupName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.originGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listResourceUsageOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/originGroups/{originGroupName}/usages\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UsagesListResult\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.originGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByProfileNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AFDOriginGroupListResult\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listResourceUsageNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UsagesListResult\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.nextLink,\n    Parameters.originGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { AfdOrigins } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CdnManagementClient } from \"../cdnManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  AFDOrigin,\n  AfdOriginsListByOriginGroupNextOptionalParams,\n  AfdOriginsListByOriginGroupOptionalParams,\n  AfdOriginsListByOriginGroupResponse,\n  AfdOriginsGetOptionalParams,\n  AfdOriginsGetResponse,\n  AfdOriginsCreateOptionalParams,\n  AfdOriginsCreateResponse,\n  AFDOriginUpdateParameters,\n  AfdOriginsUpdateOptionalParams,\n  AfdOriginsUpdateResponse,\n  AfdOriginsDeleteOptionalParams,\n  AfdOriginsListByOriginGroupNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing AfdOrigins operations. */\nexport class AfdOriginsImpl implements AfdOrigins {\n  private readonly client: CdnManagementClient;\n\n  /**\n   * Initialize a new instance of the class AfdOrigins class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CdnManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the existing origins within an origin group.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param originGroupName Name of the origin group which is unique within the profile.\n   * @param options The options parameters.\n   */\n  public listByOriginGroup(\n    resourceGroupName: string,\n    profileName: string,\n    originGroupName: string,\n    options?: AfdOriginsListByOriginGroupOptionalParams\n  ): PagedAsyncIterableIterator<AFDOrigin> {\n    const iter = this.listByOriginGroupPagingAll(\n      resourceGroupName,\n      profileName,\n      originGroupName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByOriginGroupPagingPage(\n          resourceGroupName,\n          profileName,\n          originGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByOriginGroupPagingPage(\n    resourceGroupName: string,\n    profileName: string,\n    originGroupName: string,\n    options?: AfdOriginsListByOriginGroupOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<AFDOrigin[]> {\n    let result: AfdOriginsListByOriginGroupResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByOriginGroup(\n        resourceGroupName,\n        profileName,\n        originGroupName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByOriginGroupNext(\n        resourceGroupName,\n        profileName,\n        originGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByOriginGroupPagingAll(\n    resourceGroupName: string,\n    profileName: string,\n    originGroupName: string,\n    options?: AfdOriginsListByOriginGroupOptionalParams\n  ): AsyncIterableIterator<AFDOrigin> {\n    for await (const page of this.listByOriginGroupPagingPage(\n      resourceGroupName,\n      profileName,\n      originGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the existing origins within an origin group.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param originGroupName Name of the origin group which is unique within the profile.\n   * @param options The options parameters.\n   */\n  private _listByOriginGroup(\n    resourceGroupName: string,\n    profileName: string,\n    originGroupName: string,\n    options?: AfdOriginsListByOriginGroupOptionalParams\n  ): Promise<AfdOriginsListByOriginGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, originGroupName, options },\n      listByOriginGroupOperationSpec\n    );\n  }\n\n  /**\n   * Gets an existing origin within an origin group.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param originGroupName Name of the origin group which is unique within the profile.\n   * @param originName Name of the origin which is unique within the profile.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    profileName: string,\n    originGroupName: string,\n    originName: string,\n    options?: AfdOriginsGetOptionalParams\n  ): Promise<AfdOriginsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, originGroupName, originName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates a new origin within the specified origin group.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param originGroupName Name of the origin group which is unique within the profile.\n   * @param originName Name of the origin that is unique within the profile.\n   * @param origin Origin properties\n   * @param options The options parameters.\n   */\n  async beginCreate(\n    resourceGroupName: string,\n    profileName: string,\n    originGroupName: string,\n    originName: string,\n    origin: AFDOrigin,\n    options?: AfdOriginsCreateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<AfdOriginsCreateResponse>,\n      AfdOriginsCreateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<AfdOriginsCreateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        profileName,\n        originGroupName,\n        originName,\n        origin,\n        options\n      },\n      createOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a new origin within the specified origin group.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param originGroupName Name of the origin group which is unique within the profile.\n   * @param originName Name of the origin that is unique within the profile.\n   * @param origin Origin properties\n   * @param options The options parameters.\n   */\n  async beginCreateAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    originGroupName: string,\n    originName: string,\n    origin: AFDOrigin,\n    options?: AfdOriginsCreateOptionalParams\n  ): Promise<AfdOriginsCreateResponse> {\n    const poller = await this.beginCreate(\n      resourceGroupName,\n      profileName,\n      originGroupName,\n      originName,\n      origin,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates an existing origin within an origin group.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param originGroupName Name of the origin group which is unique within the profile.\n   * @param originName Name of the origin which is unique within the profile.\n   * @param originUpdateProperties Origin properties\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    profileName: string,\n    originGroupName: string,\n    originName: string,\n    originUpdateProperties: AFDOriginUpdateParameters,\n    options?: AfdOriginsUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<AfdOriginsUpdateResponse>,\n      AfdOriginsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<AfdOriginsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        profileName,\n        originGroupName,\n        originName,\n        originUpdateProperties,\n        options\n      },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates an existing origin within an origin group.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param originGroupName Name of the origin group which is unique within the profile.\n   * @param originName Name of the origin which is unique within the profile.\n   * @param originUpdateProperties Origin properties\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    originGroupName: string,\n    originName: string,\n    originUpdateProperties: AFDOriginUpdateParameters,\n    options?: AfdOriginsUpdateOptionalParams\n  ): Promise<AfdOriginsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      profileName,\n      originGroupName,\n      originName,\n      originUpdateProperties,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes an existing origin within an origin group.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param originGroupName Name of the origin group which is unique within the profile.\n   * @param originName Name of the origin which is unique within the profile.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    profileName: string,\n    originGroupName: string,\n    originName: string,\n    options?: AfdOriginsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, profileName, originGroupName, originName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes an existing origin within an origin group.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param originGroupName Name of the origin group which is unique within the profile.\n   * @param originName Name of the origin which is unique within the profile.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    originGroupName: string,\n    originName: string,\n    options?: AfdOriginsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      profileName,\n      originGroupName,\n      originName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByOriginGroupNext\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param originGroupName Name of the origin group which is unique within the profile.\n   * @param nextLink The nextLink from the previous successful call to the ListByOriginGroup method.\n   * @param options The options parameters.\n   */\n  private _listByOriginGroupNext(\n    resourceGroupName: string,\n    profileName: string,\n    originGroupName: string,\n    nextLink: string,\n    options?: AfdOriginsListByOriginGroupNextOptionalParams\n  ): Promise<AfdOriginsListByOriginGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, originGroupName, nextLink, options },\n      listByOriginGroupNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByOriginGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/originGroups/{originGroupName}/origins\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AFDOriginListResult\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.originGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/originGroups/{originGroupName}/origins/{originName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AFDOrigin\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.originGroupName,\n    Parameters.originName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/originGroups/{originGroupName}/origins/{originName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AFDOrigin\n    },\n    201: {\n      bodyMapper: Mappers.AFDOrigin\n    },\n    202: {\n      bodyMapper: Mappers.AFDOrigin\n    },\n    204: {\n      bodyMapper: Mappers.AFDOrigin\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  requestBody: Parameters.origin,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.originGroupName,\n    Parameters.originName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/originGroups/{originGroupName}/origins/{originName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AFDOrigin\n    },\n    201: {\n      bodyMapper: Mappers.AFDOrigin\n    },\n    202: {\n      bodyMapper: Mappers.AFDOrigin\n    },\n    204: {\n      bodyMapper: Mappers.AFDOrigin\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  requestBody: Parameters.originUpdateProperties,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.originGroupName,\n    Parameters.originName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/originGroups/{originGroupName}/origins/{originName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.originGroupName,\n    Parameters.originName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByOriginGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AFDOriginListResult\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.nextLink,\n    Parameters.originGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Routes } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CdnManagementClient } from \"../cdnManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  Route,\n  RoutesListByEndpointNextOptionalParams,\n  RoutesListByEndpointOptionalParams,\n  RoutesListByEndpointResponse,\n  RoutesGetOptionalParams,\n  RoutesGetResponse,\n  RoutesCreateOptionalParams,\n  RoutesCreateResponse,\n  RouteUpdateParameters,\n  RoutesUpdateOptionalParams,\n  RoutesUpdateResponse,\n  RoutesDeleteOptionalParams,\n  RoutesListByEndpointNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Routes operations. */\nexport class RoutesImpl implements Routes {\n  private readonly client: CdnManagementClient;\n\n  /**\n   * Initialize a new instance of the class Routes class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CdnManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the existing origins within a profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param options The options parameters.\n   */\n  public listByEndpoint(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    options?: RoutesListByEndpointOptionalParams\n  ): PagedAsyncIterableIterator<Route> {\n    const iter = this.listByEndpointPagingAll(\n      resourceGroupName,\n      profileName,\n      endpointName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByEndpointPagingPage(\n          resourceGroupName,\n          profileName,\n          endpointName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByEndpointPagingPage(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    options?: RoutesListByEndpointOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Route[]> {\n    let result: RoutesListByEndpointResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByEndpoint(\n        resourceGroupName,\n        profileName,\n        endpointName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByEndpointNext(\n        resourceGroupName,\n        profileName,\n        endpointName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByEndpointPagingAll(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    options?: RoutesListByEndpointOptionalParams\n  ): AsyncIterableIterator<Route> {\n    for await (const page of this.listByEndpointPagingPage(\n      resourceGroupName,\n      profileName,\n      endpointName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the existing origins within a profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param options The options parameters.\n   */\n  private _listByEndpoint(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    options?: RoutesListByEndpointOptionalParams\n  ): Promise<RoutesListByEndpointResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, endpointName, options },\n      listByEndpointOperationSpec\n    );\n  }\n\n  /**\n   * Gets an existing route with the specified route name under the specified subscription, resource\n   * group, profile, and AzureFrontDoor endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param routeName Name of the routing rule.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    routeName: string,\n    options?: RoutesGetOptionalParams\n  ): Promise<RoutesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, endpointName, routeName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates a new route with the specified route name under the specified subscription, resource group,\n   * profile, and AzureFrontDoor endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param routeName Name of the routing rule.\n   * @param route Route properties\n   * @param options The options parameters.\n   */\n  async beginCreate(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    routeName: string,\n    route: Route,\n    options?: RoutesCreateOptionalParams\n  ): Promise<\n    PollerLike<PollOperationState<RoutesCreateResponse>, RoutesCreateResponse>\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<RoutesCreateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        profileName,\n        endpointName,\n        routeName,\n        route,\n        options\n      },\n      createOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a new route with the specified route name under the specified subscription, resource group,\n   * profile, and AzureFrontDoor endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param routeName Name of the routing rule.\n   * @param route Route properties\n   * @param options The options parameters.\n   */\n  async beginCreateAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    routeName: string,\n    route: Route,\n    options?: RoutesCreateOptionalParams\n  ): Promise<RoutesCreateResponse> {\n    const poller = await this.beginCreate(\n      resourceGroupName,\n      profileName,\n      endpointName,\n      routeName,\n      route,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates an existing route with the specified route name under the specified subscription, resource\n   * group, profile, and AzureFrontDoor endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param routeName Name of the routing rule.\n   * @param routeUpdateProperties Route update properties\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    routeName: string,\n    routeUpdateProperties: RouteUpdateParameters,\n    options?: RoutesUpdateOptionalParams\n  ): Promise<\n    PollerLike<PollOperationState<RoutesUpdateResponse>, RoutesUpdateResponse>\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<RoutesUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        profileName,\n        endpointName,\n        routeName,\n        routeUpdateProperties,\n        options\n      },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates an existing route with the specified route name under the specified subscription, resource\n   * group, profile, and AzureFrontDoor endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param routeName Name of the routing rule.\n   * @param routeUpdateProperties Route update properties\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    routeName: string,\n    routeUpdateProperties: RouteUpdateParameters,\n    options?: RoutesUpdateOptionalParams\n  ): Promise<RoutesUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      profileName,\n      endpointName,\n      routeName,\n      routeUpdateProperties,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes an existing route with the specified route name under the specified subscription, resource\n   * group, profile, and AzureFrontDoor endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param routeName Name of the routing rule.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    routeName: string,\n    options?: RoutesDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, profileName, endpointName, routeName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes an existing route with the specified route name under the specified subscription, resource\n   * group, profile, and AzureFrontDoor endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param routeName Name of the routing rule.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    routeName: string,\n    options?: RoutesDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      profileName,\n      endpointName,\n      routeName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByEndpointNext\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param nextLink The nextLink from the previous successful call to the ListByEndpoint method.\n   * @param options The options parameters.\n   */\n  private _listByEndpointNext(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    nextLink: string,\n    options?: RoutesListByEndpointNextOptionalParams\n  ): Promise<RoutesListByEndpointNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, endpointName, nextLink, options },\n      listByEndpointNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByEndpointOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/afdEndpoints/{endpointName}/routes\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RouteListResult\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/afdEndpoints/{endpointName}/routes/{routeName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Route\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointName,\n    Parameters.routeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/afdEndpoints/{endpointName}/routes/{routeName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Route\n    },\n    201: {\n      bodyMapper: Mappers.Route\n    },\n    202: {\n      bodyMapper: Mappers.Route\n    },\n    204: {\n      bodyMapper: Mappers.Route\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  requestBody: Parameters.route,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointName,\n    Parameters.routeName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/afdEndpoints/{endpointName}/routes/{routeName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Route\n    },\n    201: {\n      bodyMapper: Mappers.Route\n    },\n    202: {\n      bodyMapper: Mappers.Route\n    },\n    204: {\n      bodyMapper: Mappers.Route\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  requestBody: Parameters.routeUpdateProperties,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointName,\n    Parameters.routeName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/afdEndpoints/{endpointName}/routes/{routeName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointName,\n    Parameters.routeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByEndpointNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RouteListResult\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.nextLink,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { RuleSets } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CdnManagementClient } from \"../cdnManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  RuleSet,\n  RuleSetsListByProfileNextOptionalParams,\n  RuleSetsListByProfileOptionalParams,\n  RuleSetsListByProfileResponse,\n  Usage,\n  RuleSetsListResourceUsageNextOptionalParams,\n  RuleSetsListResourceUsageOptionalParams,\n  RuleSetsListResourceUsageResponse,\n  RuleSetsGetOptionalParams,\n  RuleSetsGetResponse,\n  RuleSetsCreateOptionalParams,\n  RuleSetsCreateResponse,\n  RuleSetsDeleteOptionalParams,\n  RuleSetsListByProfileNextResponse,\n  RuleSetsListResourceUsageNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing RuleSets operations. */\nexport class RuleSetsImpl implements RuleSets {\n  private readonly client: CdnManagementClient;\n\n  /**\n   * Initialize a new instance of the class RuleSets class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CdnManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists existing AzureFrontDoor rule sets within a profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param options The options parameters.\n   */\n  public listByProfile(\n    resourceGroupName: string,\n    profileName: string,\n    options?: RuleSetsListByProfileOptionalParams\n  ): PagedAsyncIterableIterator<RuleSet> {\n    const iter = this.listByProfilePagingAll(\n      resourceGroupName,\n      profileName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByProfilePagingPage(\n          resourceGroupName,\n          profileName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByProfilePagingPage(\n    resourceGroupName: string,\n    profileName: string,\n    options?: RuleSetsListByProfileOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<RuleSet[]> {\n    let result: RuleSetsListByProfileResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByProfile(\n        resourceGroupName,\n        profileName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByProfileNext(\n        resourceGroupName,\n        profileName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByProfilePagingAll(\n    resourceGroupName: string,\n    profileName: string,\n    options?: RuleSetsListByProfileOptionalParams\n  ): AsyncIterableIterator<RuleSet> {\n    for await (const page of this.listByProfilePagingPage(\n      resourceGroupName,\n      profileName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Checks the quota and actual usage of the given AzureFrontDoor rule set under the given CDN profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param ruleSetName Name of the rule set under the profile which is unique globally.\n   * @param options The options parameters.\n   */\n  public listResourceUsage(\n    resourceGroupName: string,\n    profileName: string,\n    ruleSetName: string,\n    options?: RuleSetsListResourceUsageOptionalParams\n  ): PagedAsyncIterableIterator<Usage> {\n    const iter = this.listResourceUsagePagingAll(\n      resourceGroupName,\n      profileName,\n      ruleSetName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listResourceUsagePagingPage(\n          resourceGroupName,\n          profileName,\n          ruleSetName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listResourceUsagePagingPage(\n    resourceGroupName: string,\n    profileName: string,\n    ruleSetName: string,\n    options?: RuleSetsListResourceUsageOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Usage[]> {\n    let result: RuleSetsListResourceUsageResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listResourceUsage(\n        resourceGroupName,\n        profileName,\n        ruleSetName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listResourceUsageNext(\n        resourceGroupName,\n        profileName,\n        ruleSetName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listResourceUsagePagingAll(\n    resourceGroupName: string,\n    profileName: string,\n    ruleSetName: string,\n    options?: RuleSetsListResourceUsageOptionalParams\n  ): AsyncIterableIterator<Usage> {\n    for await (const page of this.listResourceUsagePagingPage(\n      resourceGroupName,\n      profileName,\n      ruleSetName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists existing AzureFrontDoor rule sets within a profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param options The options parameters.\n   */\n  private _listByProfile(\n    resourceGroupName: string,\n    profileName: string,\n    options?: RuleSetsListByProfileOptionalParams\n  ): Promise<RuleSetsListByProfileResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, options },\n      listByProfileOperationSpec\n    );\n  }\n\n  /**\n   * Gets an existing AzureFrontDoor rule set with the specified rule set name under the specified\n   * subscription, resource group and profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param ruleSetName Name of the rule set under the profile which is unique globally.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    profileName: string,\n    ruleSetName: string,\n    options?: RuleSetsGetOptionalParams\n  ): Promise<RuleSetsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, ruleSetName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates a new rule set within the specified profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param ruleSetName Name of the rule set under the profile which is unique globally\n   * @param options The options parameters.\n   */\n  create(\n    resourceGroupName: string,\n    profileName: string,\n    ruleSetName: string,\n    options?: RuleSetsCreateOptionalParams\n  ): Promise<RuleSetsCreateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, ruleSetName, options },\n      createOperationSpec\n    );\n  }\n\n  /**\n   * Deletes an existing AzureFrontDoor rule set with the specified rule set name under the specified\n   * subscription, resource group and profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param ruleSetName Name of the rule set under the profile which is unique globally.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    profileName: string,\n    ruleSetName: string,\n    options?: RuleSetsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, profileName, ruleSetName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes an existing AzureFrontDoor rule set with the specified rule set name under the specified\n   * subscription, resource group and profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param ruleSetName Name of the rule set under the profile which is unique globally.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    ruleSetName: string,\n    options?: RuleSetsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      profileName,\n      ruleSetName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Checks the quota and actual usage of the given AzureFrontDoor rule set under the given CDN profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param ruleSetName Name of the rule set under the profile which is unique globally.\n   * @param options The options parameters.\n   */\n  private _listResourceUsage(\n    resourceGroupName: string,\n    profileName: string,\n    ruleSetName: string,\n    options?: RuleSetsListResourceUsageOptionalParams\n  ): Promise<RuleSetsListResourceUsageResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, ruleSetName, options },\n      listResourceUsageOperationSpec\n    );\n  }\n\n  /**\n   * ListByProfileNext\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param nextLink The nextLink from the previous successful call to the ListByProfile method.\n   * @param options The options parameters.\n   */\n  private _listByProfileNext(\n    resourceGroupName: string,\n    profileName: string,\n    nextLink: string,\n    options?: RuleSetsListByProfileNextOptionalParams\n  ): Promise<RuleSetsListByProfileNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, nextLink, options },\n      listByProfileNextOperationSpec\n    );\n  }\n\n  /**\n   * ListResourceUsageNext\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param ruleSetName Name of the rule set under the profile which is unique globally.\n   * @param nextLink The nextLink from the previous successful call to the ListResourceUsage method.\n   * @param options The options parameters.\n   */\n  private _listResourceUsageNext(\n    resourceGroupName: string,\n    profileName: string,\n    ruleSetName: string,\n    nextLink: string,\n    options?: RuleSetsListResourceUsageNextOptionalParams\n  ): Promise<RuleSetsListResourceUsageNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, ruleSetName, nextLink, options },\n      listResourceUsageNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByProfileOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/ruleSets\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RuleSetListResult\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/ruleSets/{ruleSetName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RuleSet\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.ruleSetName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/ruleSets/{ruleSetName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RuleSet\n    },\n    201: {\n      bodyMapper: Mappers.RuleSet\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.ruleSetName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/ruleSets/{ruleSetName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.ruleSetName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listResourceUsageOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/ruleSets/{ruleSetName}/usages\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UsagesListResult\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.ruleSetName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByProfileNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RuleSetListResult\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listResourceUsageNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UsagesListResult\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.nextLink,\n    Parameters.ruleSetName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Rules } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CdnManagementClient } from \"../cdnManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  Rule,\n  RulesListByRuleSetNextOptionalParams,\n  RulesListByRuleSetOptionalParams,\n  RulesListByRuleSetResponse,\n  RulesGetOptionalParams,\n  RulesGetResponse,\n  RulesCreateOptionalParams,\n  RulesCreateResponse,\n  RuleUpdateParameters,\n  RulesUpdateOptionalParams,\n  RulesUpdateResponse,\n  RulesDeleteOptionalParams,\n  RulesListByRuleSetNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Rules operations. */\nexport class RulesImpl implements Rules {\n  private readonly client: CdnManagementClient;\n\n  /**\n   * Initialize a new instance of the class Rules class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CdnManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the existing delivery rules within a rule set.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param ruleSetName Name of the rule set under the profile.\n   * @param options The options parameters.\n   */\n  public listByRuleSet(\n    resourceGroupName: string,\n    profileName: string,\n    ruleSetName: string,\n    options?: RulesListByRuleSetOptionalParams\n  ): PagedAsyncIterableIterator<Rule> {\n    const iter = this.listByRuleSetPagingAll(\n      resourceGroupName,\n      profileName,\n      ruleSetName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByRuleSetPagingPage(\n          resourceGroupName,\n          profileName,\n          ruleSetName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByRuleSetPagingPage(\n    resourceGroupName: string,\n    profileName: string,\n    ruleSetName: string,\n    options?: RulesListByRuleSetOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Rule[]> {\n    let result: RulesListByRuleSetResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByRuleSet(\n        resourceGroupName,\n        profileName,\n        ruleSetName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByRuleSetNext(\n        resourceGroupName,\n        profileName,\n        ruleSetName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByRuleSetPagingAll(\n    resourceGroupName: string,\n    profileName: string,\n    ruleSetName: string,\n    options?: RulesListByRuleSetOptionalParams\n  ): AsyncIterableIterator<Rule> {\n    for await (const page of this.listByRuleSetPagingPage(\n      resourceGroupName,\n      profileName,\n      ruleSetName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the existing delivery rules within a rule set.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param ruleSetName Name of the rule set under the profile.\n   * @param options The options parameters.\n   */\n  private _listByRuleSet(\n    resourceGroupName: string,\n    profileName: string,\n    ruleSetName: string,\n    options?: RulesListByRuleSetOptionalParams\n  ): Promise<RulesListByRuleSetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, ruleSetName, options },\n      listByRuleSetOperationSpec\n    );\n  }\n\n  /**\n   * Gets an existing delivery rule within a rule set.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param ruleSetName Name of the rule set under the profile.\n   * @param ruleName Name of the delivery rule which is unique within the endpoint.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    profileName: string,\n    ruleSetName: string,\n    ruleName: string,\n    options?: RulesGetOptionalParams\n  ): Promise<RulesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, ruleSetName, ruleName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates a new delivery rule within the specified rule set.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param ruleSetName Name of the rule set under the profile.\n   * @param ruleName Name of the delivery rule which is unique within the endpoint.\n   * @param rule The delivery rule properties.\n   * @param options The options parameters.\n   */\n  async beginCreate(\n    resourceGroupName: string,\n    profileName: string,\n    ruleSetName: string,\n    ruleName: string,\n    rule: Rule,\n    options?: RulesCreateOptionalParams\n  ): Promise<\n    PollerLike<PollOperationState<RulesCreateResponse>, RulesCreateResponse>\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<RulesCreateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, profileName, ruleSetName, ruleName, rule, options },\n      createOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a new delivery rule within the specified rule set.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param ruleSetName Name of the rule set under the profile.\n   * @param ruleName Name of the delivery rule which is unique within the endpoint.\n   * @param rule The delivery rule properties.\n   * @param options The options parameters.\n   */\n  async beginCreateAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    ruleSetName: string,\n    ruleName: string,\n    rule: Rule,\n    options?: RulesCreateOptionalParams\n  ): Promise<RulesCreateResponse> {\n    const poller = await this.beginCreate(\n      resourceGroupName,\n      profileName,\n      ruleSetName,\n      ruleName,\n      rule,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates an existing delivery rule within a rule set.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param ruleSetName Name of the rule set under the profile.\n   * @param ruleName Name of the delivery rule which is unique within the endpoint.\n   * @param ruleUpdateProperties Delivery rule properties\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    profileName: string,\n    ruleSetName: string,\n    ruleName: string,\n    ruleUpdateProperties: RuleUpdateParameters,\n    options?: RulesUpdateOptionalParams\n  ): Promise<\n    PollerLike<PollOperationState<RulesUpdateResponse>, RulesUpdateResponse>\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<RulesUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        profileName,\n        ruleSetName,\n        ruleName,\n        ruleUpdateProperties,\n        options\n      },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates an existing delivery rule within a rule set.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param ruleSetName Name of the rule set under the profile.\n   * @param ruleName Name of the delivery rule which is unique within the endpoint.\n   * @param ruleUpdateProperties Delivery rule properties\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    ruleSetName: string,\n    ruleName: string,\n    ruleUpdateProperties: RuleUpdateParameters,\n    options?: RulesUpdateOptionalParams\n  ): Promise<RulesUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      profileName,\n      ruleSetName,\n      ruleName,\n      ruleUpdateProperties,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes an existing delivery rule within a rule set.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param ruleSetName Name of the rule set under the profile.\n   * @param ruleName Name of the delivery rule which is unique within the endpoint.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    profileName: string,\n    ruleSetName: string,\n    ruleName: string,\n    options?: RulesDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, profileName, ruleSetName, ruleName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes an existing delivery rule within a rule set.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param ruleSetName Name of the rule set under the profile.\n   * @param ruleName Name of the delivery rule which is unique within the endpoint.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    ruleSetName: string,\n    ruleName: string,\n    options?: RulesDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      profileName,\n      ruleSetName,\n      ruleName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByRuleSetNext\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param ruleSetName Name of the rule set under the profile.\n   * @param nextLink The nextLink from the previous successful call to the ListByRuleSet method.\n   * @param options The options parameters.\n   */\n  private _listByRuleSetNext(\n    resourceGroupName: string,\n    profileName: string,\n    ruleSetName: string,\n    nextLink: string,\n    options?: RulesListByRuleSetNextOptionalParams\n  ): Promise<RulesListByRuleSetNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, ruleSetName, nextLink, options },\n      listByRuleSetNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByRuleSetOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/ruleSets/{ruleSetName}/rules\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RuleListResult\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.ruleSetName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/ruleSets/{ruleSetName}/rules/{ruleName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Rule\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.ruleSetName,\n    Parameters.ruleName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/ruleSets/{ruleSetName}/rules/{ruleName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Rule\n    },\n    201: {\n      bodyMapper: Mappers.Rule\n    },\n    202: {\n      bodyMapper: Mappers.Rule\n    },\n    204: {\n      bodyMapper: Mappers.Rule\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  requestBody: Parameters.rule,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.ruleSetName,\n    Parameters.ruleName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/ruleSets/{ruleSetName}/rules/{ruleName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Rule\n    },\n    201: {\n      bodyMapper: Mappers.Rule\n    },\n    202: {\n      bodyMapper: Mappers.Rule\n    },\n    204: {\n      bodyMapper: Mappers.Rule\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  requestBody: Parameters.ruleUpdateProperties,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.ruleSetName,\n    Parameters.ruleName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/ruleSets/{ruleSetName}/rules/{ruleName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.ruleSetName,\n    Parameters.ruleName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByRuleSetNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RuleListResult\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.nextLink,\n    Parameters.ruleSetName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { SecurityPolicies } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CdnManagementClient } from \"../cdnManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  SecurityPolicy,\n  SecurityPoliciesListByProfileNextOptionalParams,\n  SecurityPoliciesListByProfileOptionalParams,\n  SecurityPoliciesListByProfileResponse,\n  SecurityPoliciesGetOptionalParams,\n  SecurityPoliciesGetResponse,\n  SecurityPoliciesCreateOptionalParams,\n  SecurityPoliciesCreateResponse,\n  SecurityPolicyUpdateParameters,\n  SecurityPoliciesPatchOptionalParams,\n  SecurityPoliciesPatchResponse,\n  SecurityPoliciesDeleteOptionalParams,\n  SecurityPoliciesListByProfileNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing SecurityPolicies operations. */\nexport class SecurityPoliciesImpl implements SecurityPolicies {\n  private readonly client: CdnManagementClient;\n\n  /**\n   * Initialize a new instance of the class SecurityPolicies class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CdnManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists security policies associated with the profile\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param options The options parameters.\n   */\n  public listByProfile(\n    resourceGroupName: string,\n    profileName: string,\n    options?: SecurityPoliciesListByProfileOptionalParams\n  ): PagedAsyncIterableIterator<SecurityPolicy> {\n    const iter = this.listByProfilePagingAll(\n      resourceGroupName,\n      profileName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByProfilePagingPage(\n          resourceGroupName,\n          profileName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByProfilePagingPage(\n    resourceGroupName: string,\n    profileName: string,\n    options?: SecurityPoliciesListByProfileOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<SecurityPolicy[]> {\n    let result: SecurityPoliciesListByProfileResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByProfile(\n        resourceGroupName,\n        profileName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByProfileNext(\n        resourceGroupName,\n        profileName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByProfilePagingAll(\n    resourceGroupName: string,\n    profileName: string,\n    options?: SecurityPoliciesListByProfileOptionalParams\n  ): AsyncIterableIterator<SecurityPolicy> {\n    for await (const page of this.listByProfilePagingPage(\n      resourceGroupName,\n      profileName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists security policies associated with the profile\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param options The options parameters.\n   */\n  private _listByProfile(\n    resourceGroupName: string,\n    profileName: string,\n    options?: SecurityPoliciesListByProfileOptionalParams\n  ): Promise<SecurityPoliciesListByProfileResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, options },\n      listByProfileOperationSpec\n    );\n  }\n\n  /**\n   * Gets an existing security policy within a profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param securityPolicyName Name of the security policy under the profile.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    profileName: string,\n    securityPolicyName: string,\n    options?: SecurityPoliciesGetOptionalParams\n  ): Promise<SecurityPoliciesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, securityPolicyName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates a new security policy within the specified profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param securityPolicyName Name of the security policy under the profile.\n   * @param securityPolicy The security policy properties.\n   * @param options The options parameters.\n   */\n  async beginCreate(\n    resourceGroupName: string,\n    profileName: string,\n    securityPolicyName: string,\n    securityPolicy: SecurityPolicy,\n    options?: SecurityPoliciesCreateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<SecurityPoliciesCreateResponse>,\n      SecurityPoliciesCreateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<SecurityPoliciesCreateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        profileName,\n        securityPolicyName,\n        securityPolicy,\n        options\n      },\n      createOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a new security policy within the specified profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param securityPolicyName Name of the security policy under the profile.\n   * @param securityPolicy The security policy properties.\n   * @param options The options parameters.\n   */\n  async beginCreateAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    securityPolicyName: string,\n    securityPolicy: SecurityPolicy,\n    options?: SecurityPoliciesCreateOptionalParams\n  ): Promise<SecurityPoliciesCreateResponse> {\n    const poller = await this.beginCreate(\n      resourceGroupName,\n      profileName,\n      securityPolicyName,\n      securityPolicy,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates an existing security policy within a profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param securityPolicyName Name of the security policy under the profile.\n   * @param securityPolicyUpdateProperties Security policy update properties\n   * @param options The options parameters.\n   */\n  async beginPatch(\n    resourceGroupName: string,\n    profileName: string,\n    securityPolicyName: string,\n    securityPolicyUpdateProperties: SecurityPolicyUpdateParameters,\n    options?: SecurityPoliciesPatchOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<SecurityPoliciesPatchResponse>,\n      SecurityPoliciesPatchResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<SecurityPoliciesPatchResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        profileName,\n        securityPolicyName,\n        securityPolicyUpdateProperties,\n        options\n      },\n      patchOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates an existing security policy within a profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param securityPolicyName Name of the security policy under the profile.\n   * @param securityPolicyUpdateProperties Security policy update properties\n   * @param options The options parameters.\n   */\n  async beginPatchAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    securityPolicyName: string,\n    securityPolicyUpdateProperties: SecurityPolicyUpdateParameters,\n    options?: SecurityPoliciesPatchOptionalParams\n  ): Promise<SecurityPoliciesPatchResponse> {\n    const poller = await this.beginPatch(\n      resourceGroupName,\n      profileName,\n      securityPolicyName,\n      securityPolicyUpdateProperties,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes an existing security policy within profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param securityPolicyName Name of the security policy under the profile.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    profileName: string,\n    securityPolicyName: string,\n    options?: SecurityPoliciesDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, profileName, securityPolicyName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes an existing security policy within profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param securityPolicyName Name of the security policy under the profile.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    securityPolicyName: string,\n    options?: SecurityPoliciesDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      profileName,\n      securityPolicyName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByProfileNext\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param nextLink The nextLink from the previous successful call to the ListByProfile method.\n   * @param options The options parameters.\n   */\n  private _listByProfileNext(\n    resourceGroupName: string,\n    profileName: string,\n    nextLink: string,\n    options?: SecurityPoliciesListByProfileNextOptionalParams\n  ): Promise<SecurityPoliciesListByProfileNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, nextLink, options },\n      listByProfileNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByProfileOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/securityPolicies\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SecurityPolicyListResult\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/securityPolicies/{securityPolicyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SecurityPolicy\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.securityPolicyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/securityPolicies/{securityPolicyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SecurityPolicy\n    },\n    201: {\n      bodyMapper: Mappers.SecurityPolicy\n    },\n    202: {\n      bodyMapper: Mappers.SecurityPolicy\n    },\n    204: {\n      bodyMapper: Mappers.SecurityPolicy\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  requestBody: Parameters.securityPolicy,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.securityPolicyName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst patchOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/securityPolicies/{securityPolicyName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SecurityPolicy\n    },\n    201: {\n      bodyMapper: Mappers.SecurityPolicy\n    },\n    202: {\n      bodyMapper: Mappers.SecurityPolicy\n    },\n    204: {\n      bodyMapper: Mappers.SecurityPolicy\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  requestBody: Parameters.securityPolicyUpdateProperties,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.securityPolicyName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/securityPolicies/{securityPolicyName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.securityPolicyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByProfileNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SecurityPolicyListResult\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Secrets } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CdnManagementClient } from \"../cdnManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  Secret,\n  SecretsListByProfileNextOptionalParams,\n  SecretsListByProfileOptionalParams,\n  SecretsListByProfileResponse,\n  SecretsGetOptionalParams,\n  SecretsGetResponse,\n  SecretsCreateOptionalParams,\n  SecretsCreateResponse,\n  SecretsDeleteOptionalParams,\n  SecretsListByProfileNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Secrets operations. */\nexport class SecretsImpl implements Secrets {\n  private readonly client: CdnManagementClient;\n\n  /**\n   * Initialize a new instance of the class Secrets class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CdnManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists existing AzureFrontDoor secrets.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param options The options parameters.\n   */\n  public listByProfile(\n    resourceGroupName: string,\n    profileName: string,\n    options?: SecretsListByProfileOptionalParams\n  ): PagedAsyncIterableIterator<Secret> {\n    const iter = this.listByProfilePagingAll(\n      resourceGroupName,\n      profileName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByProfilePagingPage(\n          resourceGroupName,\n          profileName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByProfilePagingPage(\n    resourceGroupName: string,\n    profileName: string,\n    options?: SecretsListByProfileOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Secret[]> {\n    let result: SecretsListByProfileResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByProfile(\n        resourceGroupName,\n        profileName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByProfileNext(\n        resourceGroupName,\n        profileName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByProfilePagingAll(\n    resourceGroupName: string,\n    profileName: string,\n    options?: SecretsListByProfileOptionalParams\n  ): AsyncIterableIterator<Secret> {\n    for await (const page of this.listByProfilePagingPage(\n      resourceGroupName,\n      profileName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists existing AzureFrontDoor secrets.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param options The options parameters.\n   */\n  private _listByProfile(\n    resourceGroupName: string,\n    profileName: string,\n    options?: SecretsListByProfileOptionalParams\n  ): Promise<SecretsListByProfileResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, options },\n      listByProfileOperationSpec\n    );\n  }\n\n  /**\n   * Gets an existing Secret within a profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param secretName Name of the Secret under the profile.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    profileName: string,\n    secretName: string,\n    options?: SecretsGetOptionalParams\n  ): Promise<SecretsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, secretName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates a new Secret within the specified profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param secretName Name of the Secret under the profile.\n   * @param secret The Secret properties.\n   * @param options The options parameters.\n   */\n  async beginCreate(\n    resourceGroupName: string,\n    profileName: string,\n    secretName: string,\n    secret: Secret,\n    options?: SecretsCreateOptionalParams\n  ): Promise<\n    PollerLike<PollOperationState<SecretsCreateResponse>, SecretsCreateResponse>\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<SecretsCreateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, profileName, secretName, secret, options },\n      createOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a new Secret within the specified profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param secretName Name of the Secret under the profile.\n   * @param secret The Secret properties.\n   * @param options The options parameters.\n   */\n  async beginCreateAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    secretName: string,\n    secret: Secret,\n    options?: SecretsCreateOptionalParams\n  ): Promise<SecretsCreateResponse> {\n    const poller = await this.beginCreate(\n      resourceGroupName,\n      profileName,\n      secretName,\n      secret,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes an existing Secret within profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param secretName Name of the Secret under the profile.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    profileName: string,\n    secretName: string,\n    options?: SecretsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, profileName, secretName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes an existing Secret within profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param secretName Name of the Secret under the profile.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    secretName: string,\n    options?: SecretsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      profileName,\n      secretName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByProfileNext\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group.\n   * @param nextLink The nextLink from the previous successful call to the ListByProfile method.\n   * @param options The options parameters.\n   */\n  private _listByProfileNext(\n    resourceGroupName: string,\n    profileName: string,\n    nextLink: string,\n    options?: SecretsListByProfileNextOptionalParams\n  ): Promise<SecretsListByProfileNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, nextLink, options },\n      listByProfileNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByProfileOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/secrets\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SecretListResult\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/secrets/{secretName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Secret\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.secretName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/secrets/{secretName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Secret\n    },\n    201: {\n      bodyMapper: Mappers.Secret\n    },\n    202: {\n      bodyMapper: Mappers.Secret\n    },\n    204: {\n      bodyMapper: Mappers.Secret\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  requestBody: Parameters.secret,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.secretName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/secrets/{secretName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.secretName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByProfileNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SecretListResult\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Validate } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CdnManagementClient } from \"../cdnManagementClient\";\nimport {\n  ValidateSecretInput,\n  ValidateSecretOptionalParams,\n  ValidateSecretResponse\n} from \"../models\";\n\n/** Class containing Validate operations. */\nexport class ValidateImpl implements Validate {\n  private readonly client: CdnManagementClient;\n\n  /**\n   * Initialize a new instance of the class Validate class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CdnManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Validate a Secret in the profile.\n   * @param validateSecretInput The Secret source.\n   * @param options The options parameters.\n   */\n  secret(\n    validateSecretInput: ValidateSecretInput,\n    options?: ValidateSecretOptionalParams\n  ): Promise<ValidateSecretResponse> {\n    return this.client.sendOperationRequest(\n      { validateSecretInput, options },\n      secretOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst secretOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Cdn/validateSecret\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ValidateSecretOutput\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  requestBody: Parameters.validateSecretInput,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { LogAnalytics } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CdnManagementClient } from \"../cdnManagementClient\";\nimport {\n  LogMetric,\n  LogMetricsGranularity,\n  LogAnalyticsGetLogAnalyticsMetricsOptionalParams,\n  LogAnalyticsGetLogAnalyticsMetricsResponse,\n  LogRanking,\n  LogRankingMetric,\n  LogAnalyticsGetLogAnalyticsRankingsOptionalParams,\n  LogAnalyticsGetLogAnalyticsRankingsResponse,\n  LogAnalyticsGetLogAnalyticsLocationsOptionalParams,\n  LogAnalyticsGetLogAnalyticsLocationsResponse,\n  LogAnalyticsGetLogAnalyticsResourcesOptionalParams,\n  LogAnalyticsGetLogAnalyticsResourcesResponse,\n  WafMetric,\n  WafGranularity,\n  LogAnalyticsGetWafLogAnalyticsMetricsOptionalParams,\n  LogAnalyticsGetWafLogAnalyticsMetricsResponse,\n  WafRankingType,\n  LogAnalyticsGetWafLogAnalyticsRankingsOptionalParams,\n  LogAnalyticsGetWafLogAnalyticsRankingsResponse\n} from \"../models\";\n\n/** Class containing LogAnalytics operations. */\nexport class LogAnalyticsImpl implements LogAnalytics {\n  private readonly client: CdnManagementClient;\n\n  /**\n   * Initialize a new instance of the class LogAnalytics class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CdnManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get log report for AFD profile\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group. which is unique within the resource group.\n   * @param metrics Array of LogMetric\n   * @param dateTimeBegin\n   * @param dateTimeEnd\n   * @param granularity\n   * @param customDomains Array of Get11ItemsItem\n   * @param protocols Array of Get12ItemsItem\n   * @param options The options parameters.\n   */\n  getLogAnalyticsMetrics(\n    resourceGroupName: string,\n    profileName: string,\n    metrics: LogMetric[],\n    dateTimeBegin: Date,\n    dateTimeEnd: Date,\n    granularity: LogMetricsGranularity,\n    customDomains: string[],\n    protocols: string[],\n    options?: LogAnalyticsGetLogAnalyticsMetricsOptionalParams\n  ): Promise<LogAnalyticsGetLogAnalyticsMetricsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        profileName,\n        metrics,\n        dateTimeBegin,\n        dateTimeEnd,\n        granularity,\n        customDomains,\n        protocols,\n        options\n      },\n      getLogAnalyticsMetricsOperationSpec\n    );\n  }\n\n  /**\n   * Get log analytics ranking report for AFD profile\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group. which is unique within the resource group.\n   * @param rankings Array of LogRanking\n   * @param metrics Array of LogRankingMetric\n   * @param maxRanking\n   * @param dateTimeBegin\n   * @param dateTimeEnd\n   * @param options The options parameters.\n   */\n  getLogAnalyticsRankings(\n    resourceGroupName: string,\n    profileName: string,\n    rankings: LogRanking[],\n    metrics: LogRankingMetric[],\n    maxRanking: number,\n    dateTimeBegin: Date,\n    dateTimeEnd: Date,\n    options?: LogAnalyticsGetLogAnalyticsRankingsOptionalParams\n  ): Promise<LogAnalyticsGetLogAnalyticsRankingsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        profileName,\n        rankings,\n        metrics,\n        maxRanking,\n        dateTimeBegin,\n        dateTimeEnd,\n        options\n      },\n      getLogAnalyticsRankingsOperationSpec\n    );\n  }\n\n  /**\n   * Get all available location names for AFD log analytics report.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group. which is unique within the resource group.\n   * @param options The options parameters.\n   */\n  getLogAnalyticsLocations(\n    resourceGroupName: string,\n    profileName: string,\n    options?: LogAnalyticsGetLogAnalyticsLocationsOptionalParams\n  ): Promise<LogAnalyticsGetLogAnalyticsLocationsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, options },\n      getLogAnalyticsLocationsOperationSpec\n    );\n  }\n\n  /**\n   * Get all endpoints and custom domains available for AFD log report\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group. which is unique within the resource group.\n   * @param options The options parameters.\n   */\n  getLogAnalyticsResources(\n    resourceGroupName: string,\n    profileName: string,\n    options?: LogAnalyticsGetLogAnalyticsResourcesOptionalParams\n  ): Promise<LogAnalyticsGetLogAnalyticsResourcesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, options },\n      getLogAnalyticsResourcesOperationSpec\n    );\n  }\n\n  /**\n   * Get Waf related log analytics report for AFD profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group. which is unique within the resource group.\n   * @param metrics Array of WafMetric\n   * @param dateTimeBegin\n   * @param dateTimeEnd\n   * @param granularity\n   * @param options The options parameters.\n   */\n  getWafLogAnalyticsMetrics(\n    resourceGroupName: string,\n    profileName: string,\n    metrics: WafMetric[],\n    dateTimeBegin: Date,\n    dateTimeEnd: Date,\n    granularity: WafGranularity,\n    options?: LogAnalyticsGetWafLogAnalyticsMetricsOptionalParams\n  ): Promise<LogAnalyticsGetWafLogAnalyticsMetricsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        profileName,\n        metrics,\n        dateTimeBegin,\n        dateTimeEnd,\n        granularity,\n        options\n      },\n      getWafLogAnalyticsMetricsOperationSpec\n    );\n  }\n\n  /**\n   * Get WAF log analytics charts for AFD profile\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which\n   *                    is unique within the resource group. which is unique within the resource group.\n   * @param metrics Array of WafMetric\n   * @param dateTimeBegin\n   * @param dateTimeEnd\n   * @param maxRanking\n   * @param rankings Array of WafRankingType\n   * @param options The options parameters.\n   */\n  getWafLogAnalyticsRankings(\n    resourceGroupName: string,\n    profileName: string,\n    metrics: WafMetric[],\n    dateTimeBegin: Date,\n    dateTimeEnd: Date,\n    maxRanking: number,\n    rankings: WafRankingType[],\n    options?: LogAnalyticsGetWafLogAnalyticsRankingsOptionalParams\n  ): Promise<LogAnalyticsGetWafLogAnalyticsRankingsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        profileName,\n        metrics,\n        dateTimeBegin,\n        dateTimeEnd,\n        maxRanking,\n        rankings,\n        options\n      },\n      getWafLogAnalyticsRankingsOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getLogAnalyticsMetricsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getLogAnalyticsMetrics\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MetricsResponse\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.metrics,\n    Parameters.dateTimeBegin,\n    Parameters.dateTimeEnd,\n    Parameters.granularity,\n    Parameters.groupBy,\n    Parameters.continents,\n    Parameters.countryOrRegions,\n    Parameters.customDomains,\n    Parameters.protocols\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getLogAnalyticsRankingsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getLogAnalyticsRankings\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RankingsResponse\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.dateTimeBegin,\n    Parameters.dateTimeEnd,\n    Parameters.rankings,\n    Parameters.metrics1,\n    Parameters.maxRanking,\n    Parameters.customDomains1\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getLogAnalyticsLocationsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getLogAnalyticsLocations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContinentsResponse\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getLogAnalyticsResourcesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getLogAnalyticsResources\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourcesResponse\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getWafLogAnalyticsMetricsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getWafLogAnalyticsMetrics\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WafMetricsResponse\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.dateTimeBegin,\n    Parameters.dateTimeEnd,\n    Parameters.metrics2,\n    Parameters.granularity1,\n    Parameters.actions,\n    Parameters.groupBy1,\n    Parameters.ruleTypes\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getWafLogAnalyticsRankingsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getWafLogAnalyticsRankings\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WafRankingsResponse\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.dateTimeBegin,\n    Parameters.dateTimeEnd,\n    Parameters.maxRanking,\n    Parameters.metrics2,\n    Parameters.actions,\n    Parameters.ruleTypes,\n    Parameters.rankings1\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Profiles } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CdnManagementClient } from \"../cdnManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  Profile,\n  ProfilesListNextOptionalParams,\n  ProfilesListOptionalParams,\n  ProfilesListResponse,\n  ProfilesListByResourceGroupNextOptionalParams,\n  ProfilesListByResourceGroupOptionalParams,\n  ProfilesListByResourceGroupResponse,\n  ResourceUsage,\n  ProfilesListResourceUsageNextOptionalParams,\n  ProfilesListResourceUsageOptionalParams,\n  ProfilesListResourceUsageResponse,\n  ProfilesGetOptionalParams,\n  ProfilesGetResponse,\n  ProfilesCreateOptionalParams,\n  ProfilesCreateResponse,\n  ProfileUpdateParameters,\n  ProfilesUpdateOptionalParams,\n  ProfilesUpdateResponse,\n  ProfilesDeleteOptionalParams,\n  ProfilesGenerateSsoUriOptionalParams,\n  ProfilesGenerateSsoUriResponse,\n  ProfilesListSupportedOptimizationTypesOptionalParams,\n  ProfilesListSupportedOptimizationTypesResponse,\n  ProfilesListNextResponse,\n  ProfilesListByResourceGroupNextResponse,\n  ProfilesListResourceUsageNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Profiles operations. */\nexport class ProfilesImpl implements Profiles {\n  private readonly client: CdnManagementClient;\n\n  /**\n   * Initialize a new instance of the class Profiles class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CdnManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the Azure Front Door Standard, Azure Front Door Premium, and CDN profiles within an\n   * Azure subscription.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: ProfilesListOptionalParams\n  ): PagedAsyncIterableIterator<Profile> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: ProfilesListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Profile[]> {\n    let result: ProfilesListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: ProfilesListOptionalParams\n  ): AsyncIterableIterator<Profile> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the Azure Front Door Standard, Azure Front Door Premium, and CDN profiles within a\n   * resource group.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: ProfilesListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<Profile> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByResourceGroupPagingPage(\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: ProfilesListByResourceGroupOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Profile[]> {\n    let result: ProfilesListByResourceGroupResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByResourceGroup(resourceGroupName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: ProfilesListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<Profile> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Checks the quota and actual usage of endpoints under the given Azure Front Door Standard or Azure\n   * Front Door Premium or CDN profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile\n   *                    which is unique within the resource group.\n   * @param options The options parameters.\n   */\n  public listResourceUsage(\n    resourceGroupName: string,\n    profileName: string,\n    options?: ProfilesListResourceUsageOptionalParams\n  ): PagedAsyncIterableIterator<ResourceUsage> {\n    const iter = this.listResourceUsagePagingAll(\n      resourceGroupName,\n      profileName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listResourceUsagePagingPage(\n          resourceGroupName,\n          profileName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listResourceUsagePagingPage(\n    resourceGroupName: string,\n    profileName: string,\n    options?: ProfilesListResourceUsageOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ResourceUsage[]> {\n    let result: ProfilesListResourceUsageResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listResourceUsage(\n        resourceGroupName,\n        profileName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listResourceUsageNext(\n        resourceGroupName,\n        profileName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listResourceUsagePagingAll(\n    resourceGroupName: string,\n    profileName: string,\n    options?: ProfilesListResourceUsageOptionalParams\n  ): AsyncIterableIterator<ResourceUsage> {\n    for await (const page of this.listResourceUsagePagingPage(\n      resourceGroupName,\n      profileName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the Azure Front Door Standard, Azure Front Door Premium, and CDN profiles within an\n   * Azure subscription.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: ProfilesListOptionalParams\n  ): Promise<ProfilesListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * Lists all of the Azure Front Door Standard, Azure Front Door Premium, and CDN profiles within a\n   * resource group.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: ProfilesListByResourceGroupOptionalParams\n  ): Promise<ProfilesListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Gets an Azure Front Door Standard or Azure Front Door Premium or CDN profile with the specified\n   * profile name under the specified subscription and resource group.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile\n   *                    which is unique within the resource group.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    profileName: string,\n    options?: ProfilesGetOptionalParams\n  ): Promise<ProfilesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates a new Azure Front Door Standard or Azure Front Door Premium or CDN profile with a profile\n   * name under the specified subscription and resource group.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile\n   *                    which is unique within the resource group.\n   * @param profile Profile properties needed to create a new profile.\n   * @param options The options parameters.\n   */\n  async beginCreate(\n    resourceGroupName: string,\n    profileName: string,\n    profile: Profile,\n    options?: ProfilesCreateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ProfilesCreateResponse>,\n      ProfilesCreateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ProfilesCreateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, profileName, profile, options },\n      createOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a new Azure Front Door Standard or Azure Front Door Premium or CDN profile with a profile\n   * name under the specified subscription and resource group.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile\n   *                    which is unique within the resource group.\n   * @param profile Profile properties needed to create a new profile.\n   * @param options The options parameters.\n   */\n  async beginCreateAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    profile: Profile,\n    options?: ProfilesCreateOptionalParams\n  ): Promise<ProfilesCreateResponse> {\n    const poller = await this.beginCreate(\n      resourceGroupName,\n      profileName,\n      profile,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates an existing Azure Front Door Standard or Azure Front Door Premium or CDN profile with the\n   * specified profile name under the specified subscription and resource group.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile\n   *                    which is unique within the resource group.\n   * @param profileUpdateParameters Profile properties needed to update an existing profile.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    profileName: string,\n    profileUpdateParameters: ProfileUpdateParameters,\n    options?: ProfilesUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ProfilesUpdateResponse>,\n      ProfilesUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ProfilesUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, profileName, profileUpdateParameters, options },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates an existing Azure Front Door Standard or Azure Front Door Premium or CDN profile with the\n   * specified profile name under the specified subscription and resource group.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile\n   *                    which is unique within the resource group.\n   * @param profileUpdateParameters Profile properties needed to update an existing profile.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    profileUpdateParameters: ProfileUpdateParameters,\n    options?: ProfilesUpdateOptionalParams\n  ): Promise<ProfilesUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      profileName,\n      profileUpdateParameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes an existing  Azure Front Door Standard or Azure Front Door Premium or CDN profile with the\n   * specified parameters. Deleting a profile will result in the deletion of all of the sub-resources\n   * including endpoints, origins and custom domains.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile\n   *                    which is unique within the resource group.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    profileName: string,\n    options?: ProfilesDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, profileName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes an existing  Azure Front Door Standard or Azure Front Door Premium or CDN profile with the\n   * specified parameters. Deleting a profile will result in the deletion of all of the sub-resources\n   * including endpoints, origins and custom domains.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile\n   *                    which is unique within the resource group.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    options?: ProfilesDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      profileName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Generates a dynamic SSO URI used to sign in to the CDN supplemental portal. Supplemental portal is\n   * used to configure advanced feature capabilities that are not yet available in the Azure portal, such\n   * as core reports in a standard profile; rules engine, advanced HTTP reports, and real-time stats and\n   * alerts in a premium profile. The SSO URI changes approximately every 10 minutes.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param options The options parameters.\n   */\n  generateSsoUri(\n    resourceGroupName: string,\n    profileName: string,\n    options?: ProfilesGenerateSsoUriOptionalParams\n  ): Promise<ProfilesGenerateSsoUriResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, options },\n      generateSsoUriOperationSpec\n    );\n  }\n\n  /**\n   * Gets the supported optimization types for the current profile. A user can create an endpoint with an\n   * optimization type from the listed values.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile\n   *                    which is unique within the resource group.\n   * @param options The options parameters.\n   */\n  listSupportedOptimizationTypes(\n    resourceGroupName: string,\n    profileName: string,\n    options?: ProfilesListSupportedOptimizationTypesOptionalParams\n  ): Promise<ProfilesListSupportedOptimizationTypesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, options },\n      listSupportedOptimizationTypesOperationSpec\n    );\n  }\n\n  /**\n   * Checks the quota and actual usage of endpoints under the given Azure Front Door Standard or Azure\n   * Front Door Premium or CDN profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile\n   *                    which is unique within the resource group.\n   * @param options The options parameters.\n   */\n  private _listResourceUsage(\n    resourceGroupName: string,\n    profileName: string,\n    options?: ProfilesListResourceUsageOptionalParams\n  ): Promise<ProfilesListResourceUsageResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, options },\n      listResourceUsageOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: ProfilesListNextOptionalParams\n  ): Promise<ProfilesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: ProfilesListByResourceGroupNextOptionalParams\n  ): Promise<ProfilesListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListResourceUsageNext\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile\n   *                    which is unique within the resource group.\n   * @param nextLink The nextLink from the previous successful call to the ListResourceUsage method.\n   * @param options The options parameters.\n   */\n  private _listResourceUsageNext(\n    resourceGroupName: string,\n    profileName: string,\n    nextLink: string,\n    options?: ProfilesListResourceUsageNextOptionalParams\n  ): Promise<ProfilesListResourceUsageNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, nextLink, options },\n      listResourceUsageNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Cdn/profiles\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProfileListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProfileListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Profile\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Profile\n    },\n    201: {\n      bodyMapper: Mappers.Profile\n    },\n    202: {\n      bodyMapper: Mappers.Profile\n    },\n    204: {\n      bodyMapper: Mappers.Profile\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.profile,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Profile\n    },\n    201: {\n      bodyMapper: Mappers.Profile\n    },\n    202: {\n      bodyMapper: Mappers.Profile\n    },\n    204: {\n      bodyMapper: Mappers.Profile\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.profileUpdateParameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst generateSsoUriOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/generateSsoUri\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SsoUri\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listSupportedOptimizationTypesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getSupportedOptimizationTypes\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SupportedOptimizationTypesListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listResourceUsageOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/checkResourceUsage\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceUsageListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProfileListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProfileListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listResourceUsageNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceUsageListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Endpoints } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CdnManagementClient } from \"../cdnManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  Endpoint,\n  EndpointsListByProfileNextOptionalParams,\n  EndpointsListByProfileOptionalParams,\n  EndpointsListByProfileResponse,\n  ResourceUsage,\n  EndpointsListResourceUsageNextOptionalParams,\n  EndpointsListResourceUsageOptionalParams,\n  EndpointsListResourceUsageResponse,\n  EndpointsGetOptionalParams,\n  EndpointsGetResponse,\n  EndpointsCreateOptionalParams,\n  EndpointsCreateResponse,\n  EndpointUpdateParameters,\n  EndpointsUpdateOptionalParams,\n  EndpointsUpdateResponse,\n  EndpointsDeleteOptionalParams,\n  EndpointsStartOptionalParams,\n  EndpointsStartResponse,\n  EndpointsStopOptionalParams,\n  EndpointsStopResponse,\n  PurgeParameters,\n  EndpointsPurgeContentOptionalParams,\n  LoadParameters,\n  EndpointsLoadContentOptionalParams,\n  ValidateCustomDomainInput,\n  EndpointsValidateCustomDomainOptionalParams,\n  EndpointsValidateCustomDomainResponse,\n  EndpointsListByProfileNextResponse,\n  EndpointsListResourceUsageNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Endpoints operations. */\nexport class EndpointsImpl implements Endpoints {\n  private readonly client: CdnManagementClient;\n\n  /**\n   * Initialize a new instance of the class Endpoints class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CdnManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists existing CDN endpoints.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param options The options parameters.\n   */\n  public listByProfile(\n    resourceGroupName: string,\n    profileName: string,\n    options?: EndpointsListByProfileOptionalParams\n  ): PagedAsyncIterableIterator<Endpoint> {\n    const iter = this.listByProfilePagingAll(\n      resourceGroupName,\n      profileName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByProfilePagingPage(\n          resourceGroupName,\n          profileName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByProfilePagingPage(\n    resourceGroupName: string,\n    profileName: string,\n    options?: EndpointsListByProfileOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Endpoint[]> {\n    let result: EndpointsListByProfileResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByProfile(\n        resourceGroupName,\n        profileName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByProfileNext(\n        resourceGroupName,\n        profileName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByProfilePagingAll(\n    resourceGroupName: string,\n    profileName: string,\n    options?: EndpointsListByProfileOptionalParams\n  ): AsyncIterableIterator<Endpoint> {\n    for await (const page of this.listByProfilePagingPage(\n      resourceGroupName,\n      profileName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Checks the quota and usage of geo filters and custom domains under the given endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param options The options parameters.\n   */\n  public listResourceUsage(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    options?: EndpointsListResourceUsageOptionalParams\n  ): PagedAsyncIterableIterator<ResourceUsage> {\n    const iter = this.listResourceUsagePagingAll(\n      resourceGroupName,\n      profileName,\n      endpointName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listResourceUsagePagingPage(\n          resourceGroupName,\n          profileName,\n          endpointName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listResourceUsagePagingPage(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    options?: EndpointsListResourceUsageOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ResourceUsage[]> {\n    let result: EndpointsListResourceUsageResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listResourceUsage(\n        resourceGroupName,\n        profileName,\n        endpointName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listResourceUsageNext(\n        resourceGroupName,\n        profileName,\n        endpointName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listResourceUsagePagingAll(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    options?: EndpointsListResourceUsageOptionalParams\n  ): AsyncIterableIterator<ResourceUsage> {\n    for await (const page of this.listResourceUsagePagingPage(\n      resourceGroupName,\n      profileName,\n      endpointName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists existing CDN endpoints.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param options The options parameters.\n   */\n  private _listByProfile(\n    resourceGroupName: string,\n    profileName: string,\n    options?: EndpointsListByProfileOptionalParams\n  ): Promise<EndpointsListByProfileResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, options },\n      listByProfileOperationSpec\n    );\n  }\n\n  /**\n   * Gets an existing CDN endpoint with the specified endpoint name under the specified subscription,\n   * resource group and profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    options?: EndpointsGetOptionalParams\n  ): Promise<EndpointsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, endpointName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates a new CDN endpoint with the specified endpoint name under the specified subscription,\n   * resource group and profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param endpoint Endpoint properties\n   * @param options The options parameters.\n   */\n  async beginCreate(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    endpoint: Endpoint,\n    options?: EndpointsCreateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<EndpointsCreateResponse>,\n      EndpointsCreateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<EndpointsCreateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, profileName, endpointName, endpoint, options },\n      createOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a new CDN endpoint with the specified endpoint name under the specified subscription,\n   * resource group and profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param endpoint Endpoint properties\n   * @param options The options parameters.\n   */\n  async beginCreateAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    endpoint: Endpoint,\n    options?: EndpointsCreateOptionalParams\n  ): Promise<EndpointsCreateResponse> {\n    const poller = await this.beginCreate(\n      resourceGroupName,\n      profileName,\n      endpointName,\n      endpoint,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates an existing CDN endpoint with the specified endpoint name under the specified subscription,\n   * resource group and profile. Only tags can be updated after creating an endpoint. To update origins,\n   * use the Update Origin operation. To update origin groups, use the Update Origin group operation. To\n   * update custom domains, use the Update Custom Domain operation.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param endpointUpdateProperties Endpoint update properties\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    endpointUpdateProperties: EndpointUpdateParameters,\n    options?: EndpointsUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<EndpointsUpdateResponse>,\n      EndpointsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<EndpointsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        profileName,\n        endpointName,\n        endpointUpdateProperties,\n        options\n      },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates an existing CDN endpoint with the specified endpoint name under the specified subscription,\n   * resource group and profile. Only tags can be updated after creating an endpoint. To update origins,\n   * use the Update Origin operation. To update origin groups, use the Update Origin group operation. To\n   * update custom domains, use the Update Custom Domain operation.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param endpointUpdateProperties Endpoint update properties\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    endpointUpdateProperties: EndpointUpdateParameters,\n    options?: EndpointsUpdateOptionalParams\n  ): Promise<EndpointsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      profileName,\n      endpointName,\n      endpointUpdateProperties,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes an existing CDN endpoint with the specified endpoint name under the specified subscription,\n   * resource group and profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    options?: EndpointsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, profileName, endpointName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes an existing CDN endpoint with the specified endpoint name under the specified subscription,\n   * resource group and profile.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    options?: EndpointsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      profileName,\n      endpointName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Starts an existing CDN endpoint that is on a stopped state.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param options The options parameters.\n   */\n  async beginStart(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    options?: EndpointsStartOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<EndpointsStartResponse>,\n      EndpointsStartResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<EndpointsStartResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, profileName, endpointName, options },\n      startOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Starts an existing CDN endpoint that is on a stopped state.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param options The options parameters.\n   */\n  async beginStartAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    options?: EndpointsStartOptionalParams\n  ): Promise<EndpointsStartResponse> {\n    const poller = await this.beginStart(\n      resourceGroupName,\n      profileName,\n      endpointName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Stops an existing running CDN endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param options The options parameters.\n   */\n  async beginStop(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    options?: EndpointsStopOptionalParams\n  ): Promise<\n    PollerLike<PollOperationState<EndpointsStopResponse>, EndpointsStopResponse>\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<EndpointsStopResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, profileName, endpointName, options },\n      stopOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Stops an existing running CDN endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param options The options parameters.\n   */\n  async beginStopAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    options?: EndpointsStopOptionalParams\n  ): Promise<EndpointsStopResponse> {\n    const poller = await this.beginStop(\n      resourceGroupName,\n      profileName,\n      endpointName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Removes a content from CDN.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param contentFilePaths The path to the content to be purged. Path can be a full URL, e.g.\n   *                         '/pictures/city.png' which removes a single file, or a directory with a wildcard, e.g. '/pictures/*'\n   *                         which removes all folders and files in the directory.\n   * @param options The options parameters.\n   */\n  async beginPurgeContent(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    contentFilePaths: PurgeParameters,\n    options?: EndpointsPurgeContentOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        profileName,\n        endpointName,\n        contentFilePaths,\n        options\n      },\n      purgeContentOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Removes a content from CDN.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param contentFilePaths The path to the content to be purged. Path can be a full URL, e.g.\n   *                         '/pictures/city.png' which removes a single file, or a directory with a wildcard, e.g. '/pictures/*'\n   *                         which removes all folders and files in the directory.\n   * @param options The options parameters.\n   */\n  async beginPurgeContentAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    contentFilePaths: PurgeParameters,\n    options?: EndpointsPurgeContentOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginPurgeContent(\n      resourceGroupName,\n      profileName,\n      endpointName,\n      contentFilePaths,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Pre-loads a content to CDN. Available for Verizon Profiles.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param contentFilePaths The path to the content to be loaded. Path should be a full URL, e.g.\n   *                         ‘/pictures/city.png' which loads a single file\n   * @param options The options parameters.\n   */\n  async beginLoadContent(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    contentFilePaths: LoadParameters,\n    options?: EndpointsLoadContentOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        profileName,\n        endpointName,\n        contentFilePaths,\n        options\n      },\n      loadContentOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Pre-loads a content to CDN. Available for Verizon Profiles.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param contentFilePaths The path to the content to be loaded. Path should be a full URL, e.g.\n   *                         ‘/pictures/city.png' which loads a single file\n   * @param options The options parameters.\n   */\n  async beginLoadContentAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    contentFilePaths: LoadParameters,\n    options?: EndpointsLoadContentOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginLoadContent(\n      resourceGroupName,\n      profileName,\n      endpointName,\n      contentFilePaths,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Validates the custom domain mapping to ensure it maps to the correct CDN endpoint in DNS.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param customDomainProperties Custom domain to be validated.\n   * @param options The options parameters.\n   */\n  validateCustomDomain(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    customDomainProperties: ValidateCustomDomainInput,\n    options?: EndpointsValidateCustomDomainOptionalParams\n  ): Promise<EndpointsValidateCustomDomainResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        profileName,\n        endpointName,\n        customDomainProperties,\n        options\n      },\n      validateCustomDomainOperationSpec\n    );\n  }\n\n  /**\n   * Checks the quota and usage of geo filters and custom domains under the given endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param options The options parameters.\n   */\n  private _listResourceUsage(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    options?: EndpointsListResourceUsageOptionalParams\n  ): Promise<EndpointsListResourceUsageResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, endpointName, options },\n      listResourceUsageOperationSpec\n    );\n  }\n\n  /**\n   * ListByProfileNext\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param nextLink The nextLink from the previous successful call to the ListByProfile method.\n   * @param options The options parameters.\n   */\n  private _listByProfileNext(\n    resourceGroupName: string,\n    profileName: string,\n    nextLink: string,\n    options?: EndpointsListByProfileNextOptionalParams\n  ): Promise<EndpointsListByProfileNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, nextLink, options },\n      listByProfileNextOperationSpec\n    );\n  }\n\n  /**\n   * ListResourceUsageNext\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param nextLink The nextLink from the previous successful call to the ListResourceUsage method.\n   * @param options The options parameters.\n   */\n  private _listResourceUsageNext(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    nextLink: string,\n    options?: EndpointsListResourceUsageNextOptionalParams\n  ): Promise<EndpointsListResourceUsageNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, endpointName, nextLink, options },\n      listResourceUsageNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByProfileOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EndpointListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Endpoint\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Endpoint\n    },\n    201: {\n      bodyMapper: Mappers.Endpoint\n    },\n    202: {\n      bodyMapper: Mappers.Endpoint\n    },\n    204: {\n      bodyMapper: Mappers.Endpoint\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.endpoint1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Endpoint\n    },\n    201: {\n      bodyMapper: Mappers.Endpoint\n    },\n    202: {\n      bodyMapper: Mappers.Endpoint\n    },\n    204: {\n      bodyMapper: Mappers.Endpoint\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.endpointUpdateProperties1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst startOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/start\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Endpoint\n    },\n    201: {\n      bodyMapper: Mappers.Endpoint\n    },\n    202: {\n      bodyMapper: Mappers.Endpoint\n    },\n    204: {\n      bodyMapper: Mappers.Endpoint\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst stopOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/stop\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Endpoint\n    },\n    201: {\n      bodyMapper: Mappers.Endpoint\n    },\n    202: {\n      bodyMapper: Mappers.Endpoint\n    },\n    204: {\n      bodyMapper: Mappers.Endpoint\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst purgeContentOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/purge\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.contentFilePaths,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst loadContentOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/load\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.contentFilePaths1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst validateCustomDomainOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/validateCustomDomain\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ValidateCustomDomainOutput\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.customDomainProperties,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst listResourceUsageOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/checkResourceUsage\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceUsageListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByProfileNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EndpointListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listResourceUsageNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceUsageListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.nextLink,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Origins } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CdnManagementClient } from \"../cdnManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  Origin,\n  OriginsListByEndpointNextOptionalParams,\n  OriginsListByEndpointOptionalParams,\n  OriginsListByEndpointResponse,\n  OriginsGetOptionalParams,\n  OriginsGetResponse,\n  OriginsCreateOptionalParams,\n  OriginsCreateResponse,\n  OriginUpdateParameters,\n  OriginsUpdateOptionalParams,\n  OriginsUpdateResponse,\n  OriginsDeleteOptionalParams,\n  OriginsListByEndpointNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Origins operations. */\nexport class OriginsImpl implements Origins {\n  private readonly client: CdnManagementClient;\n\n  /**\n   * Initialize a new instance of the class Origins class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CdnManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the existing origins within an endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param options The options parameters.\n   */\n  public listByEndpoint(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    options?: OriginsListByEndpointOptionalParams\n  ): PagedAsyncIterableIterator<Origin> {\n    const iter = this.listByEndpointPagingAll(\n      resourceGroupName,\n      profileName,\n      endpointName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByEndpointPagingPage(\n          resourceGroupName,\n          profileName,\n          endpointName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByEndpointPagingPage(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    options?: OriginsListByEndpointOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Origin[]> {\n    let result: OriginsListByEndpointResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByEndpoint(\n        resourceGroupName,\n        profileName,\n        endpointName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByEndpointNext(\n        resourceGroupName,\n        profileName,\n        endpointName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByEndpointPagingAll(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    options?: OriginsListByEndpointOptionalParams\n  ): AsyncIterableIterator<Origin> {\n    for await (const page of this.listByEndpointPagingPage(\n      resourceGroupName,\n      profileName,\n      endpointName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the existing origins within an endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param options The options parameters.\n   */\n  private _listByEndpoint(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    options?: OriginsListByEndpointOptionalParams\n  ): Promise<OriginsListByEndpointResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, endpointName, options },\n      listByEndpointOperationSpec\n    );\n  }\n\n  /**\n   * Gets an existing origin within an endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param originName Name of the origin which is unique within the endpoint.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    originName: string,\n    options?: OriginsGetOptionalParams\n  ): Promise<OriginsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, endpointName, originName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates a new origin within the specified endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param originName Name of the origin that is unique within the endpoint.\n   * @param origin Origin properties\n   * @param options The options parameters.\n   */\n  async beginCreate(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    originName: string,\n    origin: Origin,\n    options?: OriginsCreateOptionalParams\n  ): Promise<\n    PollerLike<PollOperationState<OriginsCreateResponse>, OriginsCreateResponse>\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<OriginsCreateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        profileName,\n        endpointName,\n        originName,\n        origin,\n        options\n      },\n      createOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a new origin within the specified endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param originName Name of the origin that is unique within the endpoint.\n   * @param origin Origin properties\n   * @param options The options parameters.\n   */\n  async beginCreateAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    originName: string,\n    origin: Origin,\n    options?: OriginsCreateOptionalParams\n  ): Promise<OriginsCreateResponse> {\n    const poller = await this.beginCreate(\n      resourceGroupName,\n      profileName,\n      endpointName,\n      originName,\n      origin,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates an existing origin within an endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param originName Name of the origin which is unique within the endpoint.\n   * @param originUpdateProperties Origin properties\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    originName: string,\n    originUpdateProperties: OriginUpdateParameters,\n    options?: OriginsUpdateOptionalParams\n  ): Promise<\n    PollerLike<PollOperationState<OriginsUpdateResponse>, OriginsUpdateResponse>\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<OriginsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        profileName,\n        endpointName,\n        originName,\n        originUpdateProperties,\n        options\n      },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates an existing origin within an endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param originName Name of the origin which is unique within the endpoint.\n   * @param originUpdateProperties Origin properties\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    originName: string,\n    originUpdateProperties: OriginUpdateParameters,\n    options?: OriginsUpdateOptionalParams\n  ): Promise<OriginsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      profileName,\n      endpointName,\n      originName,\n      originUpdateProperties,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes an existing origin within an endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param originName Name of the origin which is unique within the endpoint.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    originName: string,\n    options?: OriginsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, profileName, endpointName, originName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes an existing origin within an endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param originName Name of the origin which is unique within the endpoint.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    originName: string,\n    options?: OriginsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      profileName,\n      endpointName,\n      originName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByEndpointNext\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param nextLink The nextLink from the previous successful call to the ListByEndpoint method.\n   * @param options The options parameters.\n   */\n  private _listByEndpointNext(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    nextLink: string,\n    options?: OriginsListByEndpointNextOptionalParams\n  ): Promise<OriginsListByEndpointNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, endpointName, nextLink, options },\n      listByEndpointNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByEndpointOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/origins\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OriginListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/origins/{originName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Origin\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointName,\n    Parameters.originName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/origins/{originName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Origin\n    },\n    201: {\n      bodyMapper: Mappers.Origin\n    },\n    202: {\n      bodyMapper: Mappers.Origin\n    },\n    204: {\n      bodyMapper: Mappers.Origin\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.origin1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointName,\n    Parameters.originName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/origins/{originName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Origin\n    },\n    201: {\n      bodyMapper: Mappers.Origin\n    },\n    202: {\n      bodyMapper: Mappers.Origin\n    },\n    204: {\n      bodyMapper: Mappers.Origin\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.originUpdateProperties1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointName,\n    Parameters.originName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/origins/{originName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointName,\n    Parameters.originName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByEndpointNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OriginListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.nextLink,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { OriginGroups } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CdnManagementClient } from \"../cdnManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  OriginGroup,\n  OriginGroupsListByEndpointNextOptionalParams,\n  OriginGroupsListByEndpointOptionalParams,\n  OriginGroupsListByEndpointResponse,\n  OriginGroupsGetOptionalParams,\n  OriginGroupsGetResponse,\n  OriginGroupsCreateOptionalParams,\n  OriginGroupsCreateResponse,\n  OriginGroupUpdateParameters,\n  OriginGroupsUpdateOptionalParams,\n  OriginGroupsUpdateResponse,\n  OriginGroupsDeleteOptionalParams,\n  OriginGroupsListByEndpointNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing OriginGroups operations. */\nexport class OriginGroupsImpl implements OriginGroups {\n  private readonly client: CdnManagementClient;\n\n  /**\n   * Initialize a new instance of the class OriginGroups class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CdnManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the existing origin groups within an endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param options The options parameters.\n   */\n  public listByEndpoint(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    options?: OriginGroupsListByEndpointOptionalParams\n  ): PagedAsyncIterableIterator<OriginGroup> {\n    const iter = this.listByEndpointPagingAll(\n      resourceGroupName,\n      profileName,\n      endpointName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByEndpointPagingPage(\n          resourceGroupName,\n          profileName,\n          endpointName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByEndpointPagingPage(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    options?: OriginGroupsListByEndpointOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<OriginGroup[]> {\n    let result: OriginGroupsListByEndpointResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByEndpoint(\n        resourceGroupName,\n        profileName,\n        endpointName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByEndpointNext(\n        resourceGroupName,\n        profileName,\n        endpointName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByEndpointPagingAll(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    options?: OriginGroupsListByEndpointOptionalParams\n  ): AsyncIterableIterator<OriginGroup> {\n    for await (const page of this.listByEndpointPagingPage(\n      resourceGroupName,\n      profileName,\n      endpointName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the existing origin groups within an endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param options The options parameters.\n   */\n  private _listByEndpoint(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    options?: OriginGroupsListByEndpointOptionalParams\n  ): Promise<OriginGroupsListByEndpointResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, endpointName, options },\n      listByEndpointOperationSpec\n    );\n  }\n\n  /**\n   * Gets an existing origin group within an endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param originGroupName Name of the origin group which is unique within the endpoint.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    originGroupName: string,\n    options?: OriginGroupsGetOptionalParams\n  ): Promise<OriginGroupsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        profileName,\n        endpointName,\n        originGroupName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates a new origin group within the specified endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param originGroupName Name of the origin group which is unique within the endpoint.\n   * @param originGroup Origin group properties\n   * @param options The options parameters.\n   */\n  async beginCreate(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    originGroupName: string,\n    originGroup: OriginGroup,\n    options?: OriginGroupsCreateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<OriginGroupsCreateResponse>,\n      OriginGroupsCreateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<OriginGroupsCreateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        profileName,\n        endpointName,\n        originGroupName,\n        originGroup,\n        options\n      },\n      createOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a new origin group within the specified endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param originGroupName Name of the origin group which is unique within the endpoint.\n   * @param originGroup Origin group properties\n   * @param options The options parameters.\n   */\n  async beginCreateAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    originGroupName: string,\n    originGroup: OriginGroup,\n    options?: OriginGroupsCreateOptionalParams\n  ): Promise<OriginGroupsCreateResponse> {\n    const poller = await this.beginCreate(\n      resourceGroupName,\n      profileName,\n      endpointName,\n      originGroupName,\n      originGroup,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates an existing origin group within an endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param originGroupName Name of the origin group which is unique within the endpoint.\n   * @param originGroupUpdateProperties Origin group properties\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    originGroupName: string,\n    originGroupUpdateProperties: OriginGroupUpdateParameters,\n    options?: OriginGroupsUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<OriginGroupsUpdateResponse>,\n      OriginGroupsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<OriginGroupsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        profileName,\n        endpointName,\n        originGroupName,\n        originGroupUpdateProperties,\n        options\n      },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates an existing origin group within an endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param originGroupName Name of the origin group which is unique within the endpoint.\n   * @param originGroupUpdateProperties Origin group properties\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    originGroupName: string,\n    originGroupUpdateProperties: OriginGroupUpdateParameters,\n    options?: OriginGroupsUpdateOptionalParams\n  ): Promise<OriginGroupsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      profileName,\n      endpointName,\n      originGroupName,\n      originGroupUpdateProperties,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes an existing origin group within an endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param originGroupName Name of the origin group which is unique within the endpoint.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    originGroupName: string,\n    options?: OriginGroupsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        profileName,\n        endpointName,\n        originGroupName,\n        options\n      },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes an existing origin group within an endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param originGroupName Name of the origin group which is unique within the endpoint.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    originGroupName: string,\n    options?: OriginGroupsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      profileName,\n      endpointName,\n      originGroupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByEndpointNext\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param nextLink The nextLink from the previous successful call to the ListByEndpoint method.\n   * @param options The options parameters.\n   */\n  private _listByEndpointNext(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    nextLink: string,\n    options?: OriginGroupsListByEndpointNextOptionalParams\n  ): Promise<OriginGroupsListByEndpointNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, endpointName, nextLink, options },\n      listByEndpointNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByEndpointOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/originGroups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OriginGroupListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/originGroups/{originGroupName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OriginGroup\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointName,\n    Parameters.originGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/originGroups/{originGroupName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OriginGroup\n    },\n    201: {\n      bodyMapper: Mappers.OriginGroup\n    },\n    202: {\n      bodyMapper: Mappers.OriginGroup\n    },\n    204: {\n      bodyMapper: Mappers.OriginGroup\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.originGroup1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointName,\n    Parameters.originGroupName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/originGroups/{originGroupName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OriginGroup\n    },\n    201: {\n      bodyMapper: Mappers.OriginGroup\n    },\n    202: {\n      bodyMapper: Mappers.OriginGroup\n    },\n    204: {\n      bodyMapper: Mappers.OriginGroup\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.originGroupUpdateProperties1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointName,\n    Parameters.originGroupName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/originGroups/{originGroupName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointName,\n    Parameters.originGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByEndpointNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OriginGroupListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.nextLink,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { CustomDomains } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CdnManagementClient } from \"../cdnManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  CustomDomain,\n  CustomDomainsListByEndpointNextOptionalParams,\n  CustomDomainsListByEndpointOptionalParams,\n  CustomDomainsListByEndpointResponse,\n  CustomDomainsGetOptionalParams,\n  CustomDomainsGetResponse,\n  CustomDomainParameters,\n  CustomDomainsCreateOptionalParams,\n  CustomDomainsCreateResponse,\n  CustomDomainsDeleteOptionalParams,\n  CustomDomainsDisableCustomHttpsOptionalParams,\n  CustomDomainsDisableCustomHttpsResponse,\n  CustomDomainsEnableCustomHttpsOptionalParams,\n  CustomDomainsEnableCustomHttpsResponse,\n  CustomDomainsListByEndpointNextResponse,\n  Profile,\n  CdnManagedHttpsParameters\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing CustomDomains operations. */\nexport class CustomDomainsImpl implements CustomDomains {\n  private readonly client: CdnManagementClient;\n\n  /**\n   * Initialize a new instance of the class CustomDomains class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CdnManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the existing custom domains within an endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param options The options parameters.\n   */\n  public listByEndpoint(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    options?: CustomDomainsListByEndpointOptionalParams\n  ): PagedAsyncIterableIterator<CustomDomain> {\n    const iter = this.listByEndpointPagingAll(\n      resourceGroupName,\n      profileName,\n      endpointName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByEndpointPagingPage(\n          resourceGroupName,\n          profileName,\n          endpointName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByEndpointPagingPage(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    options?: CustomDomainsListByEndpointOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<CustomDomain[]> {\n    let result: CustomDomainsListByEndpointResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByEndpoint(\n        resourceGroupName,\n        profileName,\n        endpointName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByEndpointNext(\n        resourceGroupName,\n        profileName,\n        endpointName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByEndpointPagingAll(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    options?: CustomDomainsListByEndpointOptionalParams\n  ): AsyncIterableIterator<CustomDomain> {\n    for await (const page of this.listByEndpointPagingPage(\n      resourceGroupName,\n      profileName,\n      endpointName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the existing custom domains within an endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param options The options parameters.\n   */\n  private _listByEndpoint(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    options?: CustomDomainsListByEndpointOptionalParams\n  ): Promise<CustomDomainsListByEndpointResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, endpointName, options },\n      listByEndpointOperationSpec\n    );\n  }\n\n  /**\n   * Gets an existing custom domain within an endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param customDomainName Name of the custom domain within an endpoint.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    customDomainName: string,\n    options?: CustomDomainsGetOptionalParams\n  ): Promise<CustomDomainsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        profileName,\n        endpointName,\n        customDomainName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates a new custom domain within an endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param customDomainName Name of the custom domain within an endpoint.\n   * @param customDomainProperties Properties required to create a new custom domain.\n   * @param options The options parameters.\n   */\n  async beginCreate(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    customDomainName: string,\n    customDomainProperties: CustomDomainParameters,\n    options?: CustomDomainsCreateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<CustomDomainsCreateResponse>,\n      CustomDomainsCreateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<CustomDomainsCreateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        profileName,\n        endpointName,\n        customDomainName,\n        customDomainProperties,\n        options\n      },\n      createOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a new custom domain within an endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param customDomainName Name of the custom domain within an endpoint.\n   * @param customDomainProperties Properties required to create a new custom domain.\n   * @param options The options parameters.\n   */\n  async beginCreateAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    customDomainName: string,\n    customDomainProperties: CustomDomainParameters,\n    options?: CustomDomainsCreateOptionalParams\n  ): Promise<CustomDomainsCreateResponse> {\n    const poller = await this.beginCreate(\n      resourceGroupName,\n      profileName,\n      endpointName,\n      customDomainName,\n      customDomainProperties,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes an existing custom domain within an endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param customDomainName Name of the custom domain within an endpoint.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    customDomainName: string,\n    options?: CustomDomainsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        profileName,\n        endpointName,\n        customDomainName,\n        options\n      },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes an existing custom domain within an endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param customDomainName Name of the custom domain within an endpoint.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    customDomainName: string,\n    options?: CustomDomainsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      profileName,\n      endpointName,\n      customDomainName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Disable https delivery of the custom domain.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param customDomainName Name of the custom domain within an endpoint.\n   * @param options The options parameters.\n   */\n  async beginDisableCustomHttps(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    customDomainName: string,\n    options?: CustomDomainsDisableCustomHttpsOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<CustomDomainsDisableCustomHttpsResponse>,\n      CustomDomainsDisableCustomHttpsResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<CustomDomainsDisableCustomHttpsResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        profileName,\n        endpointName,\n        customDomainName,\n        options\n      },\n      disableCustomHttpsOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Disable https delivery of the custom domain.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param customDomainName Name of the custom domain within an endpoint.\n   * @param options The options parameters.\n   */\n  async beginDisableCustomHttpsAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    customDomainName: string,\n    options?: CustomDomainsDisableCustomHttpsOptionalParams\n  ): Promise<CustomDomainsDisableCustomHttpsResponse> {\n    const poller = await this.beginDisableCustomHttps(\n      resourceGroupName,\n      profileName,\n      endpointName,\n      customDomainName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Enable https delivery of the custom domain.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param customDomainName Name of the custom domain within an endpoint.\n   * @param options The options parameters.\n   */\n  async beginEnableCustomHttps(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    customDomainName: string,\n    options?: CustomDomainsEnableCustomHttpsOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<CustomDomainsEnableCustomHttpsResponse>,\n      CustomDomainsEnableCustomHttpsResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<CustomDomainsEnableCustomHttpsResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    // #region Added default values to add backwards compatibility\n    let newOptions: CustomDomainsEnableCustomHttpsOptionalParams = options ? options : {};\n    if (!newOptions.customDomainHttpsParameters) {\n      const profile = await this.client.profiles.get(resourceGroupName, profileName);\n      newOptions.customDomainHttpsParameters = getDefaultCustomDomainHttpsParameters(profile);\n    }\n    options = newOptions;\n    // #endregion\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        profileName,\n        endpointName,\n        customDomainName,\n        options\n      },\n      enableCustomHttpsOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Enable https delivery of the custom domain.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param customDomainName Name of the custom domain within an endpoint.\n   * @param options The options parameters.\n   */\n  async beginEnableCustomHttpsAndWait(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    customDomainName: string,\n    options?: CustomDomainsEnableCustomHttpsOptionalParams\n  ): Promise<CustomDomainsEnableCustomHttpsResponse> {\n    const poller = await this.beginEnableCustomHttps(\n      resourceGroupName,\n      profileName,\n      endpointName,\n      customDomainName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByEndpointNext\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param profileName Name of the CDN profile which is unique within the resource group.\n   * @param endpointName Name of the endpoint under the profile which is unique globally.\n   * @param nextLink The nextLink from the previous successful call to the ListByEndpoint method.\n   * @param options The options parameters.\n   */\n  private _listByEndpointNext(\n    resourceGroupName: string,\n    profileName: string,\n    endpointName: string,\n    nextLink: string,\n    options?: CustomDomainsListByEndpointNextOptionalParams\n  ): Promise<CustomDomainsListByEndpointNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, endpointName, nextLink, options },\n      listByEndpointNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByEndpointOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CustomDomainListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CustomDomain\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.customDomainName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CustomDomain\n    },\n    201: {\n      bodyMapper: Mappers.CustomDomain\n    },\n    202: {\n      bodyMapper: Mappers.CustomDomain\n    },\n    204: {\n      bodyMapper: Mappers.CustomDomain\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.customDomainProperties1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.customDomainName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.customDomainName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst disableCustomHttpsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}/disableCustomHttps\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CustomDomain\n    },\n    201: {\n      bodyMapper: Mappers.CustomDomain\n    },\n    202: {\n      bodyMapper: Mappers.CustomDomain\n    },\n    204: {\n      bodyMapper: Mappers.CustomDomain\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.customDomainName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst enableCustomHttpsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}/enableCustomHttps\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CustomDomain\n    },\n    201: {\n      bodyMapper: Mappers.CustomDomain\n    },\n    202: {\n      bodyMapper: Mappers.CustomDomain\n    },\n    204: {\n      bodyMapper: Mappers.CustomDomain\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.customDomainHttpsParameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.customDomainName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst listByEndpointNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CustomDomainListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.nextLink,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n\n// #region Added default values to add backwards compatibility\nclass SkuNames {\n  public static get standard_microsoft() { return \"Standard_Microsoft\"; }\n  public static get standard_verizon() { return \"Standard_Verizon\"; }\n  public static get standard_akamai() { return \"Standard_Akamai\"; }\n}\n\nfunction getDefaultCustomDomainHttpsParameters(profile: Profile): CdnManagedHttpsParameters | undefined {\n  switch (profile.sku.name) {\n    case SkuNames.standard_microsoft:\n      return {\n        certificateSource: \"Cdn\",\n        certificateSourceParameters: {\n          certificateType: \"Dedicated\",\n          typeName: \"CdnCertificateSourceParameters\"\n        },\n        protocolType: \"ServerNameIndication\"\n      }\n    case SkuNames.standard_akamai:\n      return {\n        certificateSource: \"Cdn\",\n        certificateSourceParameters: {\n          certificateType: \"Shared\",\n          typeName: \"CdnCertificateSourceParameters\"\n        },\n        protocolType: \"ServerNameIndication\"\n      }\n    case SkuNames.standard_verizon:\n      return {\n        certificateSource: \"Cdn\",\n        certificateSourceParameters: {\n          certificateType: \"Shared\",\n          typeName: \"CdnCertificateSourceParameters\"\n        },\n        protocolType: \"IPBased\"\n      }\n    default:\n      return undefined;\n  }\n}\n\n// #endregion\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ResourceUsageOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CdnManagementClient } from \"../cdnManagementClient\";\nimport {\n  ResourceUsage,\n  ResourceUsageListNextOptionalParams,\n  ResourceUsageListOptionalParams,\n  ResourceUsageListResponse,\n  ResourceUsageListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ResourceUsageOperations operations. */\nexport class ResourceUsageOperationsImpl implements ResourceUsageOperations {\n  private readonly client: CdnManagementClient;\n\n  /**\n   * Initialize a new instance of the class ResourceUsageOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CdnManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Check the quota and actual usage of the CDN profiles under the given subscription.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: ResourceUsageListOptionalParams\n  ): PagedAsyncIterableIterator<ResourceUsage> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: ResourceUsageListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ResourceUsage[]> {\n    let result: ResourceUsageListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: ResourceUsageListOptionalParams\n  ): AsyncIterableIterator<ResourceUsage> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Check the quota and actual usage of the CDN profiles under the given subscription.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: ResourceUsageListOptionalParams\n  ): Promise<ResourceUsageListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: ResourceUsageListNextOptionalParams\n  ): Promise<ResourceUsageListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Cdn/checkResourceUsage\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceUsageListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceUsageListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Operations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CdnManagementClient } from \"../cdnManagementClient\";\nimport {\n  Operation,\n  OperationsListNextOptionalParams,\n  OperationsListOptionalParams,\n  OperationsListResponse,\n  OperationsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Operations operations. */\nexport class OperationsImpl implements Operations {\n  private readonly client: CdnManagementClient;\n\n  /**\n   * Initialize a new instance of the class Operations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CdnManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the available CDN REST API operations.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: OperationsListOptionalParams\n  ): PagedAsyncIterableIterator<Operation> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: OperationsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Operation[]> {\n    let result: OperationsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: OperationsListOptionalParams\n  ): AsyncIterableIterator<Operation> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the available CDN REST API operations.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: OperationsListOptionalParams\n  ): Promise<OperationsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: OperationsListNextOptionalParams\n  ): Promise<OperationsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Cdn/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { EdgeNodes } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CdnManagementClient } from \"../cdnManagementClient\";\nimport {\n  EdgeNode,\n  EdgeNodesListNextOptionalParams,\n  EdgeNodesListOptionalParams,\n  EdgeNodesListResponse,\n  EdgeNodesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing EdgeNodes operations. */\nexport class EdgeNodesImpl implements EdgeNodes {\n  private readonly client: CdnManagementClient;\n\n  /**\n   * Initialize a new instance of the class EdgeNodes class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CdnManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Edgenodes are the global Point of Presence (POP) locations used to deliver CDN content to end users.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: EdgeNodesListOptionalParams\n  ): PagedAsyncIterableIterator<EdgeNode> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: EdgeNodesListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<EdgeNode[]> {\n    let result: EdgeNodesListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: EdgeNodesListOptionalParams\n  ): AsyncIterableIterator<EdgeNode> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Edgenodes are the global Point of Presence (POP) locations used to deliver CDN content to end users.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: EdgeNodesListOptionalParams\n  ): Promise<EdgeNodesListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: EdgeNodesListNextOptionalParams\n  ): Promise<EdgeNodesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Cdn/edgenodes\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EdgenodeResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EdgenodeResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Policies } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CdnManagementClient } from \"../cdnManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  CdnWebApplicationFirewallPolicy,\n  PoliciesListNextOptionalParams,\n  PoliciesListOptionalParams,\n  PoliciesListResponse,\n  PoliciesGetOptionalParams,\n  PoliciesGetResponse,\n  PoliciesCreateOrUpdateOptionalParams,\n  PoliciesCreateOrUpdateResponse,\n  CdnWebApplicationFirewallPolicyPatchParameters,\n  PoliciesUpdateOptionalParams,\n  PoliciesUpdateResponse,\n  PoliciesDeleteOptionalParams,\n  PoliciesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Policies operations. */\nexport class PoliciesImpl implements Policies {\n  private readonly client: CdnManagementClient;\n\n  /**\n   * Initialize a new instance of the class Policies class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CdnManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the protection policies within a resource group.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    options?: PoliciesListOptionalParams\n  ): PagedAsyncIterableIterator<CdnWebApplicationFirewallPolicy> {\n    const iter = this.listPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(resourceGroupName, options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    options?: PoliciesListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<CdnWebApplicationFirewallPolicy[]> {\n    let result: PoliciesListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    options?: PoliciesListOptionalParams\n  ): AsyncIterableIterator<CdnWebApplicationFirewallPolicy> {\n    for await (const page of this.listPagingPage(resourceGroupName, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the protection policies within a resource group.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    options?: PoliciesListOptionalParams\n  ): Promise<PoliciesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Retrieve protection policy with specified name within a resource group.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param policyName The name of the CdnWebApplicationFirewallPolicy.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    policyName: string,\n    options?: PoliciesGetOptionalParams\n  ): Promise<PoliciesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, policyName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or update policy with specified rule set name within a resource group.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param policyName The name of the CdnWebApplicationFirewallPolicy.\n   * @param cdnWebApplicationFirewallPolicy Policy to be created.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    policyName: string,\n    cdnWebApplicationFirewallPolicy: CdnWebApplicationFirewallPolicy,\n    options?: PoliciesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<PoliciesCreateOrUpdateResponse>,\n      PoliciesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<PoliciesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        policyName,\n        cdnWebApplicationFirewallPolicy,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create or update policy with specified rule set name within a resource group.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param policyName The name of the CdnWebApplicationFirewallPolicy.\n   * @param cdnWebApplicationFirewallPolicy Policy to be created.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    policyName: string,\n    cdnWebApplicationFirewallPolicy: CdnWebApplicationFirewallPolicy,\n    options?: PoliciesCreateOrUpdateOptionalParams\n  ): Promise<PoliciesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      policyName,\n      cdnWebApplicationFirewallPolicy,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Update an existing CdnWebApplicationFirewallPolicy with the specified policy name under the\n   * specified subscription and resource group\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param policyName The name of the CdnWebApplicationFirewallPolicy.\n   * @param cdnWebApplicationFirewallPolicyPatchParameters CdnWebApplicationFirewallPolicy parameters to\n   *                                                       be patched.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    policyName: string,\n    cdnWebApplicationFirewallPolicyPatchParameters: CdnWebApplicationFirewallPolicyPatchParameters,\n    options?: PoliciesUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<PoliciesUpdateResponse>,\n      PoliciesUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<PoliciesUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        policyName,\n        cdnWebApplicationFirewallPolicyPatchParameters,\n        options\n      },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Update an existing CdnWebApplicationFirewallPolicy with the specified policy name under the\n   * specified subscription and resource group\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param policyName The name of the CdnWebApplicationFirewallPolicy.\n   * @param cdnWebApplicationFirewallPolicyPatchParameters CdnWebApplicationFirewallPolicy parameters to\n   *                                                       be patched.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    policyName: string,\n    cdnWebApplicationFirewallPolicyPatchParameters: CdnWebApplicationFirewallPolicyPatchParameters,\n    options?: PoliciesUpdateOptionalParams\n  ): Promise<PoliciesUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      policyName,\n      cdnWebApplicationFirewallPolicyPatchParameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes Policy\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param policyName The name of the CdnWebApplicationFirewallPolicy.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    policyName: string,\n    options?: PoliciesDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, policyName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: PoliciesListNextOptionalParams\n  ): Promise<PoliciesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/cdnWebApplicationFirewallPolicies\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CdnWebApplicationFirewallPolicyList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/cdnWebApplicationFirewallPolicies/{policyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CdnWebApplicationFirewallPolicy\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName1,\n    Parameters.policyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/cdnWebApplicationFirewallPolicies/{policyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CdnWebApplicationFirewallPolicy\n    },\n    201: {\n      bodyMapper: Mappers.CdnWebApplicationFirewallPolicy\n    },\n    202: {\n      bodyMapper: Mappers.CdnWebApplicationFirewallPolicy\n    },\n    204: {\n      bodyMapper: Mappers.CdnWebApplicationFirewallPolicy\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.cdnWebApplicationFirewallPolicy,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName1,\n    Parameters.policyName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/cdnWebApplicationFirewallPolicies/{policyName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CdnWebApplicationFirewallPolicy\n    },\n    201: {\n      bodyMapper: Mappers.CdnWebApplicationFirewallPolicy\n    },\n    202: {\n      bodyMapper: Mappers.CdnWebApplicationFirewallPolicy\n    },\n    204: {\n      bodyMapper: Mappers.CdnWebApplicationFirewallPolicy\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.cdnWebApplicationFirewallPolicyPatchParameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName1,\n    Parameters.policyName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/cdnWebApplicationFirewallPolicies/{policyName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName1,\n    Parameters.policyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CdnWebApplicationFirewallPolicyList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.resourceGroupName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ManagedRuleSets } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CdnManagementClient } from \"../cdnManagementClient\";\nimport {\n  ManagedRuleSetDefinition,\n  ManagedRuleSetsListNextOptionalParams,\n  ManagedRuleSetsListOptionalParams,\n  ManagedRuleSetsListResponse,\n  ManagedRuleSetsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ManagedRuleSets operations. */\nexport class ManagedRuleSetsImpl implements ManagedRuleSets {\n  private readonly client: CdnManagementClient;\n\n  /**\n   * Initialize a new instance of the class ManagedRuleSets class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CdnManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all available managed rule sets.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: ManagedRuleSetsListOptionalParams\n  ): PagedAsyncIterableIterator<ManagedRuleSetDefinition> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: ManagedRuleSetsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ManagedRuleSetDefinition[]> {\n    let result: ManagedRuleSetsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: ManagedRuleSetsListOptionalParams\n  ): AsyncIterableIterator<ManagedRuleSetDefinition> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all available managed rule sets.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: ManagedRuleSetsListOptionalParams\n  ): Promise<ManagedRuleSetsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: ManagedRuleSetsListNextOptionalParams\n  ): Promise<ManagedRuleSetsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Cdn/cdnWebApplicationFirewallManagedRuleSets\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedRuleSetDefinitionList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedRuleSetDefinitionList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest\n} from \"@azure/core-rest-pipeline\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport {\n  AfdProfilesImpl,\n  AfdCustomDomainsImpl,\n  AfdEndpointsImpl,\n  AfdOriginGroupsImpl,\n  AfdOriginsImpl,\n  RoutesImpl,\n  RuleSetsImpl,\n  RulesImpl,\n  SecurityPoliciesImpl,\n  SecretsImpl,\n  ValidateImpl,\n  LogAnalyticsImpl,\n  ProfilesImpl,\n  EndpointsImpl,\n  OriginsImpl,\n  OriginGroupsImpl,\n  CustomDomainsImpl,\n  ResourceUsageOperationsImpl,\n  OperationsImpl,\n  EdgeNodesImpl,\n  PoliciesImpl,\n  ManagedRuleSetsImpl\n} from \"./operations\";\nimport {\n  AfdProfiles,\n  AfdCustomDomains,\n  AfdEndpoints,\n  AfdOriginGroups,\n  AfdOrigins,\n  Routes,\n  RuleSets,\n  Rules,\n  SecurityPolicies,\n  Secrets,\n  Validate,\n  LogAnalytics,\n  Profiles,\n  Endpoints,\n  Origins,\n  OriginGroups,\n  CustomDomains,\n  ResourceUsageOperations,\n  Operations,\n  EdgeNodes,\n  Policies,\n  ManagedRuleSets\n} from \"./operationsInterfaces\";\nimport * as Parameters from \"./models/parameters\";\nimport * as Mappers from \"./models/mappers\";\nimport {\n  CdnManagementClientOptionalParams,\n  CheckEndpointNameAvailabilityInput,\n  CheckEndpointNameAvailabilityOptionalParams,\n  CheckEndpointNameAvailabilityResponse,\n  CheckNameAvailabilityInput,\n  CheckNameAvailabilityOptionalParams,\n  CheckNameAvailabilityResponse,\n  CheckNameAvailabilityWithSubscriptionOptionalParams,\n  CheckNameAvailabilityWithSubscriptionResponse,\n  ValidateProbeInput,\n  ValidateProbeOptionalParams,\n  ValidateProbeResponse\n} from \"./models\";\n\nexport class CdnManagementClient extends coreClient.ServiceClient {\n  $host: string;\n  subscriptionId: string;\n  apiVersion: string;\n\n  /**\n   * Initializes a new instance of the CdnManagementClient class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param subscriptionId Azure Subscription ID.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    subscriptionId: string,\n    options?: CdnManagementClientOptionalParams\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n    if (subscriptionId === undefined) {\n      throw new Error(\"'subscriptionId' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: CdnManagementClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials\n    };\n\n    const packageDetails = `azsdk-js-arm-cdn/8.0.0`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      endpoint:\n        options.endpoint ?? options.baseUri ?? \"https://management.azure.com\"\n    };\n    super(optionsWithDefaults);\n\n    let bearerTokenAuthenticationPolicyFound: boolean = false;\n    if (options?.pipeline && options.pipeline.getOrderedPolicies().length > 0) {\n      const pipelinePolicies: coreRestPipeline.PipelinePolicy[] = options.pipeline.getOrderedPolicies();\n      bearerTokenAuthenticationPolicyFound = pipelinePolicies.some(\n        (pipelinePolicy) =>\n          pipelinePolicy.name ===\n          coreRestPipeline.bearerTokenAuthenticationPolicyName\n      );\n    }\n    if (\n      !options ||\n      !options.pipeline ||\n      options.pipeline.getOrderedPolicies().length == 0 ||\n      !bearerTokenAuthenticationPolicyFound\n    ) {\n      this.pipeline.removePolicy({\n        name: coreRestPipeline.bearerTokenAuthenticationPolicyName\n      });\n      this.pipeline.addPolicy(\n        coreRestPipeline.bearerTokenAuthenticationPolicy({\n          credential: credentials,\n          scopes:\n            optionsWithDefaults.credentialScopes ??\n            `${optionsWithDefaults.endpoint}/.default`,\n          challengeCallbacks: {\n            authorizeRequestOnChallenge:\n              coreClient.authorizeRequestOnClaimChallenge\n          }\n        })\n      );\n    }\n    // Parameter assignments\n    this.subscriptionId = subscriptionId;\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n    this.apiVersion = options.apiVersion || \"2021-06-01\";\n    this.afdProfiles = new AfdProfilesImpl(this);\n    this.afdCustomDomains = new AfdCustomDomainsImpl(this);\n    this.afdEndpoints = new AfdEndpointsImpl(this);\n    this.afdOriginGroups = new AfdOriginGroupsImpl(this);\n    this.afdOrigins = new AfdOriginsImpl(this);\n    this.routes = new RoutesImpl(this);\n    this.ruleSets = new RuleSetsImpl(this);\n    this.rules = new RulesImpl(this);\n    this.securityPolicies = new SecurityPoliciesImpl(this);\n    this.secrets = new SecretsImpl(this);\n    this.validate = new ValidateImpl(this);\n    this.logAnalytics = new LogAnalyticsImpl(this);\n    this.profiles = new ProfilesImpl(this);\n    this.endpoints = new EndpointsImpl(this);\n    this.origins = new OriginsImpl(this);\n    this.originGroups = new OriginGroupsImpl(this);\n    this.customDomains = new CustomDomainsImpl(this);\n    this.resourceUsageOperations = new ResourceUsageOperationsImpl(this);\n    this.operations = new OperationsImpl(this);\n    this.edgeNodes = new EdgeNodesImpl(this);\n    this.policies = new PoliciesImpl(this);\n    this.managedRuleSets = new ManagedRuleSetsImpl(this);\n    this.addCustomApiVersionPolicy(options.apiVersion);\n  }\n\n  /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */\n  private addCustomApiVersionPolicy(apiVersion?: string) {\n    if (!apiVersion) {\n      return;\n    }\n    const apiVersionPolicy = {\n      name: \"CustomApiVersionPolicy\",\n      async sendRequest(\n        request: PipelineRequest,\n        next: SendRequest\n      ): Promise<PipelineResponse> {\n        const param = request.url.split(\"?\");\n        if (param.length > 1) {\n          const newParams = param[1].split(\"&\").map((item) => {\n            if (item.indexOf(\"api-version\") > -1) {\n              return \"api-version=\" + apiVersion;\n            } else {\n              return item;\n            }\n          });\n          request.url = param[0] + \"?\" + newParams.join(\"&\");\n        }\n        return next(request);\n      }\n    };\n    this.pipeline.addPolicy(apiVersionPolicy);\n  }\n\n  /**\n   * Check the availability of a resource name. This is needed for resources where name is globally\n   * unique, such as a afdx endpoint.\n   * @param resourceGroupName Name of the Resource group within the Azure subscription.\n   * @param checkEndpointNameAvailabilityInput Input to check.\n   * @param options The options parameters.\n   */\n  checkEndpointNameAvailability(\n    resourceGroupName: string,\n    checkEndpointNameAvailabilityInput: CheckEndpointNameAvailabilityInput,\n    options?: CheckEndpointNameAvailabilityOptionalParams\n  ): Promise<CheckEndpointNameAvailabilityResponse> {\n    return this.sendOperationRequest(\n      { resourceGroupName, checkEndpointNameAvailabilityInput, options },\n      checkEndpointNameAvailabilityOperationSpec\n    );\n  }\n\n  /**\n   * Check the availability of a resource name. This is needed for resources where name is globally\n   * unique, such as a CDN endpoint.\n   * @param checkNameAvailabilityInput Input to check.\n   * @param options The options parameters.\n   */\n  checkNameAvailability(\n    checkNameAvailabilityInput: CheckNameAvailabilityInput,\n    options?: CheckNameAvailabilityOptionalParams\n  ): Promise<CheckNameAvailabilityResponse> {\n    return this.sendOperationRequest(\n      { checkNameAvailabilityInput, options },\n      checkNameAvailabilityOperationSpec\n    );\n  }\n\n  /**\n   * Check the availability of a resource name. This is needed for resources where name is globally\n   * unique, such as a CDN endpoint.\n   * @param checkNameAvailabilityInput Input to check.\n   * @param options The options parameters.\n   */\n  checkNameAvailabilityWithSubscription(\n    checkNameAvailabilityInput: CheckNameAvailabilityInput,\n    options?: CheckNameAvailabilityWithSubscriptionOptionalParams\n  ): Promise<CheckNameAvailabilityWithSubscriptionResponse> {\n    return this.sendOperationRequest(\n      { checkNameAvailabilityInput, options },\n      checkNameAvailabilityWithSubscriptionOperationSpec\n    );\n  }\n\n  /**\n   * Check if the probe path is a valid path and the file can be accessed. Probe path is the path to a\n   * file hosted on the origin server to help accelerate the delivery of dynamic content via the CDN\n   * endpoint. This path is relative to the origin path specified in the endpoint configuration.\n   * @param validateProbeInput Input to check.\n   * @param options The options parameters.\n   */\n  validateProbe(\n    validateProbeInput: ValidateProbeInput,\n    options?: ValidateProbeOptionalParams\n  ): Promise<ValidateProbeResponse> {\n    return this.sendOperationRequest(\n      { validateProbeInput, options },\n      validateProbeOperationSpec\n    );\n  }\n\n  afdProfiles: AfdProfiles;\n  afdCustomDomains: AfdCustomDomains;\n  afdEndpoints: AfdEndpoints;\n  afdOriginGroups: AfdOriginGroups;\n  afdOrigins: AfdOrigins;\n  routes: Routes;\n  ruleSets: RuleSets;\n  rules: Rules;\n  securityPolicies: SecurityPolicies;\n  secrets: Secrets;\n  validate: Validate;\n  logAnalytics: LogAnalytics;\n  profiles: Profiles;\n  endpoints: Endpoints;\n  origins: Origins;\n  originGroups: OriginGroups;\n  customDomains: CustomDomains;\n  resourceUsageOperations: ResourceUsageOperations;\n  operations: Operations;\n  edgeNodes: EdgeNodes;\n  policies: Policies;\n  managedRuleSets: ManagedRuleSets;\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst checkEndpointNameAvailabilityOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/checkEndpointNameAvailability\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CheckEndpointNameAvailabilityOutput\n    },\n    default: {\n      bodyMapper: Mappers.AfdErrorResponse\n    }\n  },\n  requestBody: Parameters.checkEndpointNameAvailabilityInput,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst checkNameAvailabilityOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Cdn/checkNameAvailability\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CheckNameAvailabilityOutput\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.checkNameAvailabilityInput,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst checkNameAvailabilityWithSubscriptionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Cdn/checkNameAvailability\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CheckNameAvailabilityOutput\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.checkNameAvailabilityInput,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst validateProbeOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Cdn/validateProbe\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ValidateProbeOutput\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.validateProbeInput,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\n"],"names":["KnownResourceType","KnownAutoGeneratedDomainNameLabelScope","KnownUsageUnit","KnownDomainValidationState","KnownAfdCertificateType","KnownAfdProvisioningState","KnownDeploymentStatus","KnownIdentityType","KnownEnabledState","KnownAFDEndpointProtocols","KnownAfdQueryStringCachingBehavior","KnownForwardingProtocol","KnownLinkToDefaultDomain","KnownHttpsRedirect","KnownMatchVariable","KnownDeliveryRuleAction","KnownMatchProcessingBehavior","KnownSecurityPolicyType","KnownSecretType","KnownStatus","KnownLogMetric","KnownLogMetricsGranularity","KnownLogMetricsGroupBy","KnownMetricsResponseGranularity","KnownMetricsResponseSeriesItemUnit","KnownLogRanking","KnownLogRankingMetric","KnownWafMetric","KnownWafGranularity","KnownWafAction","KnownWafRankingGroupBy","KnownWafRuleType","KnownWafMetricsResponseGranularity","KnownWafRankingType","KnownSkuName","KnownProfileResourceState","KnownProfileProvisioningState","KnownOptimizationType","KnownResourceUsageUnit","KnownPrivateEndpointStatus","KnownEndpointResourceState","KnownEndpointProvisioningState","KnownOriginResourceState","KnownOriginProvisioningState","KnownOriginGroupResourceState","KnownOriginGroupProvisioningState","KnownCustomDomainResourceState","KnownCustomHttpsProvisioningState","KnownCustomHttpsProvisioningSubstate","KnownCertificateSource","KnownProtocolType","KnownPolicyEnabledState","KnownPolicyMode","KnownPolicySettingsDefaultCustomBlockResponseStatusCode","KnownCustomRuleEnabledState","KnownWafMatchVariable","KnownOperator","KnownTransformType","KnownActionType","KnownManagedRuleEnabledState","KnownProvisioningState","KnownPolicyResourceState","KnownRemoteAddressOperator","KnownTransform","KnownRequestMethodOperator","KnownRequestMethodMatchConditionParametersMatchValuesItem","KnownQueryStringOperator","KnownPostArgsOperator","KnownRequestUriOperator","KnownRequestHeaderOperator","KnownRequestBodyOperator","KnownRequestSchemeMatchConditionParametersMatchValuesItem","KnownUrlPathOperator","KnownUrlFileExtensionOperator","KnownUrlFileNameOperator","KnownHttpVersionOperator","KnownCookiesOperator","KnownIsDeviceOperator","KnownIsDeviceMatchConditionParametersMatchValuesItem","KnownSocketAddrOperator","KnownClientPortOperator","KnownServerPortOperator","KnownHostNameOperator","KnownSslProtocolOperator","KnownSslProtocol","KnownRedirectType","KnownDestinationProtocol","KnownAlgorithm","KnownParamIndicator","KnownHeaderAction","KnownCacheBehavior","KnownCacheType","KnownQueryStringBehavior","KnownRuleQueryStringCachingBehavior","KnownRuleIsCompressionEnabled","KnownRuleCacheBehavior","KnownCertificateType","KnownUpdateRule","KnownDeleteRule","CheckEndpointNameAvailabilityInputMapper","CheckNameAvailabilityInputMapper","ValidateProbeInputMapper","CheckHostNameAvailabilityInputMapper","AFDDomainMapper","AFDDomainUpdateParametersMapper","AFDEndpointMapper","AFDEndpointUpdateParametersMapper","AfdPurgeParametersMapper","ValidateCustomDomainInputMapper","AFDOriginGroupMapper","AFDOriginGroupUpdateParametersMapper","AFDOriginMapper","AFDOriginUpdateParametersMapper","RouteMapper","RouteUpdateParametersMapper","RuleMapper","RuleUpdateParametersMapper","SecurityPolicyMapper","SecurityPolicyUpdateParametersMapper","SecretMapper","ValidateSecretInputMapper","ProfileMapper","ProfileUpdateParametersMapper","EndpointMapper","EndpointUpdateParametersMapper","PurgeParametersMapper","LoadParametersMapper","OriginMapper","OriginUpdateParametersMapper","OriginGroupMapper","OriginGroupUpdateParametersMapper","CustomDomainParametersMapper","CustomDomainHttpsParametersMapper","CdnWebApplicationFirewallPolicyMapper","CdnWebApplicationFirewallPolicyPatchParametersMapper","__await","__asyncValues","__asyncDelegator","listResourceUsageOperationSpec","listResourceUsageNextOperationSpec","serializer","coreClient","Mappers.UsagesListResult","Mappers.AfdErrorResponse","Parameters.apiVersion","Parameters.$host","Parameters.subscriptionId","Parameters.resourceGroupName","Parameters.profileName","Parameters.accept","Mappers.CheckNameAvailabilityOutput","Parameters.checkHostNameAvailabilityInput","Parameters.contentType","Parameters.nextLink","__rest","listByProfileOperationSpec","getOperationSpec","__awaiter","createOperationSpec","LroEngine","updateOperationSpec","deleteOperationSpec","listByProfileNextOperationSpec","Mappers.AFDDomainListResult","Mappers.AFDDomain","Parameters.customDomainName","Parameters.customDomain","Parameters.customDomainUpdateProperties","purgeContentOperationSpec","validateCustomDomainOperationSpec","Mappers.AFDEndpointListResult","Mappers.AFDEndpoint","Parameters.endpointName","Parameters.endpoint","Parameters.endpointUpdateProperties","Parameters.contents","Mappers.ValidateCustomDomainOutput","Parameters.customDomainProperties","Mappers.AFDOriginGroupListResult","Mappers.AFDOriginGroup","Parameters.originGroupName","Parameters.originGroup","Parameters.originGroupUpdateProperties","Mappers.AFDOriginListResult","Mappers.AFDOrigin","Parameters.originName","Parameters.origin","Parameters.originUpdateProperties","listByEndpointOperationSpec","listByEndpointNextOperationSpec","Mappers.RouteListResult","Mappers.Route","Parameters.routeName","Parameters.route","Parameters.routeUpdateProperties","Mappers.RuleSetListResult","Mappers.RuleSet","Parameters.ruleSetName","Mappers.RuleListResult","Mappers.Rule","Parameters.ruleName","Parameters.rule","Parameters.ruleUpdateProperties","Mappers.SecurityPolicyListResult","Mappers.SecurityPolicy","Parameters.securityPolicyName","Parameters.securityPolicy","Parameters.securityPolicyUpdateProperties","Mappers.SecretListResult","Mappers.Secret","Parameters.secretName","Parameters.secret","Mappers.ValidateSecretOutput","Parameters.validateSecretInput","Mappers.MetricsResponse","Parameters.metrics","Parameters.dateTimeBegin","Parameters.dateTimeEnd","Parameters.granularity","Parameters.groupBy","Parameters.continents","Parameters.countryOrRegions","Parameters.customDomains","Parameters.protocols","Mappers.RankingsResponse","Parameters.rankings","Parameters.metrics1","Parameters.maxRanking","Parameters.customDomains1","Mappers.ContinentsResponse","Mappers.ResourcesResponse","Mappers.WafMetricsResponse","Parameters.metrics2","Parameters.granularity1","Parameters.actions","Parameters.groupBy1","Parameters.ruleTypes","Mappers.WafRankingsResponse","Parameters.rankings1","listOperationSpec","listNextOperationSpec","Mappers.ProfileListResult","Mappers.ErrorResponse","Mappers.Profile","Parameters.profile","Parameters.profileUpdateParameters","Mappers.SsoUri","Mappers.SupportedOptimizationTypesListResult","Mappers.ResourceUsageListResult","Mappers.EndpointListResult","Mappers.Endpoint","Parameters.endpoint1","Parameters.endpointUpdateProperties1","Parameters.contentFilePaths","Parameters.contentFilePaths1","Mappers.OriginListResult","Mappers.Origin","Parameters.origin1","Parameters.originUpdateProperties1","Mappers.OriginGroupListResult","Mappers.OriginGroup","Parameters.originGroup1","Parameters.originGroupUpdateProperties1","Mappers.CustomDomainListResult","Mappers.CustomDomain","Parameters.customDomainProperties1","Parameters.customDomainHttpsParameters","Mappers.OperationsListResult","Mappers.EdgenodeResult","Mappers.CdnWebApplicationFirewallPolicyList","Parameters.resourceGroupName1","Mappers.CdnWebApplicationFirewallPolicy","Parameters.policyName","Parameters.cdnWebApplicationFirewallPolicy","Parameters.cdnWebApplicationFirewallPolicyPatchParameters","Mappers.ManagedRuleSetDefinitionList","coreRestPipeline","Mappers.CheckEndpointNameAvailabilityOutput","Parameters.checkEndpointNameAvailabilityInput","Parameters.checkNameAvailabilityInput","Mappers.ValidateProbeOutput","Parameters.validateProbeInput"],"mappings":"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"}