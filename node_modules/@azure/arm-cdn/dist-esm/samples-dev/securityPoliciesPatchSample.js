/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { CdnManagementClient } from "@azure/arm-cdn";
import { DefaultAzureCredential } from "@azure/identity";
/**
 * This sample demonstrates how to Updates an existing security policy within a profile.
 *
 * @summary Updates an existing security policy within a profile.
 * x-ms-original-file: specification/cdn/resource-manager/Microsoft.Cdn/stable/2021-06-01/examples/SecurityPolicies_Patch.json
 */
function securityPoliciesPatch() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "subid";
        const resourceGroupName = "RG";
        const profileName = "profile1";
        const securityPolicyName = "securityPolicy1";
        const securityPolicyUpdateProperties = {
            parameters: {
                type: "WebApplicationFirewall",
                associations: [
                    {
                        domains: [
                            {
                                id: "/subscriptions/subid/resourcegroups/RG/providers/Microsoft.Cdn/profiles/profile1/customdomains/testdomain1"
                            },
                            {
                                id: "/subscriptions/subid/resourcegroups/RG/providers/Microsoft.Cdn/profiles/profile1/customdomains/testdomain2"
                            }
                        ],
                        patternsToMatch: ["/*"]
                    }
                ],
                wafPolicy: {
                    id: "/subscriptions/subid/resourcegroups/RG/providers/Microsoft.Network/frontdoorwebapplicationfirewallpolicies/wafTest"
                }
            }
        };
        const credential = new DefaultAzureCredential();
        const client = new CdnManagementClient(credential, subscriptionId);
        const result = yield client.securityPolicies.beginPatchAndWait(resourceGroupName, profileName, securityPolicyName, securityPolicyUpdateProperties);
        console.log(result);
    });
}
securityPoliciesPatch().catch(console.error);
//# sourceMappingURL=securityPoliciesPatchSample.js.map