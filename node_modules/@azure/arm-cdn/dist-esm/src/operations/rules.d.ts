import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Rules } from "../operationsInterfaces";
import { CdnManagementClient } from "../cdnManagementClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { Rule, RulesListByRuleSetOptionalParams, RulesGetOptionalParams, RulesGetResponse, RulesCreateOptionalParams, RulesCreateResponse, RuleUpdateParameters, RulesUpdateOptionalParams, RulesUpdateResponse, RulesDeleteOptionalParams } from "../models";
/** Class containing Rules operations. */
export declare class RulesImpl implements Rules {
    private readonly client;
    /**
     * Initialize a new instance of the class Rules class.
     * @param client Reference to the service client
     */
    constructor(client: CdnManagementClient);
    /**
     * Lists all of the existing delivery rules within a rule set.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param ruleSetName Name of the rule set under the profile.
     * @param options The options parameters.
     */
    listByRuleSet(resourceGroupName: string, profileName: string, ruleSetName: string, options?: RulesListByRuleSetOptionalParams): PagedAsyncIterableIterator<Rule>;
    private listByRuleSetPagingPage;
    private listByRuleSetPagingAll;
    /**
     * Lists all of the existing delivery rules within a rule set.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param ruleSetName Name of the rule set under the profile.
     * @param options The options parameters.
     */
    private _listByRuleSet;
    /**
     * Gets an existing delivery rule within a rule set.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param ruleSetName Name of the rule set under the profile.
     * @param ruleName Name of the delivery rule which is unique within the endpoint.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, profileName: string, ruleSetName: string, ruleName: string, options?: RulesGetOptionalParams): Promise<RulesGetResponse>;
    /**
     * Creates a new delivery rule within the specified rule set.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param ruleSetName Name of the rule set under the profile.
     * @param ruleName Name of the delivery rule which is unique within the endpoint.
     * @param rule The delivery rule properties.
     * @param options The options parameters.
     */
    beginCreate(resourceGroupName: string, profileName: string, ruleSetName: string, ruleName: string, rule: Rule, options?: RulesCreateOptionalParams): Promise<PollerLike<PollOperationState<RulesCreateResponse>, RulesCreateResponse>>;
    /**
     * Creates a new delivery rule within the specified rule set.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param ruleSetName Name of the rule set under the profile.
     * @param ruleName Name of the delivery rule which is unique within the endpoint.
     * @param rule The delivery rule properties.
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceGroupName: string, profileName: string, ruleSetName: string, ruleName: string, rule: Rule, options?: RulesCreateOptionalParams): Promise<RulesCreateResponse>;
    /**
     * Updates an existing delivery rule within a rule set.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param ruleSetName Name of the rule set under the profile.
     * @param ruleName Name of the delivery rule which is unique within the endpoint.
     * @param ruleUpdateProperties Delivery rule properties
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, profileName: string, ruleSetName: string, ruleName: string, ruleUpdateProperties: RuleUpdateParameters, options?: RulesUpdateOptionalParams): Promise<PollerLike<PollOperationState<RulesUpdateResponse>, RulesUpdateResponse>>;
    /**
     * Updates an existing delivery rule within a rule set.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param ruleSetName Name of the rule set under the profile.
     * @param ruleName Name of the delivery rule which is unique within the endpoint.
     * @param ruleUpdateProperties Delivery rule properties
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, profileName: string, ruleSetName: string, ruleName: string, ruleUpdateProperties: RuleUpdateParameters, options?: RulesUpdateOptionalParams): Promise<RulesUpdateResponse>;
    /**
     * Deletes an existing delivery rule within a rule set.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param ruleSetName Name of the rule set under the profile.
     * @param ruleName Name of the delivery rule which is unique within the endpoint.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, profileName: string, ruleSetName: string, ruleName: string, options?: RulesDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes an existing delivery rule within a rule set.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param ruleSetName Name of the rule set under the profile.
     * @param ruleName Name of the delivery rule which is unique within the endpoint.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, profileName: string, ruleSetName: string, ruleName: string, options?: RulesDeleteOptionalParams): Promise<void>;
    /**
     * ListByRuleSetNext
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param ruleSetName Name of the rule set under the profile.
     * @param nextLink The nextLink from the previous successful call to the ListByRuleSet method.
     * @param options The options parameters.
     */
    private _listByRuleSetNext;
}
//# sourceMappingURL=rules.d.ts.map